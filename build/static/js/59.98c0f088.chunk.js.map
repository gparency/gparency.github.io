{"version":3,"sources":["components/contacts/ContactEditContainer.js"],"names":["ContactEditContainer","this","props","actions","getContactById","match","params","contactId","getJobDescriptionTypesList","getContactTypeList","getContactInfoTypeList","getPrefixTypeList","getHolidayGreetingTypeList","getGiftTypeList","getStateList","isEmpty","contacts","contact","jobDescriptionTypes","length","contactTypes","contactInfoTypes","prefixTypes","holidayGreetingTypes","gaveGiftTypes","stateList","jobDescriptionTypesList","contactTypesList","contactInfoTypesList","prefixTypesList","holidayGreetingTypesList","gaveGiftTypesList","submitContact","loading","page","decodeURIComponent","previousPage","searchType","getParameterByName","submitContactForm","updateContact","clearContact","className","ariaHideApp","contentLabel","isOpen","shouldCloseOnOverlayClick","src","alt","React","Component","connect","state","dispatch","bindActionCreators","contactsActions"],"mappings":"mOASMA,E,kLAEFC,KAAKC,MAAMC,QAAQC,eAAeH,KAAKC,MAAMG,MAAMC,OAAOC,WAC1DN,KAAKC,MAAMC,QAAQK,6BACnBP,KAAKC,MAAMC,QAAQM,qBACnBR,KAAKC,MAAMC,QAAQO,yBACnBT,KAAKC,MAAMC,QAAQQ,oBACnBV,KAAKC,MAAMC,QAAQS,6BACnBX,KAAKC,MAAMC,QAAQU,kBACnBZ,KAAKC,MAAMC,QAAQW,iB,+BAInB,OACE,8BACIC,YAAQd,KAAKC,MAAMc,SAASC,UAC9BhB,KAAKC,MAAMc,SAASE,oBAAoBC,QACxClB,KAAKC,MAAMc,SAASI,aAAaD,QACjClB,KAAKC,MAAMc,SAASK,iBAAiBF,QACrClB,KAAKC,MAAMc,SAASM,YAAYH,QAChClB,KAAKC,MAAMc,SAASO,qBAAqBJ,QACzClB,KAAKC,MAAMc,SAASQ,cAAcL,QAClClB,KAAKC,MAAMc,SAASS,UAAUN,OAC5B,kBAAC,IAAD,CACEZ,UAAWN,KAAKC,MAAMG,MAAMC,OAAOC,UACnCmB,wBAAyBzB,KAAKC,MAAMc,SAASE,oBAC7CS,iBAAkB1B,KAAKC,MAAMc,SAASI,aACtCQ,qBAAsB3B,KAAKC,MAAMc,SAASK,iBAC1CQ,gBAAiB5B,KAAKC,MAAMc,SAASM,YACrCQ,yBAA0B7B,KAAKC,MAAMc,SAASO,qBAC9CQ,kBAAmB9B,KAAKC,MAAMc,SAASQ,cACvCC,UAAWxB,KAAKC,MAAMc,SAASS,UAC/BR,QAAShB,KAAKC,MAAMc,SAASC,QAC7Be,cAAe/B,KAAKC,MAAMc,SAASgB,cACnCC,QAAShC,KAAKC,MAAMc,SAASiB,QAC7BC,KAAMC,mBAAmBlC,KAAKC,MAAMG,MAAMC,OAAO8B,cACjDC,WAAYC,YAAmB,QAC/BC,kBAAmBtC,KAAKC,MAAMC,QAAQqC,cACtCC,aAAcxC,KAAKC,MAAMC,QAAQsC,eAGnC,kBAAC,IAAD,CACEC,UAAU,sBACVC,aAAa,EACbC,aAAa,QACbC,QAAQ,EACRC,2BAA2B,GAE3B,yBAAKJ,UAAU,oBACb,yBACEK,IAAI,yBACJL,UAAU,kBACVM,IAAI,2B,GApDeC,IAAMC,WA0E1BC,uBAZf,SAAyBC,GACvB,MAAO,CACLpC,SAAUoC,EAAMpC,aAIpB,SAA4BqC,GAC1B,MAAO,CACLlD,QAASmD,YAAmBC,EAAiBF,MAIlCF,CAGbnD","file":"static/js/59.98c0f088.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport { bindActionCreators } from \"redux\";\nimport * as contactsActions from \"../../actions/contactsActions\";\nimport ContactForm from \"./ContactForm\";\nimport { isEmpty } from \"../../lib\";\nimport getParameterByName from \"../common/getParameterByName\";\n\nclass ContactEditContainer extends React.Component {\n  componentDidMount() {\n    this.props.actions.getContactById(this.props.match.params.contactId);\n    this.props.actions.getJobDescriptionTypesList();\n    this.props.actions.getContactTypeList();\n    this.props.actions.getContactInfoTypeList();\n    this.props.actions.getPrefixTypeList();\n    this.props.actions.getHolidayGreetingTypeList();\n    this.props.actions.getGiftTypeList();\n    this.props.actions.getStateList();\n  }\n\n  render() {\n    return (\n      <div>\n        {!isEmpty(this.props.contacts.contact) &&\n        this.props.contacts.jobDescriptionTypes.length &&\n        this.props.contacts.contactTypes.length &&\n        this.props.contacts.contactInfoTypes.length &&\n        this.props.contacts.prefixTypes.length &&\n        this.props.contacts.holidayGreetingTypes.length &&\n        this.props.contacts.gaveGiftTypes.length &&\n        this.props.contacts.stateList.length ? (\n          <ContactForm\n            contactId={this.props.match.params.contactId}\n            jobDescriptionTypesList={this.props.contacts.jobDescriptionTypes}\n            contactTypesList={this.props.contacts.contactTypes}\n            contactInfoTypesList={this.props.contacts.contactInfoTypes}\n            prefixTypesList={this.props.contacts.prefixTypes}\n            holidayGreetingTypesList={this.props.contacts.holidayGreetingTypes}\n            gaveGiftTypesList={this.props.contacts.gaveGiftTypes}\n            stateList={this.props.contacts.stateList}\n            contact={this.props.contacts.contact}\n            submitContact={this.props.contacts.submitContact}\n            loading={this.props.contacts.loading}\n            page={decodeURIComponent(this.props.match.params.previousPage)}\n            searchType={getParameterByName(\"type\")}\n            submitContactForm={this.props.actions.updateContact}\n            clearContact={this.props.actions.clearContact}\n          />\n        ) : (\n          <Modal\n            className=\"comps-loading-modal\"\n            ariaHideApp={false}\n            contentLabel=\"modal\"\n            isOpen={true}\n            shouldCloseOnOverlayClick={false}\n          >\n            <div className=\"centered-spinner\">\n              <img\n                src=\"/images/icons/spin.svg\"\n                className=\"loading-spinner\"\n                alt=\"loading spinner\"\n              />\n            </div>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(contactsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ContactEditContainer);\n"],"sourceRoot":""}