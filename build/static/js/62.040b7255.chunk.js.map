{"version":3,"sources":["components/dealDetails/BankQuote.js","components/dealDetails/Dealinfo.js","components/dealDetails/BankQuotesPage.js","components/dealDetails/BankQuotesContainer.js"],"names":["BankQuote","props","className","md","item","bankName","isReward","src","alt","id","style","background","status","color","text","banker_id","onClick","openContactModal","banker","quoteDate","requestedAmount","quote","is_broker","notes","notes_edited_by","formatDate","notes_datetime","isPW","missingQuotesSnooze","quoteDialog","bind","quoteId","index","passQuote","snoozeDeal","irrelevantDeal","Dealinfo","title","value","BankQuotesPage","state","showContactModal","contactId","getFullContactInfo","setState","closeContactModal","quoteInfo","quoteStatus","push","key","quotedAmount","rate","term","amortization","ltv","recourse","prepayType","annualAmount","this","loading","bankQuotes","loadingContact","contact","Loader","length","map","window","location","pathname","includes","JSON","parse","localStorage","getItem","IsReward","getStatus","getQuote","ClientModal","isOpen","onRequestClose","onAfterOpen","noContact","isEmpty","React","Component","BankQuotesContainer","passModalOpen","snoozeModalOpen","irrelevantModalOpen","snoozeDate","moment","format","quote_id","comps","previousScrollPos","scrollTo","actions","loadBankQuotes","match","params","dealId","compsActions","popPageAndScrollPos","setPageAndScrollPos","scrollY","path","encodeURIComponent","Navigation","go","e","note","preventDefault","passDeal","date","closeUpdateIPDD","successMessage","missingQuotes","toast","show","Expire","closeToast","missingQuotesActions","delay","message","variant","success","dealDetails","errorMQBToast","closeQuoteUpdateErrorToast","noBankQuotes","NoteModal","closePassDialog","require","button","onSubmit","submitPassDialog","closeIrrelevantDialog","submitIrrelevantDialog","ariaHideApp","contentLabel","closeSnoozeDialog","shouldCloseOnOverlayClick","FormattedDatePicker","allowClear","dateValue","onChange","snoozeDateChange","submitSnoozeDialog","type","connect","dispatch","bindActionCreators","dealDetailsActions"],"mappings":"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","file":"static/js/62.040b7255.chunk.js","sourcesContent":["import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport { formatDate } from \"../../lib\";\n\nconst BankQuote = (props) => {\n  return (\n    <div className=\"bank-quote\">\n      <div className=\"panel mui-panel\">\n        <Row className=\"panel-heading\">\n          <Col md=\"10\">\n            <div className=\"bank-quote-title\">{props.item.bankName}</div>\n          </Col>\n          <Col md=\"2\">\n            {props.isReward === 1 ? (\n              <div className=\"bank-quote-reward\">\n                <img\n                  src={\"/images/icons/badge.png\"}\n                  alt=\"badge\"\n                  className=\"img-responsive\"\n                  id=\"badge-icon\"\n                />\n              </div>\n            ) : (\n              \"\"\n            )}\n          </Col>\n          <Col md=\"2\">\n            <div>\n              <span\n                className=\"deal-tag\"\n                style={{ background: props.status.color }}\n              >\n                {props.status.text}\n              </span>\n            </div>\n          </Col>\n        </Row>\n        <div className=\"panel-body\">\n          <Row>\n            <Col md=\"12\">\n              <Col md=\"3\">\n                <p className=\"small-title panel-info-title\">Banker Name</p>\n                {props.item.banker_id > 0 ? (\n                  <p\n                    className=\"large-text panel-info-value client-name\"\n                    onClick={() => props.openContactModal(props.item.banker_id)}\n                  >\n                    {props.item.banker}\n                  </p>\n                ) : (\n                  <p className=\"large-text panel-info-value\">N/A</p>\n                )}\n              </Col>\n              <Col md=\"3\">\n                <p className=\"small-title panel-info-title\">\n                  {props.isReward === 1 ? \"Updated Date\" : \"Requested Date\"}\n                </p>\n                <p className=\"large-text panel-info-value\">\n                  {props.item.quoteDate ? props.item.quoteDate : \"N/A\"}\n                </p>\n              </Col>\n              <Col md=\"3\">\n                <p className=\"small-title panel-info-title\">\n                  Requested Loan Amount\n                </p>\n                <p className=\"large-text panel-info-value\">\n                  {props.item.requestedAmount\n                    ? props.item.requestedAmount\n                    : \"N/A\"}\n                </p>\n              </Col>\n              {props.quote}\n            </Col>\n          </Row>\n\n          {props.is_broker && props.item.notes ? (\n            <Row className=\"note-container\">\n              <Col md=\"10\">\n                <p className=\"small-title deal-info-title\">Last Note</p>\n                <div>\n                  <p className=\"note\">{props.item.notes} &nbsp;</p>\n                  <p className=\"last-update\">\n                    <i>\n                      Last updated by {props.item.notes_edited_by} on{\" \"}\n                      {formatDate(props.item.notes_datetime)}\n                    </i>\n                  </p>\n                </div>\n              </Col>\n            </Row>\n          ) : (\n            \"\"\n          )}\n\n          <Row className={props.isPW ? \"deal-options\" : \"hidden\"}>\n            <div\n              className={\n                props.item.missingQuotesSnooze === 1\n                  ? \"deal-options-left\"\n                  : \"deal-options-left orange-text\"\n              }\n            >\n              <p\n                onClick={props.quoteDialog.bind(\n                  null,\n                  props.item.quoteId,\n                  props.index\n                )}\n              >\n                Quote\n              </p>\n              <p\n                onClick={props.passQuote.bind(\n                  null,\n                  props.item.quoteId,\n                  props.index\n                )}\n              >\n                Pass\n              </p>\n            </div>\n\n            <div\n              className={\n                props.item.missingQuotesSnooze === 1\n                  ? \"deal-options-right\"\n                  : \"deal-options-right\"\n              }\n            >\n              <p\n                onClick={props.snoozeDeal.bind(\n                  null,\n                  props.item.quoteId,\n                  props.index\n                )}\n                className={\n                  props.item.missingQuotesSnooze === 1 ? \"red-text\" : \"red-text\"\n                }\n              >\n                <img\n                  src=\"/images/icons/snooze-icon.png\"\n                  alt=\"snooze-icon\"\n                  className={\n                    props.item.missingQuotesSnooze === 1\n                      ? \"deal-snooze-icon\"\n                      : \"hidden\"\n                  }\n                />\n                {props.item.missingQuotesSnooze === 1 ? \"Snoozed\" : \"Snooze\"}\n              </p>\n              <p\n                onClick={props.irrelevantDeal.bind(\n                  null,\n                  props.item.quoteId,\n                  props.index\n                )}\n                className={\n                  props.item.missingQuotesSnooze === 1 ? \"\" : \"red-text\"\n                }\n              >\n                Irrelevant\n              </p>\n            </div>\n          </Row>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BankQuote;\n","import React from \"react\";\nimport Col from \"muicss/lib/react/col\";\n\nconst Dealinfo = (props) => (\n  <Col md=\"3\">\n    <p className=\"small-title panel-info-title\">{props.title}</p>\n    <p className=\"large-text panel-info-value\">\n      {props.value ? props.value : \"N/A\"}\n    </p>\n  </Col>\n);\n\nexport default Dealinfo;\n","import React from \"react\";\nimport BankQuote from \"./BankQuote\";\nimport Dealinfo from \"./Dealinfo\";\nimport Loader from \"../common/Loader\";\nimport { isEmpty } from \"../../lib/utils\";\nimport ClientModal from \"../common/ClientModal\";\n\nclass BankQuotesPage extends React.Component {\n  state = {\n    showContactModal: false,\n    contactId: null,\n  };\n\n  getStatus(value) {\n    let color = null;\n    let text = null;\n\n    if (value === 1) {\n      color = \"blue\";\n      text = \"Waiting\";\n    } else if (value === 2) {\n      color = \"green\";\n      text = \"Got Quote\";\n    } else if (value === 3) {\n      color = \"orange\";\n      text = \"Passed\";\n    } else if (value === 4) {\n      color = \"red\";\n      text = \"Irrelevant\";\n    } else if (value === 7) {\n      color = \"yellow\";\n      text = \"Waiting on EU\";\n    }\n\n    return { text, color };\n  }\n\n  getQuote(item) {\n    let quoteInfo = [];\n    if (item.quoteStatus === 2) {\n      quoteInfo.push(\n        <Dealinfo key=\"5\" title=\"Quoted Amount\" value={item.quotedAmount} />\n      );\n      quoteInfo.push(<Dealinfo key=\"6\" title=\"Rate\" value={item.rate} />);\n      quoteInfo.push(\n        <Dealinfo\n          key=\"7\"\n          title=\"Term / Amortization\"\n          value={item.term + \" / \" + item.amortization}\n        />\n      );\n      quoteInfo.push(<Dealinfo key=\"8\" title=\"LTV\" value={item.ltv} />);\n      quoteInfo.push(\n        <Dealinfo key=\"9\" title=\"Recourse\" value={item.recourse} />\n      );\n      quoteInfo.push(\n        <Dealinfo key=\"10\" title=\"Prepay\" value={item.prepayType} />\n      );\n      quoteInfo.push(\n        <Dealinfo key=\"11\" title=\"Annual Payments\" value={item.annualAmount} />\n      );\n    }\n    return quoteInfo;\n  }\n\n  openContactModal = (contactId) => {\n    this.props.getFullContactInfo(contactId);\n    this.setState({\n      showContactModal: true,\n      contactId,\n    });\n  };\n\n  closeContactModal = () => {\n    this.setState({ showContactModal: false });\n  };\n\n  render() {\n    const {\n      loading,\n      bankQuotes,\n      quoteDialog,\n      passQuote,\n      snoozeDeal,\n      irrelevantDeal,\n      loadingContact,\n      contact,\n    } = this.props;\n    return (\n      <div>\n        {loading ? (\n          <Loader />\n        ) : (\n          <div>\n            {bankQuotes && bankQuotes.length > 0 ? (\n              bankQuotes.map((item, index) => (\n                <BankQuote\n                  key={index}\n                  item={item}\n                  index={index}\n                  isPW={window.location.pathname.includes(\"broker\")}\n                  notes_datetime={item.notes_datetime}\n                  notes_edited_by={item.notes_edited_by}\n                  quoteDialog={quoteDialog}\n                  passQuote={passQuote}\n                  snoozeDeal={snoozeDeal}\n                  irrelevantDeal={irrelevantDeal}\n                  is_broker={JSON.parse(localStorage.getItem(\"data\")).is_broker}\n                  isReward={item.IsReward}\n                  status={this.getStatus(item.quoteStatus)}\n                  quote={this.getQuote(item)}\n                  openContactModal={this.openContactModal}\n                />\n              ))\n            ) : (\n              <div>\n                <div className=\"grey-circle\">\n                  <i className=\"material-icons\">warning</i>\n                </div>\n                <h2 className=\"no-results\">This deal has no bank quotes</h2>\n              </div>\n            )}\n\n            {this.state.showContactModal && (\n              <ClientModal\n                key={this.state.contactId}\n                isOpen={this.state.showContactModal}\n                onRequestClose={this.closeContactModal}\n                onAfterOpen={() => {}}\n                loading={loadingContact}\n                contact={contact}\n                noContact={isEmpty(contact)}\n              />\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\nexport default BankQuotesPage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Navigation } from \"../../lib\";\nimport * as missingQuotesActions from \"../../actions/missingQuotesActions\";\nimport * as dealDetailsActions from \"../../actions/dealDetailsActions\";\nimport * as compsActions from \"../../actions/compsActions\";\nimport BankQuotesPage from \"./BankQuotesPage\";\nimport Expire from \"../common/Expire\";\nimport Button from \"muicss/lib/react/button\";\nimport Modal from \"react-modal\";\nimport Form from \"muicss/lib/react/form\";\nimport moment from \"moment\";\nimport FormattedDatePicker from \"../common/FormattedDatePicker\";\nimport NoteModal from \"../common/NoteModal\";\n\nclass BankQuotesContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      passModalOpen: false,\n      snoozeModalOpen: false,\n      irrelevantModalOpen: false,\n      snoozeDate: moment().format(\"MM/DD/YYYY\"),\n      quote_id: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.comps.previousScrollPos) {\n      window.scrollTo(\n        0,\n        this.props.comps.previousScrollPos[\n          this.props.comps.previousScrollPos.length - 1\n        ]\n      );\n    }\n    this.props.actions.loadBankQuotes(this.props.match.params.dealId);\n    if (\n      this.props.comps.previousScrollPos &&\n      this.props.comps.previousScrollPos.length >= 2\n    ) {\n      this.props.compsActions.popPageAndScrollPos();\n    }\n  }\n\n  //open dialogs\n  quoteDialog(quote_id) {\n    this.props.compsActions.setPageAndScrollPos(\n      window.location.pathname,\n      window.scrollY\n    );\n    var path = encodeURIComponent(window.location.pathname);\n    Navigation.go(`/quote-form/1/${quote_id}/${path}`);\n  }\n\n  passQuote(quote_id) {\n    this.setState({ passModalOpen: true, quote_id: quote_id });\n  }\n\n  snoozeDeal(quote_id) {\n    this.setState({ snoozeModalOpen: true, quote_id: quote_id });\n  }\n\n  irrelevantDeal(quote_id) {\n    this.setState({ irrelevantModalOpen: true, quote_id: quote_id });\n  }\n\n  //submit / close dialogs\n  submitPassDialog(e, note) {\n    e.preventDefault();\n    this.props.actions.passDeal(this.state.quote_id, note);\n    this.setState({ passModalOpen: false, quote_id: \"\" });\n  }\n\n  closePassDialog(e) {\n    e.preventDefault();\n    this.setState({ passModalOpen: false, quote_id: \"\" });\n  }\n\n  submitIrrelevantDialog(e, note) {\n    e.preventDefault();\n    this.props.actions.irrelevantDeal(this.state.quote_id, note);\n    this.setState({ irrelevantModalOpen: false, quote_id: \"\" });\n  }\n\n  closeIrrelevantDialog(e) {\n    e.preventDefault();\n    this.setState({ irrelevantModalOpen: false, quote_id: \"\" });\n  }\n\n  submitSnoozeDialog(e) {\n    e.preventDefault();\n    this.props.actions.snoozeDeal(this.state.quote_id, this.state.snoozeDate);\n    this.setState({ snoozeModalOpen: false, quote_id: \"\", snoozeDate: \"\" });\n  }\n\n  closeSnoozeDialog(e) {\n    e.preventDefault();\n    this.setState({ snoozeModalOpen: false, quote_id: \"\", snoozeDate: \"\" });\n  }\n\n  snoozeDateChange(date) {\n    this.setState({ snoozeDate: date });\n  }\n\n  closeQuoteUpdateErrorToast() {\n    this.props.actions.closeUpdateIPDD();\n  }\n\n  render() {\n    let successMessage = null;\n    if (this.props.missingQuotes.toast && this.props.missingQuotes.toast.show) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.missingQuotesActions.closeToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.missingQuotes.toast.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.missingQuotesActions.closeToast}\n            >\n              {this.props.missingQuotes.toast.success ? \"Done\" : \"Dismiss\"}\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    if (this.props.dealDetails.errorMQBToast) {\n      successMessage = (\n        <Expire closeToast={this.closeQuoteUpdateErrorToast} delay={6000}>\n          <div className=\"success-message\">\n            <p>{this.props.dealDetails.message}</p>\n            <Button variant=\"flat\" onClick={this.closeQuoteUpdateErrorToast}>\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    return (\n      <div>\n        <BankQuotesPage\n          quoteDialog={this.quoteDialog.bind(this)}\n          passQuote={this.passQuote.bind(this)}\n          snoozeDeal={this.snoozeDeal.bind(this)}\n          irrelevantDeal={this.irrelevantDeal.bind(this)}\n          bankQuotes={this.props.dealDetails.bankQuotes}\n          noBankQuotes={this.props.dealDetails.noBankQuotes}\n          loading={this.props.dealDetails.loading}\n          contact={this.props.dealDetails.contact}\n          loadingContact={this.props.dealDetails.loadingContact}\n          getFullContactInfo={this.props.actions.getFullContactInfo}\n        />\n        {successMessage}\n\n        <NoteModal\n          isOpen={this.state.passModalOpen}\n          onRequestClose={this.closePassDialog.bind(this)}\n          onAfterOpen={() => {}}\n          require={false}\n          text={{ title: \"Reason for passing (optional)\", button: \"PASS\" }}\n          onSubmit={this.submitPassDialog.bind(this)}\n        />\n\n        <NoteModal\n          isOpen={this.state.irrelevantModalOpen}\n          onRequestClose={this.closeIrrelevantDialog.bind(this)}\n          onAfterOpen={() => {}}\n          require={false}\n          text={{\n            title: \"Reason for marking irrelevant (optional)\",\n            button: \"IRRELEVANT\",\n          }}\n          onSubmit={this.submitIrrelevantDialog.bind(this)}\n        />\n\n        <Modal\n          className=\"note-modal snooze-modal\"\n          isOpen={this.state.snoozeModalOpen}\n          ariaHideApp={false}\n          contentLabel=\"Modal\"\n          onAfterOpen={function () {}}\n          onRequestClose={this.closeSnoozeDialog.bind(this)}\n          shouldCloseOnOverlayClick={true}\n        >\n          <Form className=\"modal-form\">\n            <p className=\"add-note-modal\">Snooze Until</p>\n            <FormattedDatePicker\n              allowClear={false}\n              dateValue={moment().format(\"YYYY-MM-DD\")}\n              onChange={this.snoozeDateChange.bind(this)}\n            />\n            <div className=\"add-note-buttons\">\n              <Button\n                variant=\"flat\"\n                onClick={this.closeSnoozeDialog.bind(this)}\n              >\n                CANCEL\n              </Button>\n              <Button\n                variant=\"flat\"\n                onClick={this.submitSnoozeDialog.bind(this)}\n                type=\"submit\"\n                value=\"submit\"\n              >\n                OK\n              </Button>\n            </div>\n          </Form>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dealDetails: state.dealDetails,\n    missingQuotes: state.missingQuotes,\n    comps: state.comps,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(dealDetailsActions, dispatch),\n    missingQuotesActions: bindActionCreators(missingQuotesActions, dispatch),\n    compsActions: bindActionCreators(compsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BankQuotesContainer);\n"],"sourceRoot":""}