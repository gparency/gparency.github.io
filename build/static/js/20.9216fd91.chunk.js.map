{"version":3,"sources":["components/common/DealRatingModal.js","components/common/DealReviewModal.js","components/deals/PWDeal.js","components/deals/UWDeal.js","components/deals/IPInfoField.js","components/deals/IPDeal.js","actions/searchDealsActions.js","components/deals/SearchDealsHeader.js","components/deals/SearchDealsPage.js","components/deals/SearchDealsContainer.js"],"names":["DealRatingModal","props","state","rating","deal_rating","onRadioChange","bind","e","this","setState","currentTarget","value","parseInt","className","ariaHideApp","contentLabel","isOpen","onRequestClose","updateRating","onAfterOpen","style","content","margin","shouldCloseOnOverlayClick","onClick","type","name","id","checked","onChange","htmlFor","variant","React","Component","DealReviewModal","check_all","forecast_reviewed","ip_date_reviewed","notes_reviewed","nextProps","allReviewed","stopPropagation","target","checkAll","updateDealReview","checkHandler","disabled","forecast","ip_date","notes","cancel","PWDeal","dealClick","page","offsetParent","includes","deal","status_string","deal_id","total_violations","additional_properties","clickFunction","modalOpen","modalRatingOpen","modalReviewOpen","datePickerOpen","showMoreBrokers","ref","createRef","openModal","closeModal","openRatingModal","openReviewModal","closeReviewModal","getParameterByName","current","scrollIntoView","block","inline","contact_id","getFullContactInfo","qts_placer","date","changeExpectedIPDate","deal_status","property_type_id","broker_starred","deal_name","city_state","property_type","property_address","full_name","expected_inprocess_date","loan_amount","brokers","last_notes_by","notes_date","notes_due_date","note_count","TotalComps","total_complaints","inNYC","contact","loadingContact","isSearchPage","originators","brokersList","originatorsCounter","brokersCounter","forEach","broker","broker_name","broker_roles","md","sm","xs","key","DealStatusType","PW","getRatingColor","updateStar","src","alt","CL","moment","isValid","allowClear","dateValue","update","showDatePicker","length","substring","lastIndexOf","showMoreBrokersToggle","format","afterOpenModal","noContact","isEmpty","loading","addDealNoteClick","compsClick","formatTotalComps","UWDeal","InfoField","title","IPDeal","openContactModal","bank_name","banker_id","term","amortization","rate","expected_closing_date","ClientModal","closeContactModal","searchDeals","search","only_mine","dispatch","types","ajax","url","config","BASE_URL","applyAuthHeader","data","success","response","status","tokenExpired","next_page_url","current_page","closeToast","SearchDealsHeader","searchChange","previousPage","isMobile","window","isNativeApp","matchMedia","matches","innerWidth","to","marginTop","marginLeft","placeholder","color","fontSize","Navigation","go","encodeQueryData","previous_page","textAlign","minWidth","SearchDealsPage","showOnlyMine","dealsActions","updateExpectedIPDate","showOnlyMineToggle","loadSearchDeals","dealType","dealId","violations","compsActions","setPageAndScrollPos","location","pathname","scrollY","stringify","parse","propertyAddress","city","sessionStorage","setItem","submitCompsSearch","deals","currentPage","nextPageUrl","ipDeals","isAdmin","toast","Loader","show","Expire","delay","message","map","index","parseFloat","toFixed","toString","addDealNotesClick","updateDealReviewed","PageNavigation","PureComponent","connect","pwDeals","authentication","is_admin","actions","bindActionCreators","searchDealsAction","SearchDealsContainer","input","decodeURIComponent"],"mappings":"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","file":"static/js/20.9216fd91.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-modal\";\nimport Form from \"muicss/lib/react/form\";\nimport Button from \"muicss/lib/react/button\";\n\nclass DealRatingModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: this.props.deal_rating,\n    };\n    this.onRadioChange = this.onRadioChange.bind(this);\n  }\n\n  onRadioChange(e) {\n    this.setState({\n      rating: e.currentTarget.value ? parseInt(e.currentTarget.value, 10) : 0,\n    });\n  }\n\n  render() {\n    const customStyles = {\n      content: {\n        margin: \"auto\",\n      },\n    };\n\n    return (\n      <Modal\n        className=\"deal-rating-modal\"\n        ariaHideApp={false}\n        contentLabel=\"Modal\"\n        isOpen={this.props.isOpen}\n        onRequestClose={(e) => this.props.updateRating(this.state.rating, e)}\n        onAfterOpen={this.props.onAfterOpen}\n        style={customStyles}\n        shouldCloseOnOverlayClick={true}\n      >\n        <Form className=\"deal-rating-modal-form\">\n          <i\n            className=\"material-icons modal-exit\"\n            onClick={(e) => this.props.updateRating(this.state.rating, e)}\n          >\n            close\n          </i>\n          <h4 className=\"change-rating-header\">Forecast</h4>\n          <div className=\"deal-ratings-container\">\n            <input\n              className=\"radio-input\"\n              type=\"radio\"\n              name=\"1\"\n              id=\"radio1\"\n              checked={this.state.rating === 1}\n              onChange={this.onRadioChange}\n              value={1}\n            />\n            <label className=\"radio-label label-one\" htmlFor=\"radio1\">\n              1\n            </label>\n            <input\n              className=\"radio-input\"\n              type=\"radio\"\n              name=\"2\"\n              id=\"radio2\"\n              checked={this.state.rating === 2}\n              onChange={this.onRadioChange}\n              value={2}\n            />\n            <label className=\"radio-label label-two\" htmlFor=\"radio2\">\n              2\n            </label>\n            <input\n              className=\"radio-input\"\n              type=\"radio\"\n              name=\"3\"\n              id=\"radio3\"\n              checked={this.state.rating === 3}\n              onChange={this.onRadioChange}\n              value={3}\n            />\n            <label className=\"radio-label label-three\" htmlFor=\"radio3\">\n              3\n            </label>\n          </div>\n          <div>\n            <Button\n              variant=\"flat\"\n              className=\"deal-rating-modal-done\"\n              onClick={(e) => this.props.updateRating(this.state.rating, e)}\n            >\n              Done\n            </Button>\n          </div>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default DealRatingModal;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport Form from \"muicss/lib/react/form\";\nimport Button from \"muicss/lib/react/button\";\n\nexport default class DealReviewModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      check_all: false,\n      forecast_reviewed: null,\n      ip_date_reviewed: null,\n      notes_reviewed: null,\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      check_all: nextProps.allReviewed,\n      forecast_reviewed: nextProps.forecast_reviewed,\n      ip_date_reviewed: nextProps.ip_date_reviewed,\n      notes_reviewed: nextProps.notes_reviewed,\n    });\n  }\n\n  checkHandler(e) {\n    e.stopPropagation();\n    if (e.target.id === \"check_all\") {\n      if (e.target.checked) {\n        //check all checkboxes\n        this.setState({\n          check_all: true,\n          forecast_reviewed:\n            this.props.forecast_reviewed === null\n              ? \"touched\"\n              : this.props.forecast_reviewed,\n          ip_date_reviewed:\n            this.props.ip_date_reviewed === null\n              ? \"touched\"\n              : this.props.ip_date_reviewed,\n          notes_reviewed:\n            this.props.notes_reviewed === null\n              ? \"touched\"\n              : this.props.notes_reviewed,\n        });\n      } else {\n        //uncheck all checkboxes\n        this.setState({\n          check_all: false,\n          forecast_reviewed:\n            this.props.forecast_reviewed != null\n              ? this.props.forecast_reviewed\n              : null,\n          ip_date_reviewed:\n            this.props.ip_date_reviewed != null\n              ? this.props.ip_date_reviewed\n              : null,\n          notes_reviewed:\n            this.props.notes_reviewed != null\n              ? this.props.notes_reviewed\n              : null,\n        });\n      }\n    } else {\n      this.setState(\n        { [e.target.id]: e.target.checked === true ? \"touched\" : null },\n        () => {\n          let checkAll =\n            this.state.forecast_reviewed != null &&\n            this.state.ip_date_reviewed != null &&\n            this.state.notes_reviewed != null;\n          this.setState({ check_all: checkAll });\n        }\n      );\n    }\n  }\n\n  updateDealReview(e) {\n    this.props.updateDealReview(\n      this.state.forecast_reviewed,\n      this.state.ip_date_reviewed,\n      this.state.notes_reviewed\n    );\n    this.props.onRequestClose(e);\n  }\n\n  cancel(e) {\n    this.setState({\n      check_all: false,\n      forecast_reviewed: this.props.forecast_reviewed,\n      ip_date_reviewed: this.props.ip_date_reviewed,\n      notes_reviewed: this.props.notes_reviewed,\n    });\n\n    this.props.onRequestClose(e);\n  }\n\n  render() {\n    return (\n      <Modal\n        className=\"deal-rating-modal deal-review-modal\"\n        ariaHideApp={false}\n        contentLabel=\"Modal\"\n        isOpen={this.props.isOpen}\n        onRequestClose={(e) => this.props.onRequestClose(e)}\n        onAfterOpen={this.props.onAfterOpen}\n        shouldCloseOnOverlayClick={true}\n      >\n        <Form>\n          <i\n            className=\"material-icons modal-exit\"\n            onClick={(e) => this.props.onRequestClose(e)}\n          >\n            close\n          </i>\n          <h4 className=\"change-rating-header\">Review</h4>\n          <div className=\"rkmd-checkbox checkbox-ripple\">\n            <label className=\"input-checkbox checkbox-lightBlue\">\n              <input\n                type=\"checkbox\"\n                id=\"check_all\"\n                checked={this.state.check_all}\n                onChange={(e) => this.checkHandler(e)}\n                disabled={this.props.allReviewed}\n              />\n              <span className=\"checkbox\" />\n              <span className=\"ripple\" />\n            </label>\n            <p htmlFor=\"check_all\" className=\"label\">\n              Check All\n            </p>\n          </div>\n          <div className=\"rkmd-checkbox checkbox-ripple\">\n            <label className=\"input-checkbox checkbox-lightBlue\">\n              <input\n                type=\"checkbox\"\n                id=\"forecast_reviewed\"\n                checked={this.state.forecast_reviewed != null}\n                onChange={(e) => this.checkHandler(e)}\n                disabled={this.props.forecast_reviewed != null}\n              />\n              <span className=\"checkbox\" />\n              <span className=\"ripple\" />\n            </label>\n            <p htmlFor=\"forecast_reviewed\" className=\"label\">\n              Forecast\n            </p>\n            <p className=\"bold-text review-modal-detail\">\n              {this.props.forecast}\n            </p>\n          </div>\n          <div className=\"rkmd-checkbox checkbox-ripple\">\n            <label className=\"input-checkbox checkbox-lightBlue\">\n              <input\n                type=\"checkbox\"\n                id=\"ip_date_reviewed\"\n                checked={this.state.ip_date_reviewed != null}\n                onChange={(e) => this.checkHandler(e)}\n                disabled={this.props.ip_date_reviewed != null}\n              />\n              <span className=\"checkbox\" />\n              <span className=\"ripple\" />\n            </label>\n            <p htmlFor=\"ip_date_reviewed\" className=\"label\">\n              Expected IP Date\n            </p>\n            <p className=\"bold-text review-modal-detail\">\n              {this.props.ip_date}\n            </p>\n          </div>\n          <div className=\"rkmd-checkbox checkbox-ripple\">\n            <label className=\"input-checkbox checkbox-lightBlue\">\n              <input\n                type=\"checkbox\"\n                id=\"notes_reviewed\"\n                checked={this.state.notes_reviewed != null}\n                onChange={(e) => this.checkHandler(e)}\n                disabled={this.props.notes_reviewed != null}\n              />\n              <span className=\"checkbox\" />\n              <span className=\"ripple\" />\n            </label>\n            <p htmlFor=\"notes_reviewed\" className=\"label\">\n              Last Updated Note\n            </p>\n            <p className=\"review-modal-note\">{this.props.notes}</p>\n          </div>\n          <div className=\"modal-btns\">\n            <Button variant=\"flat\" onClick={(e) => this.cancel(e)}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"flat\"\n              onClick={(e) => this.updateDealReview(e)}\n              disabled={this.props.allReviewed}\n            >\n              Save\n            </Button>\n          </div>\n        </Form>\n      </Modal>\n    );\n  }\n}\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport ClientModal from \"../common/ClientModal\";\nimport DealRatingModal from \"../common/DealRatingModal\";\nimport DealReviewModal from \"../common/DealReviewModal\";\nimport FormattedDatePicker from \"../common/FormattedDatePicker\";\nimport moment from \"moment\";\nimport { formatTotalComps, isEmpty } from \"../../lib\";\nimport { DealStatusType } from \"../../lib/constants\";\nimport getParameterByName from \"../common/getParameterByName\";\n\nclass PWDeal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      modalRatingOpen: false,\n      modalReviewOpen: false,\n      datePickerOpen: false,\n      showMoreBrokers: false,\n    };\n\n    this.ref = React.createRef();\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.openRatingModal = this.openRatingModal.bind(this);\n    this.updateRating = this.updateRating.bind(this);\n\n    this.openReviewModal = this.openReviewModal.bind(this);\n    this.closeReviewModal = this.closeReviewModal.bind(this);\n    this.updateDealReview = this.updateDealReview.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.deal.deal_id === getParameterByName(\"deal_id\")) {\n      this.ref.current.scrollIntoView({\n        block: \"center\",\n        inline: \"center\",\n      });\n    }\n  }\n\n  async updateRating(deal_rating, e) {\n    e.stopPropagation();\n    this.setState({ modalRatingOpen: false });\n    await this.props.updateRating(this.props.deal.deal_id, deal_rating);\n    this.updateDealReview(\n      \"updated\",\n      this.props.deal.ip_date_reviewed,\n      this.props.deal.notes_reviewed\n    );\n  }\n\n  openModal(e) {\n    e.stopPropagation();\n    if (this.props.deal.contact_id) {\n      this.props.getFullContactInfo(this.props.deal.contact_id);\n      this.setState({\n        modalOpen: true,\n      });\n    }\n  }\n\n  openRatingModal(e) {\n    e.stopPropagation();\n    this.setState({\n      modalRatingOpen: true,\n    });\n  }\n\n  getRatingColor(rating) {\n    if (rating === 0) {\n      return \"circle-background green-circle\";\n    }\n    if (rating === 1) {\n      return \"circle-background yellow-circle\";\n    }\n    if (rating === 2) {\n      return \"circle-background pink-circle\";\n    }\n    if (rating === 3) {\n      return \"circle-background orange-circle\";\n    }\n  }\n\n  afterOpenModal() {}\n\n  closeModal(e) {\n    e.stopPropagation();\n    this.setState({ modalOpen: false });\n  }\n\n  openReviewModal(e) {\n    e.stopPropagation();\n    this.setState({ modalReviewOpen: true });\n  }\n\n  closeReviewModal(e) {\n    e.stopPropagation();\n    this.setState({ modalReviewOpen: false });\n  }\n\n  updateDealReview(forecast_reviewed, ip_date_reviewed, notes_reviewed) {\n    if (this.props.deal.qts_placer) {\n      this.props.updateDealReview(\n        this.props.deal.deal_id,\n        forecast_reviewed,\n        ip_date_reviewed,\n        notes_reviewed\n      );\n    }\n  }\n\n  changeExpectedIPDate(date) {\n    this.props.changeExpectedIPDate(this.props.deal.deal_id, date);\n    this.updateDealReview(\n      this.props.deal.forecast_reviewed,\n      \"updated\",\n      this.props.deal.notes_reviewed\n    );\n  }\n\n  showDatePicker(e) {\n    e.stopPropagation();\n    this.setState({ datePickerOpen: true });\n    // this.changeExpectedIPDate(moment().format(\"YYYY-MM-DD\"));\n  }\n\n  showMoreBrokersToggle(e) {\n    e.stopPropagation();\n    this.setState({ showMoreBrokers: !this.state.showMoreBrokers });\n  }\n\n  dealClick = (e, page = \"property-details\") => {\n    e.stopPropagation();\n    const className = e.target.offsetParent.className;\n    if (\n      !className.includes(\"Modal\") &&\n      !className.includes(\"react-date-picker\") &&\n      !className.includes(\"checkbox\")\n    ) {\n      const {\n        status_string,\n        deal_id,\n        total_violations,\n        additional_properties,\n      } = this.props.deal;\n      this.props.clickFunction(\n        status_string || \"PW\",\n        deal_id,\n        total_violations,\n        additional_properties,\n        page\n      );\n    }\n  };\n\n  render() {\n    const {\n      deal: {\n        deal_id,\n        deal_status,\n        status_string,\n        property_type_id,\n        broker_starred,\n        deal_name,\n        city_state,\n        property_type,\n        property_address,\n        additional_properties,\n        full_name,\n        contact_id,\n        expected_inprocess_date,\n        loan_amount,\n        brokers,\n        notes,\n        last_notes_by,\n        notes_date,\n        notes_due_date,\n        note_count,\n        deal_rating,\n        forecast_reviewed,\n        ip_date_reviewed,\n        notes_reviewed,\n        qts_placer,\n        TotalComps,\n        total_complaints,\n        total_violations,\n        inNYC,\n      },\n      contact,\n      loadingContact,\n      isSearchPage,\n    } = this.props;\n    var originators = \"\";\n    var brokersList = \"\";\n    let originatorsCounter = 0;\n    let brokersCounter = 0;\n    brokers &&\n      brokers.forEach((broker) => {\n        if (broker.broker_name) {\n          if (broker.broker_roles.includes(\"Originator\")) {\n            if (originatorsCounter >= 1) {\n              originators += \", \";\n            }\n            originators += broker.broker_name;\n            originatorsCounter++;\n          } else {\n            if (brokersCounter >= 1) {\n              brokersList += \", \";\n            }\n            brokersList += broker.broker_name;\n            brokersCounter++;\n          }\n        }\n      });\n    return (\n      <div ref={this.ref} className=\"pw-deal\">\n        <div className=\"panel mui-panel\" onClick={(e) => this.dealClick(e)}>\n          <Row className=\"panel-heading\">\n            <Col md=\"10\" sm=\"10\" xs=\"9\" key={deal_id}>\n              <div className=\"deal-name\">\n                <p className=\"panel-info-value property-title\">\n                  <b>\n                    <span>{deal_name || \"\"}</span>\n                  </b>\n                  <span className=\"deal-id\">ID {deal_id}</span>\n                  {(!isSearchPage || deal_status === DealStatusType.PW) && (\n                    <span\n                      onClick={(e) => this.openRatingModal(e)}\n                      className={this.getRatingColor.bind(this)(deal_rating)}\n                    >\n                      {deal_rating}\n                    </span>\n                  )}\n                  {isSearchPage && (\n                    <span className=\"deal-status-tag\">{status_string}</span>\n                  )}\n                </p>\n              </div>\n            </Col>\n            <Col md=\"2\" sm=\"2\" xs=\"3\">\n              <div\n                onClick={(e) =>\n                  this.props.updateStar(deal_id, broker_starred, e)\n                }\n                className=\"deal-star\"\n              >\n                <p>\n                  {broker_starred === 1 ? (\n                    <span className=\"ip-quote-star\">\n                      <i className=\"material-icons star-icon-orange\">star</i>\n                    </span>\n                  ) : (\n                    <span className=\"ip-quote-star\">\n                      <i className=\"material-icons star-icon-gray\">star</i>\n                    </span>\n                  )}\n                </p>\n              </div>\n              {!isSearchPage && qts_placer && (\n                <div\n                  className=\"r-icon\"\n                  onClick={(e) => this.openReviewModal(e)}\n                >\n                  {forecast_reviewed != null &&\n                  ip_date_reviewed != null &&\n                  notes_reviewed != null ? (\n                    <img\n                      src=\"/images/icons/review-icon-green.png\"\n                      alt=\"review-icon-green\"\n                    />\n                  ) : (\n                    <img\n                      src=\"/images/icons/review-icon-gray.png\"\n                      alt=\"review-icon-gray\"\n                    />\n                  )}\n                </div>\n              )}\n            </Col>\n          </Row>\n          <Row className=\"panel-body\">\n            <Row>\n              <Col md=\"4\">\n                <div>\n                  <p className=\"small-title deal-info-title\">Address</p>\n                  <p className=\"panel-info-value\">\n                    {property_address ? property_address : \"\"}\n                  </p>\n                  <p className=\"panel-info-value\">{city_state || \"\"}</p>\n                </div>\n                <div>\n                  <p className=\"panel-info-value\">\n                    <i className=\"orange-text orange-text-hover pointer\">\n                      {additional_properties === 0\n                        ? null\n                        : additional_properties === 1\n                        ? \"1 other property\"\n                        : additional_properties + \" other properties\"}\n                    </i>\n                  </p>\n                </div>\n              </Col>\n              <Col onClick={(e) => this.openModal(e)} md=\"2\">\n                <p className=\"small-title deal-info-title\">Name of Client</p>\n                <p\n                  className={\n                    contact_id\n                      ? \"panel-info-value client-name\"\n                      : \"panel-info-value\"\n                  }\n                >\n                  {full_name || \"N/A\"}\n                </p>\n              </Col>\n              <Col md=\"2\">\n                <p className=\"small-title deal-info-title\">Expected IP Date</p>\n                <div className=\"expected-ip\">\n                  {deal_status === DealStatusType.CL ? (\n                    <p className=\"panel-info-value client-name\">\n                      {expected_inprocess_date || \"N/A\"}\n                    </p>\n                  ) : (expected_inprocess_date !== null &&\n                      moment(expected_inprocess_date).isValid()) ||\n                    this.state.datePickerOpen ? (\n                    <FormattedDatePicker\n                      allowClear={false}\n                      dateValue={expected_inprocess_date}\n                      update={(e) => this.changeExpectedIPDate(e)}\n                    />\n                  ) : (\n                    <p\n                      className=\"panel-info-value client-name\"\n                      onClick={(e) => this.showDatePicker(e)}\n                    >\n                      + add date\n                    </p>\n                  )}\n                </div>\n              </Col>\n              <Col md=\"2\">\n                <div>\n                  <p className=\"small-title deal-info-title\">Property Type</p>\n                  <p className=\"panel-info-value\">{property_type || \"N/A\"}</p>\n                </div>\n              </Col>\n              <Col md=\"2\">\n                <div>\n                  <p className=\"small-title deal-info-title\">Loan Amount</p>\n                  <p className=\"panel-info-value\">{loan_amount || \"N/A\"}</p>\n                </div>\n              </Col>\n            </Row>\n            <Row className=\"brokers-container\">\n              <p className=\"small-title deal-info-title\">Brokers</p>\n              <p className=\"bold-text\">{originators}</p>\n              <div className=\"brokers-list\">\n                <p className=\"xs-text\">\n                  {brokersList.length > 150 && !this.state.showMoreBrokers\n                    ? brokersList.substring(\n                        0,\n                        brokersList.substring(0, 150).lastIndexOf(\", \")\n                      ) + \"...\"\n                    : brokersList}\n                  {brokersList.length > 150 ? (\n                    <span\n                      className=\"orange-text\"\n                      onClick={(e) => this.showMoreBrokersToggle(e)}\n                    >\n                      {this.state.showMoreBrokers ? \"Show Less\" : \"Show More\"}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </p>\n              </div>\n            </Row>\n            <Row className=\"note-container\">\n              <Col md=\"10\" key={deal_id}>\n                <div>\n                  {notes != null ? (\n                    <div>\n                      <p className=\"small-title deal-info-title notes-title\">\n                        <i>\n                          {last_notes_by} on {notes_date}\n                        </i>\n                      </p>\n                      <p className=\"note\">{notes}</p>\n                    </div>\n                  ) : (\n                    \" \"\n                  )}\n                </div>\n              </Col>\n            </Row>\n            {moment(notes_due_date).isValid() ? (\n              <Row>\n                <p className=\"small-title notes-title\">\n                  Remind me about this on\n                </p>\n                <div className=\"remind-me\">\n                  <p>\n                    <i className=\"material-icons\">date_range</i>\n                    {moment(notes_due_date).format(\"L\")}\n                  </p>\n                  <p>\n                    <i className=\"material-icons\">access_time</i>\n                    {moment(notes_due_date).format(\"LT\")}\n                  </p>\n                </div>\n              </Row>\n            ) : (\n              \" \"\n            )}\n            {this.state.modalOpen && (\n              <ClientModal\n                isOpen={true}\n                onRequestClose={this.closeModal}\n                onAfterOpen={this.afterOpenModal}\n                contact={contact}\n                name={full_name}\n                key={deal_id}\n                noContact={isEmpty(contact)}\n                loading={loadingContact}\n              />\n            )}\n            <DealRatingModal\n              isOpen={this.state.modalRatingOpen}\n              onAfterOpen={this.afterOpenModal}\n              deal_rating={deal_rating}\n              updateRating={this.updateRating}\n            />\n            <DealReviewModal\n              allReviewed={\n                forecast_reviewed && ip_date_reviewed && notes_reviewed\n              }\n              forecast={deal_rating}\n              forecast_reviewed={forecast_reviewed}\n              ip_date={expected_inprocess_date}\n              ip_date_reviewed={ip_date_reviewed}\n              notes={notes}\n              notes_reviewed={notes_reviewed}\n              isOpen={this.state.modalReviewOpen}\n              onRequestClose={this.closeReviewModal}\n              updateDealReview={this.updateDealReview}\n            />\n            <Divider />\n            <Row className=\"note-options\">\n              {deal_status !== DealStatusType.CL && (\n                <p\n                  className=\"orange-text xs-text inline-block\"\n                  onClick={(e) =>\n                    this.props.addDealNoteClick(\n                      \"PW\",\n                      deal_id,\n                      total_violations,\n                      additional_properties,\n                      e\n                    )\n                  }\n                >\n                  <i className=\"material-icons icon-left medium-text middle\">\n                    add\n                  </i>\n                  <i>Add Note</i>\n                </p>\n              )}\n              <div\n                className=\"view-all\"\n                onClick={(e) => this.dealClick(e, \"notes\")}\n              >\n                <p>View All Notes</p>\n                <p>{note_count}</p>\n              </div>\n            </Row>\n            <Divider />\n          </Row>\n          <Row className=\"comps-row\">\n            <div\n              onClick={(e) =>\n                this.props.compsClick(\n                  inNYC,\n                  property_address,\n                  city_state,\n                  property_type_id,\n                  e\n                )\n              }\n            >\n              <div className={total_violations !== null ? \"border-right\" : \"\"}>\n                <p className=\"violation-value comps\">\n                  {formatTotalComps(TotalComps)}\n                  <span>Comps</span>\n                </p>\n              </div>\n            </div>\n            <div\n              className={\n                total_violations !== null ? \"comps-row-violations\" : \"hidden\"\n              }\n              onClick={(e) => this.dealClick(e, \"violations\")}\n            >\n              <div>\n                <p className=\"violation-value\">\n                  {total_violations}\n                  <span>Violations</span>\n                </p>\n              </div>\n              <div>\n                <p className=\"violation-value\">\n                  {total_complaints}\n                  <span>Complaints</span>\n                </p>\n              </div>\n            </div>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PWDeal;\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport ClientModal from \"../common/ClientModal\";\nimport moment from \"moment\";\nimport { formatTotalComps, isEmpty } from \"../../lib\";\nimport { DealStatusType } from \"../../lib/constants\";\nimport getParameterByName from \"../common/getParameterByName\";\n\nclass UWDeal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      modalRatingOpen: false,\n      datePickerOpen: false,\n      showMoreBrokers: false,\n    };\n\n    this.ref = React.createRef();\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.deal.deal_id === getParameterByName(\"deal_id\")) {\n      this.ref.current.scrollIntoView({\n        block: \"center\",\n        inline: \"center\",\n      });\n    }\n  }\n\n  openModal(e) {\n    e.stopPropagation();\n    if (this.props.deal.contact_id) {\n      this.props.getFullContactInfo(this.props.deal.contact_id);\n      this.setState({\n        modalOpen: true,\n      });\n    }\n  }\n  afterOpenModal() {}\n\n  closeModal(e) {\n    e.stopPropagation();\n    this.setState({ modalOpen: false });\n  }\n\n  showDatePicker(e) {\n    e.stopPropagation();\n    this.setState({ datePickerOpen: true });\n    // this.changeExpectedIPDate(moment().format(\"YYYY-MM-DD\"));\n  }\n\n  showMoreBrokersToggle(e) {\n    e.stopPropagation();\n    this.setState({ showMoreBrokers: !this.state.showMoreBrokers });\n  }\n\n  dealClick = (e, page = \"property-details\") => {\n    e.stopPropagation();\n    const className = e.target.offsetParent.className;\n    if (\n      !className.includes(\"Modal\") &&\n      !className.includes(\"react-date-picker\") &&\n      !className.includes(\"checkbox\")\n    ) {\n      const {\n        status_string,\n        deal_id,\n        total_violations,\n        additional_properties,\n      } = this.props.deal;\n      this.props.clickFunction(\n        status_string || \"UW\",\n        deal_id,\n        total_violations,\n        additional_properties,\n        page\n      );\n    }\n  };\n\n  render() {\n    const {\n      deal: {\n        deal_id,\n        deal_status,\n        status_string,\n        property_type_id,\n        broker_starred,\n        deal_name,\n        city_state,\n        property_type,\n        property_address,\n        additional_properties,\n        full_name,\n        contact_id,\n        loan_amount,\n        brokers,\n        notes,\n        last_notes_by,\n        notes_date,\n        notes_due_date,\n        note_count,\n        TotalComps,\n        total_complaints,\n        total_violations,\n        inNYC,\n      },\n      contact,\n      loadingContact,\n      isSearchPage,\n    } = this.props;\n    var originators = \"\";\n    var brokersList = \"\";\n    let originatorsCounter = 0;\n    let brokersCounter = 0;\n    brokers &&\n      brokers.forEach((broker) => {\n        if (broker.broker_name) {\n          if (broker.broker_roles.includes(\"Originator\")) {\n            if (originatorsCounter >= 1) {\n              originators += \", \";\n            }\n            originators += broker.broker_name;\n            originatorsCounter++;\n          } else {\n            if (brokersCounter >= 1) {\n              brokersList += \", \";\n            }\n            brokersList += broker.broker_name;\n            brokersCounter++;\n          }\n        }\n      });\n    return (\n      <div ref={this.ref} className=\"pw-deal\">\n        <div className=\"panel mui-panel\" onClick={(e) => this.dealClick(e)}>\n          <Row className=\"panel-heading\">\n            <Col md=\"10\" sm=\"10\" xs=\"9\" key={deal_id}>\n              <div className=\"deal-name\">\n                <p className=\"panel-info-value property-title\">\n                  <b>\n                    <span>{deal_name || \"\"}</span>\n                  </b>\n                  <span className=\"deal-id\">ID {deal_id}</span>\n                  {isSearchPage && status_string && (\n                    <span className=\"deal-status-tag\">{status_string}</span>\n                  )}\n                </p>\n              </div>\n            </Col>\n            <Col md=\"2\" sm=\"2\" xs=\"3\">\n              <div\n                onClick={(e) =>\n                  this.props.updateStar(deal_id, broker_starred, e)\n                }\n                className=\"deal-star\"\n              >\n                <p>\n                  {broker_starred === 1 ? (\n                    <span className=\"ip-quote-star\">\n                      <i className=\"material-icons star-icon-orange\">star</i>\n                    </span>\n                  ) : (\n                    <span className=\"ip-quote-star\">\n                      <i className=\"material-icons star-icon-gray\">star</i>\n                    </span>\n                  )}\n                </p>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"panel-body\">\n            <Row>\n              <Col md=\"4\">\n                <div>\n                  <p className=\"small-title deal-info-title\">Address</p>\n                  <p className=\"panel-info-value\">\n                    {property_address ? property_address : \"\"}\n                  </p>\n                  <p className=\"panel-info-value\">{city_state || \"\"}</p>\n                </div>\n                <div>\n                  <p className=\"panel-info-value\">\n                    <i className=\"orange-text orange-text-hover pointer\">\n                      {additional_properties === 0\n                        ? null\n                        : additional_properties === 1\n                        ? \"1 other property\"\n                        : additional_properties + \" other properties\"}\n                    </i>\n                  </p>\n                </div>\n              </Col>\n              <Col onClick={(e) => this.openModal(e)} md=\"2\">\n                <p className=\"small-title deal-info-title\">Name of Client</p>\n                <p\n                  className={\n                    contact_id\n                      ? \"panel-info-value client-name\"\n                      : \"panel-info-value\"\n                  }\n                >\n                  {full_name || \"N/A\"}\n                </p>\n              </Col>\n              <Col md=\"2\">\n                <div>\n                  <p className=\"small-title deal-info-title\">Property Type</p>\n                  <p className=\"panel-info-value\">{property_type || \"N/A\"}</p>\n                </div>\n              </Col>\n              <Col md=\"2\">\n                <div>\n                  <p className=\"small-title deal-info-title\">Loan Amount</p>\n                  <p className=\"panel-info-value\">{loan_amount || \"N/A\"}</p>\n                </div>\n              </Col>\n            </Row>\n            <Row className=\"brokers-container\">\n              <p className=\"small-title deal-info-title\">Brokers</p>\n              <p className=\"bold-text\">{originators}</p>\n              <div className=\"brokers-list\">\n                <p className=\"xs-text\">\n                  {brokersList.length > 150 && !this.state.showMoreBrokers\n                    ? brokersList.substring(\n                        0,\n                        brokersList.substring(0, 150).lastIndexOf(\", \")\n                      ) + \"...\"\n                    : brokersList}\n                  {brokersList.length > 150 ? (\n                    <span\n                      className=\"orange-text\"\n                      onClick={(e) => this.showMoreBrokersToggle(e)}\n                    >\n                      {this.state.showMoreBrokers ? \"Show Less\" : \"Show More\"}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </p>\n              </div>\n            </Row>\n            <Row className=\"note-container\">\n              <Col md=\"10\" key={deal_id}>\n                <div>\n                  {notes != null ? (\n                    <div>\n                      <p className=\"small-title deal-info-title notes-title\">\n                        <i>\n                          {last_notes_by} on {notes_date}\n                        </i>\n                      </p>\n                      <p className=\"note\">{notes}</p>\n                    </div>\n                  ) : (\n                    \" \"\n                  )}\n                </div>\n              </Col>\n            </Row>\n            {moment(notes_due_date).isValid() ? (\n              <Row>\n                <p className=\"small-title notes-title\">\n                  Remind me about this on\n                </p>\n                <div className=\"remind-me\">\n                  <p>\n                    <i className=\"material-icons\">date_range</i>\n                    {moment(notes_due_date).format(\"L\")}\n                  </p>\n                  <p>\n                    <i className=\"material-icons\">access_time</i>\n                    {moment(notes_due_date).format(\"LT\")}\n                  </p>\n                </div>\n              </Row>\n            ) : (\n              \" \"\n            )}\n            {this.state.modalOpen && (\n              <ClientModal\n                isOpen={true}\n                onRequestClose={this.closeModal}\n                onAfterOpen={this.afterOpenModal}\n                contact={contact}\n                name={full_name}\n                key={deal_id}\n                noContact={isEmpty(contact)}\n                loading={loadingContact}\n              />\n            )}\n            <Divider />\n            <Row className=\"note-options\">\n              {deal_status !== DealStatusType.CL && (\n                <p\n                  className=\"orange-text xs-text inline-block\"\n                  onClick={(e) =>\n                    this.props.addDealNoteClick(\n                      \"UW\",\n                      deal_id,\n                      total_violations,\n                      additional_properties,\n                      e\n                    )\n                  }\n                >\n                  <i className=\"material-icons icon-left medium-text middle\">\n                    add\n                  </i>\n                  <i>Add Note</i>\n                </p>\n              )}\n              <div\n                className=\"view-all\"\n                onClick={(e) => this.dealClick(e, \"notes\")}\n              >\n                <p>View All Notes</p>\n                <p>{note_count}</p>\n              </div>\n            </Row>\n            <Divider />\n          </Row>\n          <Row className=\"comps-row\">\n            <div\n              onClick={(e) =>\n                this.props.compsClick(\n                  inNYC,\n                  property_address,\n                  city_state,\n                  property_type_id,\n                  e\n                )\n              }\n            >\n              <div className={total_violations !== null ? \"border-right\" : \"\"}>\n                <p className=\"violation-value comps\">\n                  {formatTotalComps(TotalComps)}\n                  <span>Comps</span>\n                </p>\n              </div>\n            </div>\n            <div\n              className={\n                total_violations !== null ? \"comps-row-violations\" : \"hidden\"\n              }\n              onClick={(e) => this.dealClick(e, \"violations\")}\n            >\n              <div>\n                <p className=\"violation-value\">\n                  {total_violations}\n                  <span>Violations</span>\n                </p>\n              </div>\n              <div>\n                <p className=\"violation-value\">\n                  {total_complaints}\n                  <span>Complaints</span>\n                </p>\n              </div>\n            </div>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UWDeal;\n","import React from \"react\";\nimport Col from \"muicss/lib/react/col\";\n\nconst InfoField = (props) => (\n  <Col md=\"3\">\n    <p className=\"small-title deal-info-title\">{props.title}</p>\n    <p className=\"panel-info-value\">{props.value ? props.value : \"N/A\"}</p>\n  </Col>\n);\n\nexport default InfoField;\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport ClientModal from \"../common/ClientModal\";\nimport moment from \"moment\";\nimport { formatTotalComps, isEmpty } from \"../../lib\";\nimport InfoField from \"./IPInfoField\";\nimport getParameterByName from \"../common/getParameterByName\";\n\nclass IPDeal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      showMoreBrokers: false,\n    };\n\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.deal.deal_id === getParameterByName(\"deal_id\")) {\n      this.ref.current.scrollIntoView({\n        block: \"center\",\n        inline: \"center\",\n      });\n    }\n  }\n\n  closeContactModal(e) {\n    e.stopPropagation();\n    this.setState({ modalOpen: false });\n  }\n\n  openContactModal = (id, e) => {\n    e.stopPropagation();\n    if (id) {\n      this.props.getFullContactInfo(id);\n      this.setState({\n        modalOpen: true,\n      });\n    }\n  };\n\n  showMoreBrokersToggle(e) {\n    e.stopPropagation();\n    this.setState({ showMoreBrokers: !this.state.showMoreBrokers });\n  }\n\n  dealClick = (e, page = \"property-details\") => {\n    e.stopPropagation();\n    const className = e.target.offsetParent.className;\n    if (\n      !className.includes(\"Modal\") &&\n      !className.includes(\"react-date-picker\") &&\n      !className.includes(\"checkbox\")\n    ) {\n      const {\n        deal_id,\n        total_violations,\n        additional_properties,\n      } = this.props.deal;\n      this.props.clickFunction(\n        \"IP\",\n        deal_id,\n        total_violations,\n        additional_properties,\n        page\n      );\n    }\n  };\n\n  render() {\n    const {\n      deal: {\n        deal_id,\n        status_string,\n        property_type_id,\n        broker_starred,\n        deal_name,\n        city_state,\n        property_type,\n        property_address,\n        additional_properties,\n        full_name,\n        contact_id,\n        loan_amount,\n        bank_name,\n        banker_id,\n        term,\n        amortization,\n        rate,\n        expected_closing_date,\n        brokers,\n        notes,\n        last_notes_by,\n        notes_date,\n        notes_due_date,\n        note_count,\n        TotalComps,\n        total_complaints,\n        total_violations,\n        inNYC,\n      },\n      contact,\n      loadingContact,\n      isSearchPage,\n    } = this.props;\n    var originators = \"\";\n    var brokersList = \"\";\n    let originatorsCounter = 0;\n    let brokersCounter = 0;\n    brokers &&\n      brokers.forEach((broker) => {\n        if (broker.broker_name) {\n          if (broker.broker_roles.includes(\"Originator\")) {\n            if (originatorsCounter >= 1) {\n              originators += \", \";\n            }\n            originators += broker.broker_name;\n            originatorsCounter++;\n          } else {\n            if (brokersCounter >= 1) {\n              brokersList += \", \";\n            }\n            brokersList += broker.broker_name;\n            brokersCounter++;\n          }\n        }\n      });\n    return (\n      <div ref={this.ref} className=\"ip-deal\">\n        <div className=\"panel mui-panel\" onClick={(e) => this.dealClick(e)}>\n          <Row className=\"panel-heading\">\n            <Col md=\"10\" sm=\"10\" xs=\"9\">\n              <div className=\"deal-name\">\n                <p className=\"panel-info-value property-title\">\n                  <b>{deal_name || \"\"}</b>\n                  <span className=\"deal-id\">ID {deal_id}</span>\n                  {isSearchPage && (\n                    <span className=\"deal-status-tag\">{status_string}</span>\n                  )}\n                </p>\n              </div>\n            </Col>\n            <Col md=\"2\" sm=\"2\" xs=\"3\">\n              <div\n                onClick={(e) =>\n                  this.props.updateStar(deal_id, broker_starred, e)\n                }\n                className=\"deal-star\"\n              >\n                <p>\n                  {broker_starred === 1 ? (\n                    <span className=\"ip-quote-star\">\n                      <i className=\"material-icons star-icon-orange\">star</i>\n                    </span>\n                  ) : (\n                    <span className=\"ip-quote-star\">\n                      <i className=\"material-icons star-icon-gray\">star</i>\n                    </span>\n                  )}\n                </p>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"panel-body\">\n            <Row>\n              <Col md=\"3\">\n                <div>\n                  <p className=\"small-title deal-info-title\">Address</p>\n                  <p className=\"panel-info-value\">{property_address || \"\"}</p>\n                  <p className=\"panel-info-value\">{city_state || \"\"}</p>\n                </div>\n                <div>\n                  <p className=\"panel-info-value\">\n                    <i className=\"orange-text\">\n                      {additional_properties === 0\n                        ? null\n                        : additional_properties === 1\n                        ? \"1 other property\"\n                        : additional_properties + \" other properties\"}\n                    </i>\n                  </p>\n                </div>\n              </Col>\n\n              <div>\n                <Col md=\"3\">\n                  <p className=\"small-title deal-info-title\">Property Type</p>\n                  <p className=\"panel-info-value\">{property_type || \"N/A\"}</p>\n                </Col>\n              </div>\n              <Col md=\"3\" onClick={(e) => this.openContactModal(contact_id, e)}>\n                <p className=\"small-title deal-info-title\">Name of Client</p>\n                <p\n                  className={\n                    contact_id\n                      ? \"panel-info-value client-name\"\n                      : \"panel-info-value\"\n                  }\n                >\n                  {full_name || \"N/A\"}\n                </p>\n              </Col>\n              <div>\n                <Col md=\"3\">\n                  <p className=\"small-title deal-info-title\">Loan Amount</p>\n                  <p className=\"panel-info-value\">{loan_amount || \"N/A\"}</p>\n                </Col>\n              </div>\n            </Row>\n            <div>\n              <Row>\n                <Col\n                  md=\"3\"\n                  onClick={(e) => this.openContactModal(banker_id, e)}\n                >\n                  <p className=\"small-title deal-info-title\">Bank</p>\n                  <p\n                    className={`panel-info-value ${\n                      bank_name ? \"client-name\" : \"\"\n                    }`}\n                  >\n                    {bank_name || \"N/A\"}\n                  </p>\n                </Col>\n                <InfoField\n                  key=\"2\"\n                  title=\"Term / Amortization\"\n                  value={(term || \"--\") + \" / \" + (amortization || \"--\")}\n                />\n                <InfoField key=\"1\" title=\"Rate\" value={rate} />\n                <InfoField\n                  key=\"4\"\n                  title=\"Expected Closing Date\"\n                  value={expected_closing_date}\n                />\n              </Row>\n            </div>\n            <Row className=\"brokers-container\">\n              <p className=\"small-title deal-info-title\">Brokers</p>\n              <p className=\"bold-text\">{originators}</p>\n              <div className=\"brokers-list\">\n                <p className=\"xs-text\">\n                  {brokersList.length > 155 && !this.state.showMoreBrokers\n                    ? brokersList.substring(\n                        0,\n                        brokersList.substring(0, 155).lastIndexOf(\", \")\n                      ) + \"...\"\n                    : brokersList}\n                  {brokersList.length > 150 ? (\n                    <span\n                      className=\"orange-text\"\n                      onClick={(e) => this.showMoreBrokersToggle(e)}\n                    >\n                      {this.state.showMoreBrokers ? \"Show Less\" : \"Show More\"}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </p>\n              </div>\n            </Row>\n            <Row className=\"note-container\">\n              <Col md=\"10\" key={deal_id}>\n                <div>\n                  {notes != null ? (\n                    <div>\n                      <p className=\"small-title deal-info-title notes-title\">\n                        <i>\n                          {last_notes_by} on {notes_date}\n                        </i>\n                      </p>\n                      <p className=\"note\">{notes}</p>\n                    </div>\n                  ) : (\n                    \" \"\n                  )}\n                </div>\n              </Col>\n            </Row>\n            {moment(notes_due_date).isValid() ? (\n              <Row>\n                <p className=\"small-title notes-title\">\n                  Remind me about this on\n                </p>\n                <div className=\"remind-me\">\n                  <p>\n                    <i className=\"material-icons\">date_range</i>\n                    {moment(notes_due_date).format(\"L\")}\n                  </p>\n                  <p>\n                    <i className=\"material-icons\">access_time</i>\n                    {moment(notes_due_date).format(\"LT\")}\n                  </p>\n                </div>\n              </Row>\n            ) : (\n              \" \"\n            )}\n            <ClientModal\n              isOpen={this.state.modalOpen}\n              onRequestClose={(e) => this.closeContactModal(e)}\n              onAfterOpen={() => {}}\n              contact={contact}\n              noContact={isEmpty(contact)}\n              loading={loadingContact}\n            />\n            <Divider />\n            <Row className=\"note-options\">\n              <p\n                className=\"orange-text xs-text inline-block\"\n                onClick={(e) =>\n                  this.props.addDealNoteClick(\n                    \"IP\",\n                    deal_id,\n                    total_violations,\n                    additional_properties,\n                    e\n                  )\n                }\n              >\n                <i className=\"material-icons icon-left medium-text middle\">\n                  add\n                </i>\n                <i>Add Note</i>\n              </p>\n              <div\n                className=\"view-all\"\n                onClick={(e) => this.dealClick(e, \"notes\")}\n              >\n                <p>View All Notes</p>\n                <p>{note_count}</p>\n              </div>\n            </Row>\n            <Divider />\n          </Row>\n          <div>\n            <Row>\n              <Col md=\"12\">\n                <Row className=\"comps-row\">\n                  <div\n                    onClick={(e) =>\n                      this.props.compsClick(\n                        inNYC,\n                        property_address,\n                        city_state,\n                        property_type_id,\n                        e\n                      )\n                    }\n                  >\n                    <div\n                      className={\n                        total_violations !== null ? \"border-right\" : \"\"\n                      }\n                    >\n                      <p className=\"violation-value comps\">\n                        {formatTotalComps(TotalComps)}\n                        <span>Comps</span>\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    className={\n                      total_violations !== null\n                        ? \"comps-row-violations\"\n                        : \"hidden\"\n                    }\n                    onClick={(e) => this.dealClick(e, \"violations\")}\n                  >\n                    <div>\n                      <p className=\"violation-value\">\n                        {total_violations}\n                        <span>Violations</span>\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"violation-value\">\n                        {total_complaints}\n                        <span>Complaints</span>\n                      </p>\n                    </div>\n                  </div>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IPDeal;\n","import * as types from \"./actionTypes\";\nimport config from \"../config\";\nimport { tokenExpired } from \"./authenticationActions\";\nimport { ajax } from \"../lib\";\n\nexport function searchDeals(search, page, only_mine) {\n  return (dispatch) => {\n    dispatch({ type: types.SEARCHING_DEALS });\n    ajax({\n      url: `${config.BASE_URL}search-deals`,\n      applyAuthHeader: true,\n      data: { search, page, only_mine },\n      success: function (response) {\n        switch (response.status) {\n          case \"E403\":\n            dispatch(tokenExpired());\n            break;\n          default:\n            response.data\n              ? dispatch({\n                  type: types.LOAD_SEARCH_DEALS,\n                  data: response.data.data,\n                  next_page_url: response.data.next_page_url,\n                  current_page: response.data.current_page,\n                })\n              : dispatch({\n                  type: types.LOAD_SEARCH_DEALS,\n                  data: [],\n                  next_page_url: null,\n                  current_page: null,\n                });\n            break;\n        }\n      },\n    });\n  };\n}\n\nexport function closeToast() {\n  return { type: types.CLOSE_SEARCH_DEALS_TOAST };\n}\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport { Navigation } from \"../../lib\";\nimport encodeQueryData from \"../common/encodeQueryData\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchDealsHeader = ({ search, searchChange, previousPage }) => {\n  const isMobile =\n    window.isNativeApp ||\n    window.matchMedia(\"(display-mode: standalone)\").matches ||\n    window.innerWidth < 901;\n  return (\n    <Row className=\"sub-header\">\n      {previousPage && (\n        <Link className=\"back-arrow\" to={previousPage}>\n          <img src=\"/images/icons/arrow-left.png\" alt=\"arrow-left\" />\n        </Link>\n      )}\n      <div className=\"nav-search-sub-header\">\n        <div>\n          <div></div>\n          <div\n            className=\"flex flex-center\"\n            style={{ marginTop: \"13px\", marginLeft: \"30px\" }}\n          >\n            <div className=\"search-container\">\n              <div className=\"search-form\">\n                <img\n                  id=\"search-icon-small\"\n                  src=\"/images/icons/search.png\"\n                  alt=\"search\"\n                />\n                <input\n                  onChange={searchChange}\n                  value={search}\n                  className=\"input\"\n                  type=\"text\"\n                  placeholder={\n                    isMobile\n                      ? \"Search Deals...\"\n                      : \"Search by Deal Name, Deal ID, Client Name, Broker...\"\n                  }\n                />\n              </div>\n            </div>\n            {isMobile && (\n              <div className=\"info-icon-container\">\n                <i\n                  className=\"material-icons\"\n                  style={{\n                    color: \"#fff\",\n                    fontSize: \"20px\",\n                    marginTop: \"-20px\",\n                  }}\n                >\n                  info\n                </i>\n                <span className=\"info-tooltip\">\n                  Search by Deal Name, Deal ID, Client Name, Broker...\n                </span>\n              </div>\n            )}\n            <p\n              onClick={() => {\n                Navigation.go(\n                  `/search-deals?${encodeQueryData({\n                    search,\n                    previous_page: previousPage,\n                  })}`\n                );\n              }}\n              className=\"orange-text\"\n              style={{\n                marginLeft: \"16px\",\n                textAlign: \"center\",\n                minWidth: \"63px\",\n              }}\n            >\n              Search All\n            </p>\n          </div>\n        </div>\n      </div>\n    </Row>\n  );\n};\n\nexport default SearchDealsHeader;\n","import React from \"react\";\nimport Button from \"muicss/lib/react/button\";\nimport { connect } from \"react-redux\";\nimport { parse, stringify } from \"query-string\";\nimport { bindActionCreators } from \"redux\";\nimport * as searchDealsAction from \"../../actions/searchDealsActions\";\nimport * as dealsActions from \"../../actions/dealsActions\";\nimport * as compsActions from \"../../actions/compsActions\";\nimport { Navigation } from \"../../lib\";\nimport PWDeal from \"./PWDeal\";\nimport IPDeal from \"./IPDeal\";\nimport UWDeal from \"./UWDeal\";\nimport Loader from \"../common/Loader\";\nimport PageNavigation from \"../common/PageNavigation\";\nimport Expire from \"../common/Expire\";\n\nconst dealType = \"SEARCH\";\n\nclass SearchDealsPage extends React.PureComponent {\n  state = {\n    showOnlyMine: false,\n  };\n\n  dealClick(dealType, dealId, violations, additional_properties, page) {\n    this.props.compsActions.setPageAndScrollPos(\n      window.location.pathname + window.location.search,\n      window.scrollY\n    );\n    Navigation.go(\n      `/broker-deal/${dealType}/${dealId}/${page}?${stringify({\n        ...parse(window.location.search),\n        violations,\n        additional_properties,\n        previous_page: window.location.pathname + window.location.search,\n      })}`\n    );\n  }\n\n  addDealNotesClick(dealType, dealId, violations, additional_properties, e) {\n    e.stopPropagation();\n    Navigation.go(\n      `/broker-deal/${dealType}/${dealId}/notes/add?${stringify({\n        violations,\n        additional_properties,\n      })}`\n    );\n  }\n\n  compsClick(inNYC, propertyAddress, city, property_type_id, e) {\n    e.stopPropagation();\n    sessionStorage.setItem(\"comps_inNYC\", inNYC);\n    this.props.compsActions.setPageAndScrollPos(\n      window.location.pathname + window.location.search,\n      window.scrollY\n    );\n    this.props.compsActions.submitCompsSearch(\n      `${propertyAddress} ${city}`,\n      property_type_id\n    );\n  }\n\n  updateStar(deal_id, broker_starred, e) {\n    e.stopPropagation();\n    this.props.dealsActions.updateStar(deal_id, broker_starred, dealType);\n  }\n\n  changeExpectedIPDate = (deal_id, date) => {\n    this.props.dealsActions.updateExpectedIPDate(deal_id, date, dealType);\n  };\n\n  showOnlyMineToggle = () => {\n    this.setState({ showOnlyMine: !this.state.showOnlyMine }, () =>\n      this.props.loadSearchDeals(this.state.showOnlyMine)\n    );\n  };\n\n  render() {\n    const { showOnlyMine } = this.state;\n    const {\n      deals,\n      currentPage,\n      nextPageUrl,\n      loading,\n      ipDeals: { loadingContact, contact },\n      isAdmin,\n      toast,\n      closeToast,\n    } = this.props;\n\n    return (\n      <div>\n        {loading && <Loader />}\n        {toast.show && (\n          <Expire closeToast={closeToast} delay={6000}>\n            <div className=\"success-message\">\n              <p>{toast.message}</p>\n              <Button variant=\"flat\" onClick={closeToast}>\n                {toast.success ? \"Done\" : \"Dismiss\"}\n              </Button>\n            </div>\n          </Expire>\n        )}\n        {deals && deals.length ? (\n          <div>\n            {isAdmin && (\n              <div className=\"rkmd-checkbox checkbox-ripple other-loans-check\">\n                <label className=\"input-checkbox checkbox-lightBlue\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"showOnlyMine\"\n                    checked={showOnlyMine}\n                    onChange={this.showOnlyMineToggle}\n                  />\n                  <span className=\"checkbox\"></span>\n                  <span className=\"ripple\"></span>\n                </label>\n                <p htmlFor=\"showOnlyMine\" className=\"label\">\n                  Show Only Mine\n                </p>\n              </div>\n            )}\n            {deals.map((deal, index) => {\n              if (deal.rate) {\n                deal.rate = +parseFloat(deal.rate).toFixed(3) + \"%\";\n              }\n              return deal.deal_status.toString() === \"2\" ? (\n                <IPDeal\n                  key={index}\n                  deal={deal}\n                  contact={contact}\n                  isSearchPage={true}\n                  loadingContact={loadingContact}\n                  clickFunction={this.dealClick.bind(this)}\n                  addDealNoteClick={this.addDealNotesClick.bind(this)}\n                  compsClick={this.compsClick.bind(this)}\n                  updateStar={this.updateStar.bind(this)}\n                  getFullContactInfo={\n                    this.props.dealsActions.getFullContactInfo\n                  }\n                />\n              ) : deal.deal_status.toString() === \"21\" ? (\n                <UWDeal\n                  key={index}\n                  deal={deal}\n                  contact={contact}\n                  isSearchPage={true}\n                  loadingContact={loadingContact}\n                  clickFunction={this.dealClick.bind(this)}\n                  addDealNoteClick={this.addDealNotesClick.bind(this)}\n                  compsClick={this.compsClick.bind(this)}\n                  updateStar={this.updateStar.bind(this)}\n                  getFullContactInfo={\n                    this.props.dealsActions.getFullContactInfo\n                  }\n                />\n              ) : (\n                <PWDeal\n                  key={index}\n                  deal={deal}\n                  contact={contact}\n                  isSearchPage={true}\n                  loadingContact={loadingContact}\n                  clickFunction={this.dealClick.bind(this)}\n                  addDealNoteClick={this.addDealNotesClick.bind(this)}\n                  compsClick={this.compsClick.bind(this)}\n                  updateStar={this.updateStar.bind(this)}\n                  updateRating={(deal_id, deal_rating) =>\n                    this.props.dealsActions.updateRating(\n                      deal_id,\n                      deal_rating,\n                      dealType\n                    )\n                  }\n                  updateDealReview={this.props.dealsActions.updateDealReviewed}\n                  changeExpectedIPDate={this.changeExpectedIPDate}\n                  getFullContactInfo={\n                    this.props.dealsActions.getFullContactInfo\n                  }\n                />\n              );\n            })}\n\n            <PageNavigation\n              currentPage={currentPage}\n              nextPageUrl={nextPageUrl}\n            />\n          </div>\n        ) : (\n          <div>\n            <div>\n              <div className=\"grey-circle\">\n                <i className=\"material-icons\">warning</i>\n              </div>\n              <h2 className=\"no-results\">No Search Results</h2>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    searchDeals: state.searchDeals,\n    ipDeals: state.ipDeals,\n    pwDeals: state.pwDeals,\n    isAdmin: state.authentication.data && state.authentication.data.is_admin,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(searchDealsAction, dispatch),\n    dealsActions: bindActionCreators(dealsActions, dispatch),\n    compsActions: bindActionCreators(compsActions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchDealsPage);\n","import React from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport * as searchDealsAction from \"../../actions/searchDealsActions\";\nimport getParameterByName from \"../common/getParameterByName\";\nimport SearchDealsHeader from \"./SearchDealsHeader\";\nimport SearchDealsPage from \"./SearchDealsPage\";\n\nclass SearchDealsContainer extends React.PureComponent {\n  state = {\n    input: \"\",\n  };\n\n  UNSAFE_componentWillMount() {\n    this.loadSearchDeals();\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.location.search !== nextProps.location.search) {\n      this.loadSearchDeals();\n    }\n  }\n\n  loadSearchDeals(showOnlyMine) {\n    this.setState({ input: getParameterByName(\"search\") });\n    this.props.actions.searchDeals(\n      getParameterByName(\"search\"),\n      getParameterByName(\"page\") || 1,\n      showOnlyMine ? 1 : 0\n    );\n  }\n\n  render() {\n    const {\n      data,\n      currentPage,\n      nextPageUrl,\n      loading,\n      toast,\n    } = this.props.searchDeals;\n    return (\n      <div className=\"deals-page\">\n        <SearchDealsHeader\n          search={this.state.input}\n          previousPage={decodeURIComponent(getParameterByName(\"previous_page\"))}\n          searchChange={(e) => {\n            this.setState({ input: e.target.value });\n          }}\n        />\n        <div className=\"contacts-container\">\n          <SearchDealsPage\n            deals={data}\n            currentPage={currentPage}\n            nextPageUrl={nextPageUrl}\n            loading={loading}\n            toast={toast}\n            closeToast={this.props.actions.closeToast}\n            loadSearchDeals={this.loadSearchDeals.bind(this)}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    searchDeals: state.searchDeals,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(searchDealsAction, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchDealsContainer);\n"],"sourceRoot":""}