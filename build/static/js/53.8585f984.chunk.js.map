{"version":3,"sources":["components/deals/IPInfoField.js","components/deals/IPDeal.js","components/deals/IPDealPage.js","components/deals/IPDealContainer.js"],"names":["InfoField","props","md","className","title","value","IPDeal","openContactModal","id","e","stopPropagation","getFullContactInfo","setState","modalOpen","dealClick","page","target","offsetParent","includes","deal","deal_id","total_violations","additional_properties","clickFunction","state","showMoreBrokers","ref","React","createRef","this","getParameterByName","current","scrollIntoView","block","inline","status_string","property_type_id","broker_starred","deal_name","city_state","property_type","property_address","full_name","contact_id","loan_amount","bank_name","banker_id","term","amortization","rate","expected_closing_date","brokers","notes","last_notes_by","notes_date","notes_due_date","note_count","TotalComps","total_complaints","inNYC","contact","loadingContact","isSearchPage","originators","brokersList","originatorsCounter","brokersCounter","forEach","broker","broker_name","broker_roles","onClick","sm","xs","updateStar","key","length","substring","lastIndexOf","showMoreBrokersToggle","moment","isValid","format","ClientModal","isOpen","onRequestClose","closeContactModal","onAfterOpen","noContact","isEmpty","loading","addDealNoteClick","compsClick","formatTotalComps","Component","IPDealPage","addDealNotesClick","bind","dealType","dealId","violations","setPageAndScrollPos","window","scrollY","Navigation","go","encodeQueryData","previous_page","location","pathname","search","propertyAddress","city","sessionStorage","setItem","submitCompsSearch","ipDeals","suggestions","map","item","index","ariaHideApp","contentLabel","shouldCloseOnOverlayClick","src","alt","noIPDeals","getObjectKeyByValue","DealStatusType","IP","IPDealContainer","updateSearch","comps","previousScrollPos","scrollTo","compsActions","resetScrollPosition","dealsActions","loadIPDeals","noDeals","connect","dispatch","bindActionCreators","navigationTitleActions"],"mappings":"gPAUeA,EAPG,SAACC,GAAD,OAChB,kBAAC,IAAD,CAAKC,GAAG,KACN,uBAAGC,UAAU,+BAA+BF,EAAMG,OAClD,uBAAGD,UAAU,oBAAoBF,EAAMI,MAAQJ,EAAMI,MAAQ,S,QCI3DC,E,kDACJ,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IAuBRM,iBAAmB,SAACC,EAAIC,GACtBA,EAAEC,kBACEF,IACF,EAAKP,MAAMU,mBAAmBH,GAC9B,EAAKI,SAAS,CACZC,WAAW,MA7BE,EAuCnBC,UAAY,SAACL,GAAkC,IAA/BM,EAA8B,uDAAvB,mBACrBN,EAAEC,kBACF,IAAMP,EAAYM,EAAEO,OAAOC,aAAad,UACxC,IACGA,EAAUe,SAAS,WACnBf,EAAUe,SAAS,uBACnBf,EAAUe,SAAS,YACpB,CAAC,IAAD,EAKI,EAAKjB,MAAMkB,KAHbC,EAFF,EAEEA,QACAC,EAHF,EAGEA,iBACAC,EAJF,EAIEA,sBAEF,EAAKrB,MAAMsB,cACT,KACAH,EACAC,EACAC,EACAP,KAvDJ,EAAKS,MAAQ,CACXX,WAAW,EACXY,iBAAiB,GAGnB,EAAKC,IAAMC,IAAMC,YAPA,E,gEAWbC,KAAK5B,MAAMkB,KAAKC,UAAYU,YAAmB,YACjDD,KAAKH,IAAIK,QAAQC,eAAe,CAC9BC,MAAO,SACPC,OAAQ,a,wCAKIzB,GAChBA,EAAEC,kBACFmB,KAAKjB,SAAS,CAAEC,WAAW,M,4CAaPJ,GACpBA,EAAEC,kBACFmB,KAAKjB,SAAS,CAAEa,iBAAkBI,KAAKL,MAAMC,oB,+BA0BrC,IAAD,SAmCHI,KAAK5B,MAnCF,IAELkB,KACEC,EAHG,EAGHA,QACAe,EAJG,EAIHA,cACAC,EALG,EAKHA,iBACAC,EANG,EAMHA,eACAC,EAPG,EAOHA,UACAC,EARG,EAQHA,WACAC,EATG,EASHA,cACAC,EAVG,EAUHA,iBACAnB,EAXG,EAWHA,sBACAoB,EAZG,EAYHA,UACAC,EAbG,EAaHA,WACAC,EAdG,EAcHA,YACAC,EAfG,EAeHA,UACAC,EAhBG,EAgBHA,UACAC,EAjBG,EAiBHA,KACAC,EAlBG,EAkBHA,aACAC,EAnBG,EAmBHA,KACAC,EApBG,EAoBHA,sBACAC,EArBG,EAqBHA,QACAC,EAtBG,EAsBHA,MACAC,EAvBG,EAuBHA,cACAC,EAxBG,EAwBHA,WACAC,EAzBG,EAyBHA,eACAC,EA1BG,EA0BHA,WACAC,EA3BG,EA2BHA,WACAC,EA5BG,EA4BHA,iBACArC,EA7BG,EA6BHA,iBACAsC,EA9BG,EA8BHA,MAEFC,EAhCK,EAgCLA,QACAC,EAjCK,EAiCLA,eACAC,EAlCK,EAkCLA,aAEEC,EAAc,GACdC,EAAc,GACdC,EAAqB,EACrBC,EAAiB,EAmBrB,OAlBAf,GACEA,EAAQgB,SAAQ,SAACC,GACXA,EAAOC,cACLD,EAAOE,aAAapD,SAAS,eAC3B+C,GAAsB,IACxBF,GAAe,MAEjBA,GAAeK,EAAOC,YACtBJ,MAEIC,GAAkB,IACpBF,GAAe,MAEjBA,GAAeI,EAAOC,YACtBH,SAKN,yBAAKxC,IAAKG,KAAKH,IAAKvB,UAAU,WAC5B,yBAAKA,UAAU,kBAAkBoE,QAAS,SAAC9D,GAAD,OAAO,EAAKK,UAAUL,KAC9D,kBAAC,IAAD,CAAKN,UAAU,iBACb,kBAAC,IAAD,CAAKD,GAAG,KAAKsE,GAAG,KAAKC,GAAG,KACtB,yBAAKtE,UAAU,aACb,uBAAGA,UAAU,mCACX,2BAAImC,GAAa,IACjB,0BAAMnC,UAAU,WAAhB,MAA8BiB,GAC7B0C,GACC,0BAAM3D,UAAU,mBAAmBgC,MAK3C,kBAAC,IAAD,CAAKjC,GAAG,IAAIsE,GAAG,IAAIC,GAAG,KACpB,yBACEF,QAAS,SAAC9D,GAAD,OACP,EAAKR,MAAMyE,WAAWtD,EAASiB,EAAgB5B,IAEjDN,UAAU,aAEV,2BACsB,IAAnBkC,EACC,0BAAMlC,UAAU,iBACd,uBAAGA,UAAU,mCAAb,SAGF,0BAAMA,UAAU,iBACd,uBAAGA,UAAU,iCAAb,aAOZ,kBAAC,IAAD,CAAKA,UAAU,cACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,GAAG,KACN,6BACE,uBAAGC,UAAU,+BAAb,WACA,uBAAGA,UAAU,oBAAoBsC,GAAoB,IACrD,uBAAGtC,UAAU,oBAAoBoC,GAAc,KAEjD,6BACE,uBAAGpC,UAAU,oBACX,uBAAGA,UAAU,eACgB,IAA1BmB,EACG,KAC0B,IAA1BA,EACA,mBACAA,EAAwB,wBAMpC,6BACE,kBAAC,IAAD,CAAKpB,GAAG,KACN,uBAAGC,UAAU,+BAAb,iBACA,uBAAGA,UAAU,oBAAoBqC,GAAiB,SAGtD,kBAAC,IAAD,CAAKtC,GAAG,IAAIqE,QAAS,SAAC9D,GAAD,OAAO,EAAKF,iBAAiBoC,EAAYlC,KAC5D,uBAAGN,UAAU,+BAAb,kBACA,uBACEA,UACEwC,EACI,+BACA,oBAGLD,GAAa,QAGlB,6BACE,kBAAC,IAAD,CAAKxC,GAAG,KACN,uBAAGC,UAAU,+BAAb,eACA,uBAAGA,UAAU,oBAAoByC,GAAe,UAItD,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE1C,GAAG,IACHqE,QAAS,SAAC9D,GAAD,OAAO,EAAKF,iBAAiBuC,EAAWrC,KAEjD,uBAAGN,UAAU,+BAAb,QACA,uBACEA,UAAS,2BACP0C,EAAY,cAAgB,KAG7BA,GAAa,QAGlB,kBAAC,EAAD,CACE8B,IAAI,IACJvE,MAAM,sBACNC,OAAQ0C,GAAQ,MAAQ,OAASC,GAAgB,QAEnD,kBAAC,EAAD,CAAW2B,IAAI,IAAIvE,MAAM,OAAOC,MAAO4C,IACvC,kBAAC,EAAD,CACE0B,IAAI,IACJvE,MAAM,wBACNC,MAAO6C,MAIb,kBAAC,IAAD,CAAK/C,UAAU,qBACb,uBAAGA,UAAU,+BAAb,WACA,uBAAGA,UAAU,aAAa4D,GAC1B,yBAAK5D,UAAU,gBACb,uBAAGA,UAAU,WACV6D,EAAYY,OAAS,MAAQ/C,KAAKL,MAAMC,gBACrCuC,EAAYa,UACV,EACAb,EAAYa,UAAU,EAAG,KAAKC,YAAY,OACxC,MACJd,EACHA,EAAYY,OAAS,IACpB,0BACEzE,UAAU,cACVoE,QAAS,SAAC9D,GAAD,OAAO,EAAKsE,sBAAsBtE,KAE1CoB,KAAKL,MAAMC,gBAAkB,YAAc,aAG9C,MAKR,kBAAC,IAAD,CAAKtB,UAAU,kBACb,kBAAC,IAAD,CAAKD,GAAG,KAAKyE,IAAKvD,GAChB,6BACY,MAATgC,EACC,6BACE,uBAAGjD,UAAU,2CACX,2BACGkD,EADH,OACsBC,IAGxB,uBAAGnD,UAAU,QAAQiD,IAGvB,OAKP4B,IAAOzB,GAAgB0B,UACtB,kBAAC,IAAD,KACE,uBAAG9E,UAAU,2BAAb,2BAGA,yBAAKA,UAAU,aACb,2BACE,uBAAGA,UAAU,kBAAb,cACC6E,IAAOzB,GAAgB2B,OAAO,MAEjC,2BACE,uBAAG/E,UAAU,kBAAb,eACC6E,IAAOzB,GAAgB2B,OAAO,SAKrC,IAEF,kBAACC,EAAA,EAAD,CACEC,OAAQvD,KAAKL,MAAMX,UACnBwE,eAAgB,SAAC5E,GAAD,OAAO,EAAK6E,kBAAkB7E,IAC9C8E,YAAa,aACb3B,QAASA,EACT4B,UAAWC,YAAQ7B,GACnB8B,QAAS7B,IAEX,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAK1D,UAAU,gBACb,uBACEA,UAAU,mCACVoE,QAAS,SAAC9D,GAAD,OACP,EAAKR,MAAM0F,iBACT,KACAvE,EACAC,EACAC,EACAb,KAIJ,uBAAGN,UAAU,+CAAb,OAGA,wCAEF,yBACEA,UAAU,WACVoE,QAAS,SAAC9D,GAAD,OAAO,EAAKK,UAAUL,EAAG,WAElC,6CACA,2BAAI+C,KAGR,kBAAC,IAAD,OAEF,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKtD,GAAG,MACN,kBAAC,IAAD,CAAKC,UAAU,aACb,yBACEoE,QAAS,SAAC9D,GAAD,OACP,EAAKR,MAAM2F,WACTjC,EACAlB,EACAF,EACAH,EACA3B,KAIJ,yBACEN,UACuB,OAArBkB,EAA4B,eAAiB,IAG/C,uBAAGlB,UAAU,yBACV0F,YAAiBpC,GAClB,0CAIN,yBACEtD,UACuB,OAArBkB,EACI,uBACA,SAENkD,QAAS,SAAC9D,GAAD,OAAO,EAAKK,UAAUL,EAAG,gBAElC,6BACE,uBAAGN,UAAU,mBACVkB,EACD,8CAGJ,6BACE,uBAAGlB,UAAU,mBACVuD,EACD,yD,GApXH/B,IAAMmE,WAkYZxF,O,mKCtYMyF,E,kDACnB,WAAY9F,GAAQ,IAAD,8BACjB,cAAMA,IAED+F,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBAHR,E,sDAMTC,EAAUC,EAAQC,EAAY9E,EAAuBP,GAC7Dc,KAAK5B,MAAMoG,oBAAoB,mBAAoBC,OAAOC,SAC1DC,IAAWC,GAAX,uBACkBP,EADlB,YAC8BC,EAD9B,YACwCpF,EADxC,YACgD2F,YAAgB,CAC5DN,aACA9E,wBACAqF,cAAeL,OAAOM,SAASC,SAAWP,OAAOM,SAASE,a,wCAK9CZ,EAAUC,EAAQC,EAAY9E,EAAuBb,GACrEA,EAAEC,kBACF8F,IAAWC,GAAX,uBACkBP,EADlB,YAC8BC,EAD9B,sBACkDO,YAAgB,CAC9DN,aACA9E,8B,iCAKKqC,EAAOoD,EAAiBC,EAAM5E,EAAkB3B,GACzDA,EAAEC,kBACFuG,eAAeC,QAAQ,cAAevD,GACtC9B,KAAK5B,MAAMoG,oBAAoB,mBAAoBC,OAAOC,SAC1D1E,KAAK5B,MAAMkH,kBAAX,UACKJ,EADL,YACwBC,GACtB5E,K,+BAIM,IAAD,OACHgF,EAAUvF,KAAK5B,MAAMoH,YAAYC,KAAI,SAACC,EAAMC,GAAP,OACvC,kBAAClH,EAAA,EAAD,CACEqE,IAAK6C,EACLrG,KAAMoG,EACN3D,QAAS,EAAK3D,MAAM2D,QACpBc,WAAY,EAAKzE,MAAMyE,WACvBnD,cAAe,EAAKT,UAAUmF,KAAK,GACnCN,iBAAkB,EAAKK,kBACvBnC,eAAgB,EAAK5D,MAAM4D,eAC3B+B,WAAY,EAAKA,WAAWK,KAAK,GACjCtF,mBAAoB,EAAKV,MAAMU,wBAGnC,OACE,yBAAKR,UAAU,WACb,6BAAMiH,GACN,kBAAC,IAAD,CACEjH,UAAU,gBACVsH,aAAa,EACbC,aAAa,QACbtC,OAAQvD,KAAK5B,MAAMyF,QACnBiC,2BAA2B,GAE3B,yBAAKxH,UAAW0B,KAAK5B,MAAMyF,QAAU,mBAAqB,UACxD,yBACEkC,IAAI,yBACJzH,UAAU,kBACV0H,IAAI,sBAIV,yBACE1H,WACG0B,KAAK5B,MAAMyF,UACX7D,KAAK5B,MAAM6H,WACTjG,KAAK5B,MAAMoH,aAAexF,KAAK5B,MAAMoH,YAAYzC,OAAS,GACzD,GACA,UAGN,6BACE,yBAAKzE,UAAU,eACb,uBAAGA,UAAU,kBAAb,YAEF,wBAAIA,UAAU,cAAd,8B,GAnF4BwB,IAAMmE,W,mCCIxCI,EAAW6B,YAAoBC,IAAgBA,IAAeC,IAE9DC,E,kDACJ,WAAYjI,GAAQ,IAAD,8BACjB,cAAMA,IACDyE,WAAa,EAAKA,WAAWuB,KAAhB,gBAClB,EAAKkC,aAAe,EAAKA,aAAalC,KAAlB,gBAHH,E,gEAOfpE,KAAK5B,MAAMmI,MAAMC,mBACjBxG,KAAK5B,MAAMmI,MAAMC,kBAAkBzD,QAEnC0B,OAAOgC,SACL,EACAzG,KAAK5B,MAAMmI,MAAMC,kBACfxG,KAAK5B,MAAMmI,MAAMC,kBAAkBzD,OAAS,IAIlD/C,KAAK5B,MAAMsI,aAAaC,sBACxB3G,KAAK5B,MAAMwI,aAAaC,gB,iCAEftH,EAASiB,GAClBR,KAAK5B,MAAMwI,aAAa/D,WAAWtD,EAASiB,EAAgB6D,K,mCAEjDmB,GACXxF,KAAK5B,MAAMwI,aAAaN,aAAad,EAAanB,K,+BAIlD,OACE,kBAAC,EAAD,CACEkB,QAASvF,KAAK5B,MAAMmH,QAAQA,QAC5BxD,QAAS/B,KAAK5B,MAAMmH,QAAQxD,QAC5ByD,YAAaxF,KAAK5B,MAAMmH,QAAQC,YAChCc,aAActG,KAAKsG,aACnBzC,QAAS7D,KAAK5B,MAAMmH,QAAQ1B,QAC5B7B,eAAgBhC,KAAK5B,MAAMmH,QAAQvD,eACnC8E,QAAS9G,KAAK5B,MAAMmH,QAAQU,UAC5BpD,WAAY7C,KAAK6C,WACjB/D,mBAAoBkB,KAAK5B,MAAMwI,aAAa9H,mBAC5C0F,oBAAqBxE,KAAK5B,MAAMsI,aAAalC,oBAC7Cc,kBAAmBtF,KAAK5B,MAAMsI,aAAapB,wB,GAzCrBxF,IAAMmE,WAiErB8C,uBAlBf,SAAyBpH,GACvB,MAAO,CACL4F,QAAS5F,EAAM4F,QACfgB,MAAO5G,EAAM4G,UAIjB,SAA4BS,GAC1B,MAAO,CACLJ,aAAcK,YAAmBL,EAAcI,GAC/CE,uBAAwBD,YACtBC,EACAF,GAEFN,aAAcO,YAAmBP,EAAcM,MAIpCD,CAA6CV","file":"static/js/53.8585f984.chunk.js","sourcesContent":["import React from \"react\";\nimport Col from \"muicss/lib/react/col\";\n\nconst InfoField = (props) => (\n  <Col md=\"3\">\n    <p className=\"small-title deal-info-title\">{props.title}</p>\n    <p className=\"panel-info-value\">{props.value ? props.value : \"N/A\"}</p>\n  </Col>\n);\n\nexport default InfoField;\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport ClientModal from \"../common/ClientModal\";\nimport moment from \"moment\";\nimport { formatTotalComps, isEmpty } from \"../../lib\";\nimport InfoField from \"./IPInfoField\";\nimport getParameterByName from \"../common/getParameterByName\";\n\nclass IPDeal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      showMoreBrokers: false,\n    };\n\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.deal.deal_id === getParameterByName(\"deal_id\")) {\n      this.ref.current.scrollIntoView({\n        block: \"center\",\n        inline: \"center\",\n      });\n    }\n  }\n\n  closeContactModal(e) {\n    e.stopPropagation();\n    this.setState({ modalOpen: false });\n  }\n\n  openContactModal = (id, e) => {\n    e.stopPropagation();\n    if (id) {\n      this.props.getFullContactInfo(id);\n      this.setState({\n        modalOpen: true,\n      });\n    }\n  };\n\n  showMoreBrokersToggle(e) {\n    e.stopPropagation();\n    this.setState({ showMoreBrokers: !this.state.showMoreBrokers });\n  }\n\n  dealClick = (e, page = \"property-details\") => {\n    e.stopPropagation();\n    const className = e.target.offsetParent.className;\n    if (\n      !className.includes(\"Modal\") &&\n      !className.includes(\"react-date-picker\") &&\n      !className.includes(\"checkbox\")\n    ) {\n      const {\n        deal_id,\n        total_violations,\n        additional_properties,\n      } = this.props.deal;\n      this.props.clickFunction(\n        \"IP\",\n        deal_id,\n        total_violations,\n        additional_properties,\n        page\n      );\n    }\n  };\n\n  render() {\n    const {\n      deal: {\n        deal_id,\n        status_string,\n        property_type_id,\n        broker_starred,\n        deal_name,\n        city_state,\n        property_type,\n        property_address,\n        additional_properties,\n        full_name,\n        contact_id,\n        loan_amount,\n        bank_name,\n        banker_id,\n        term,\n        amortization,\n        rate,\n        expected_closing_date,\n        brokers,\n        notes,\n        last_notes_by,\n        notes_date,\n        notes_due_date,\n        note_count,\n        TotalComps,\n        total_complaints,\n        total_violations,\n        inNYC,\n      },\n      contact,\n      loadingContact,\n      isSearchPage,\n    } = this.props;\n    var originators = \"\";\n    var brokersList = \"\";\n    let originatorsCounter = 0;\n    let brokersCounter = 0;\n    brokers &&\n      brokers.forEach((broker) => {\n        if (broker.broker_name) {\n          if (broker.broker_roles.includes(\"Originator\")) {\n            if (originatorsCounter >= 1) {\n              originators += \", \";\n            }\n            originators += broker.broker_name;\n            originatorsCounter++;\n          } else {\n            if (brokersCounter >= 1) {\n              brokersList += \", \";\n            }\n            brokersList += broker.broker_name;\n            brokersCounter++;\n          }\n        }\n      });\n    return (\n      <div ref={this.ref} className=\"ip-deal\">\n        <div className=\"panel mui-panel\" onClick={(e) => this.dealClick(e)}>\n          <Row className=\"panel-heading\">\n            <Col md=\"10\" sm=\"10\" xs=\"9\">\n              <div className=\"deal-name\">\n                <p className=\"panel-info-value property-title\">\n                  <b>{deal_name || \"\"}</b>\n                  <span className=\"deal-id\">ID {deal_id}</span>\n                  {isSearchPage && (\n                    <span className=\"deal-status-tag\">{status_string}</span>\n                  )}\n                </p>\n              </div>\n            </Col>\n            <Col md=\"2\" sm=\"2\" xs=\"3\">\n              <div\n                onClick={(e) =>\n                  this.props.updateStar(deal_id, broker_starred, e)\n                }\n                className=\"deal-star\"\n              >\n                <p>\n                  {broker_starred === 1 ? (\n                    <span className=\"ip-quote-star\">\n                      <i className=\"material-icons star-icon-orange\">star</i>\n                    </span>\n                  ) : (\n                    <span className=\"ip-quote-star\">\n                      <i className=\"material-icons star-icon-gray\">star</i>\n                    </span>\n                  )}\n                </p>\n              </div>\n            </Col>\n          </Row>\n          <Row className=\"panel-body\">\n            <Row>\n              <Col md=\"3\">\n                <div>\n                  <p className=\"small-title deal-info-title\">Address</p>\n                  <p className=\"panel-info-value\">{property_address || \"\"}</p>\n                  <p className=\"panel-info-value\">{city_state || \"\"}</p>\n                </div>\n                <div>\n                  <p className=\"panel-info-value\">\n                    <i className=\"orange-text\">\n                      {additional_properties === 0\n                        ? null\n                        : additional_properties === 1\n                        ? \"1 other property\"\n                        : additional_properties + \" other properties\"}\n                    </i>\n                  </p>\n                </div>\n              </Col>\n\n              <div>\n                <Col md=\"3\">\n                  <p className=\"small-title deal-info-title\">Property Type</p>\n                  <p className=\"panel-info-value\">{property_type || \"N/A\"}</p>\n                </Col>\n              </div>\n              <Col md=\"3\" onClick={(e) => this.openContactModal(contact_id, e)}>\n                <p className=\"small-title deal-info-title\">Name of Client</p>\n                <p\n                  className={\n                    contact_id\n                      ? \"panel-info-value client-name\"\n                      : \"panel-info-value\"\n                  }\n                >\n                  {full_name || \"N/A\"}\n                </p>\n              </Col>\n              <div>\n                <Col md=\"3\">\n                  <p className=\"small-title deal-info-title\">Loan Amount</p>\n                  <p className=\"panel-info-value\">{loan_amount || \"N/A\"}</p>\n                </Col>\n              </div>\n            </Row>\n            <div>\n              <Row>\n                <Col\n                  md=\"3\"\n                  onClick={(e) => this.openContactModal(banker_id, e)}\n                >\n                  <p className=\"small-title deal-info-title\">Bank</p>\n                  <p\n                    className={`panel-info-value ${\n                      bank_name ? \"client-name\" : \"\"\n                    }`}\n                  >\n                    {bank_name || \"N/A\"}\n                  </p>\n                </Col>\n                <InfoField\n                  key=\"2\"\n                  title=\"Term / Amortization\"\n                  value={(term || \"--\") + \" / \" + (amortization || \"--\")}\n                />\n                <InfoField key=\"1\" title=\"Rate\" value={rate} />\n                <InfoField\n                  key=\"4\"\n                  title=\"Expected Closing Date\"\n                  value={expected_closing_date}\n                />\n              </Row>\n            </div>\n            <Row className=\"brokers-container\">\n              <p className=\"small-title deal-info-title\">Brokers</p>\n              <p className=\"bold-text\">{originators}</p>\n              <div className=\"brokers-list\">\n                <p className=\"xs-text\">\n                  {brokersList.length > 155 && !this.state.showMoreBrokers\n                    ? brokersList.substring(\n                        0,\n                        brokersList.substring(0, 155).lastIndexOf(\", \")\n                      ) + \"...\"\n                    : brokersList}\n                  {brokersList.length > 150 ? (\n                    <span\n                      className=\"orange-text\"\n                      onClick={(e) => this.showMoreBrokersToggle(e)}\n                    >\n                      {this.state.showMoreBrokers ? \"Show Less\" : \"Show More\"}\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                </p>\n              </div>\n            </Row>\n            <Row className=\"note-container\">\n              <Col md=\"10\" key={deal_id}>\n                <div>\n                  {notes != null ? (\n                    <div>\n                      <p className=\"small-title deal-info-title notes-title\">\n                        <i>\n                          {last_notes_by} on {notes_date}\n                        </i>\n                      </p>\n                      <p className=\"note\">{notes}</p>\n                    </div>\n                  ) : (\n                    \" \"\n                  )}\n                </div>\n              </Col>\n            </Row>\n            {moment(notes_due_date).isValid() ? (\n              <Row>\n                <p className=\"small-title notes-title\">\n                  Remind me about this on\n                </p>\n                <div className=\"remind-me\">\n                  <p>\n                    <i className=\"material-icons\">date_range</i>\n                    {moment(notes_due_date).format(\"L\")}\n                  </p>\n                  <p>\n                    <i className=\"material-icons\">access_time</i>\n                    {moment(notes_due_date).format(\"LT\")}\n                  </p>\n                </div>\n              </Row>\n            ) : (\n              \" \"\n            )}\n            <ClientModal\n              isOpen={this.state.modalOpen}\n              onRequestClose={(e) => this.closeContactModal(e)}\n              onAfterOpen={() => {}}\n              contact={contact}\n              noContact={isEmpty(contact)}\n              loading={loadingContact}\n            />\n            <Divider />\n            <Row className=\"note-options\">\n              <p\n                className=\"orange-text xs-text inline-block\"\n                onClick={(e) =>\n                  this.props.addDealNoteClick(\n                    \"IP\",\n                    deal_id,\n                    total_violations,\n                    additional_properties,\n                    e\n                  )\n                }\n              >\n                <i className=\"material-icons icon-left medium-text middle\">\n                  add\n                </i>\n                <i>Add Note</i>\n              </p>\n              <div\n                className=\"view-all\"\n                onClick={(e) => this.dealClick(e, \"notes\")}\n              >\n                <p>View All Notes</p>\n                <p>{note_count}</p>\n              </div>\n            </Row>\n            <Divider />\n          </Row>\n          <div>\n            <Row>\n              <Col md=\"12\">\n                <Row className=\"comps-row\">\n                  <div\n                    onClick={(e) =>\n                      this.props.compsClick(\n                        inNYC,\n                        property_address,\n                        city_state,\n                        property_type_id,\n                        e\n                      )\n                    }\n                  >\n                    <div\n                      className={\n                        total_violations !== null ? \"border-right\" : \"\"\n                      }\n                    >\n                      <p className=\"violation-value comps\">\n                        {formatTotalComps(TotalComps)}\n                        <span>Comps</span>\n                      </p>\n                    </div>\n                  </div>\n                  <div\n                    className={\n                      total_violations !== null\n                        ? \"comps-row-violations\"\n                        : \"hidden\"\n                    }\n                    onClick={(e) => this.dealClick(e, \"violations\")}\n                  >\n                    <div>\n                      <p className=\"violation-value\">\n                        {total_violations}\n                        <span>Violations</span>\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"violation-value\">\n                        {total_complaints}\n                        <span>Complaints</span>\n                      </p>\n                    </div>\n                  </div>\n                </Row>\n              </Col>\n            </Row>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IPDeal;\n","import React from \"react\";\nimport { Navigation } from \"../../lib\";\nimport IPDeal from \"./IPDeal\";\nimport Modal from \"react-modal\";\nimport encodeQueryData from \"../common/encodeQueryData\";\n\nexport default class IPDealPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addDealNotesClick = this.addDealNotesClick.bind(this);\n  }\n\n  dealClick(dealType, dealId, violations, additional_properties, page) {\n    this.props.setPageAndScrollPos(\"/broker-deals/ip\", window.scrollY);\n    Navigation.go(\n      `/broker-deal/${dealType}/${dealId}/${page}?${encodeQueryData({\n        violations,\n        additional_properties,\n        previous_page: window.location.pathname + window.location.search,\n      })}`\n    );\n  }\n\n  addDealNotesClick(dealType, dealId, violations, additional_properties, e) {\n    e.stopPropagation();\n    Navigation.go(\n      `/broker-deal/${dealType}/${dealId}/notes/add?${encodeQueryData({\n        violations,\n        additional_properties,\n      })}`\n    );\n  }\n\n  compsClick(inNYC, propertyAddress, city, property_type_id, e) {\n    e.stopPropagation();\n    sessionStorage.setItem(\"comps_inNYC\", inNYC);\n    this.props.setPageAndScrollPos(\"/broker-deals/ip\", window.scrollY);\n    this.props.submitCompsSearch(\n      `${propertyAddress} ${city}`,\n      property_type_id\n    );\n  }\n\n  render() {\n    let ipDeals = this.props.suggestions.map((item, index) => (\n      <IPDeal\n        key={index}\n        deal={item}\n        contact={this.props.contact}\n        updateStar={this.props.updateStar}\n        clickFunction={this.dealClick.bind(this)}\n        addDealNoteClick={this.addDealNotesClick}\n        loadingContact={this.props.loadingContact}\n        compsClick={this.compsClick.bind(this)}\n        getFullContactInfo={this.props.getFullContactInfo}\n      />\n    ));\n    return (\n      <div className=\"ip-deal\">\n        <div>{ipDeals}</div>\n        <Modal\n          className=\"loading-modal\"\n          ariaHideApp={false}\n          contentLabel=\"Modal\"\n          isOpen={this.props.loading}\n          shouldCloseOnOverlayClick={false}\n        >\n          <div className={this.props.loading ? \"centered-spinner\" : \"hidden\"}>\n            <img\n              src=\"/images/icons/spin.svg\"\n              className=\"loading-spinner\"\n              alt=\"loading spinner\"\n            />\n          </div>\n        </Modal>\n        <div\n          className={\n            !this.props.loading &&\n            (this.props.noIPDeals ||\n              (this.props.suggestions && this.props.suggestions.length < 1))\n              ? \"\"\n              : \"hidden\"\n          }\n        >\n          <div>\n            <div className=\"grey-circle\">\n              <i className=\"material-icons\">warning</i>\n            </div>\n            <h2 className=\"no-results\">No Deals In Process</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as dealsActions from \"../../actions/dealsActions\";\nimport IPDealPage from \"./IPDealPage\";\nimport * as navigationTitleActions from \"../../actions/navigationTitleActions\";\nimport * as compsActions from \"../../actions/compsActions\";\nimport { getObjectKeyByValue } from \"../../lib/utils\";\nimport { DealStatusType } from \"../../lib/constants\";\n\nconst dealType = getObjectKeyByValue(DealStatusType, DealStatusType.IP);\n\nclass IPDealContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateStar = this.updateStar.bind(this);\n    this.updateSearch = this.updateSearch.bind(this);\n  }\n  componentDidMount() {\n    if (\n      this.props.comps.previousScrollPos &&\n      this.props.comps.previousScrollPos.length\n    ) {\n      window.scrollTo(\n        0,\n        this.props.comps.previousScrollPos[\n          this.props.comps.previousScrollPos.length - 1\n        ]\n      );\n    }\n    this.props.compsActions.resetScrollPosition();\n    this.props.dealsActions.loadIPDeals();\n  }\n  updateStar(deal_id, broker_starred) {\n    this.props.dealsActions.updateStar(deal_id, broker_starred, dealType);\n  }\n  updateSearch(suggestions) {\n    this.props.dealsActions.updateSearch(suggestions, dealType);\n  }\n\n  render() {\n    return (\n      <IPDealPage\n        ipDeals={this.props.ipDeals.ipDeals}\n        contact={this.props.ipDeals.contact}\n        suggestions={this.props.ipDeals.suggestions}\n        updateSearch={this.updateSearch}\n        loading={this.props.ipDeals.loading}\n        loadingContact={this.props.ipDeals.loadingContact}\n        noDeals={this.props.ipDeals.noIPDeals}\n        updateStar={this.updateStar}\n        getFullContactInfo={this.props.dealsActions.getFullContactInfo}\n        setPageAndScrollPos={this.props.compsActions.setPageAndScrollPos}\n        submitCompsSearch={this.props.compsActions.submitCompsSearch}\n      />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ipDeals: state.ipDeals,\n    comps: state.comps,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dealsActions: bindActionCreators(dealsActions, dispatch),\n    navigationTitleActions: bindActionCreators(\n      navigationTitleActions,\n      dispatch\n    ),\n    compsActions: bindActionCreators(compsActions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IPDealContainer);\n"],"sourceRoot":""}