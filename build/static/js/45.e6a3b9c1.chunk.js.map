{"version":3,"sources":["actions/qtsActions.js","components/QTS/QTSQuotesContainer.js","components/QTS/Quote.js","components/QTS/ReonomyLoan.js","components/QTS/QTSQuotes.js"],"names":["getLendingTypeList","dispatch","ajax","url","config","BASE_URL","success","response","status","type","types","data","getPropertyTypes","a","getListByType","TypesList","PropertyType","loadBrokerDeals","latitude","longitude","state","city","property_types","radius","date_range","applyAuthHeader","tokenExpired","getFullContactInfo","contact_id","length","contact","contacts","loadBankResults","searchParams","banks","error","handleAPIError","default","404","loadQTSRatesResults","console","log","loadQuotes","updateErrorToast","errorMessage","message","closeToast","getParameterListByBank","bank_id","lendingList","lending_programs","loadQTSMap","range_a","range_b","range_c","range_d","show_inactive","ipChecked","pwChecked","clChecked","salesChecked","financeChecked","bank_name","in_nyc","Object","keys","forEach","key","center","PW","IP","Closed","Sales","Finance","Inactive","QTSQuotes","props","isOpened","modalOpen","bankerName","bankerId","this","qts","quotes","loadingQuotes","bankName","className","lg","md","sm","to","pathname","search","window","location","src","alt","activeClassName","children","React","Component","connect","QTS","qtsActions","bindActionCreators","Quote","item","property_street_number","property_street_name","property_city","property_state","property_zip","authentication","is_broker","onClick","openStreetView","property_type","no_of_units","square_footage","formatWithCommas","banker_id","openContactModal","banker_name","broker_edited","broker_entered_name","quote_date","formatDate","quoted_amount","formatCurrency","rate","term","amortization","ltv","deals","deal_brokers_details","filter","b","is_originator","face_of_deal","broker_of_record","map","index","brokerName","first_name","last_name","member_contact_id","property_address","property_city_state_zip","mortgage_date","loan_amount","units","sq_footage","num_floors","price_per_sq_ft","price_per_unit","distance","Math","round","google","afterOpenModal","bind","closeModal","getParameterByName","decodeURIComponent","split","p","parseInt","min_loan","replace","max_loan","bank","banker","lender_types","note_search","search_type","setState","lat","long","num","name","zip","maps","StreetViewService","getPanorama","parseFloat","lng","Navigation","go","encodeQueryData","address","city_state_zip","authData","JSON","parse","localStorage","getItem","toast","show","Expire","delay","variant","qtsQuotes","qts_quotes","openStreetViewQuote","reonomyLoans","national_data_deals","ReonomyLoan","openStreetViewReonomy","QTSQuotesContainer","ariaHideApp","shouldCloseOnOverlayClick","contentLabel","isOpen","ClientModal","onRequestClose","onAfterOpen","loading","loadingContact","noContact"],"mappings":"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","file":"static/js/45.e6a3b9c1.chunk.js","sourcesContent":["import * as types from \"./actionTypes\";\nimport config from \"../config\";\nimport { tokenExpired } from \"./authenticationActions\";\nimport { ajax } from \"../lib\";\nimport { TypesList } from \"../lib\";\nimport { getListByType, handleAPIError } from \"../lib\";\n\nexport function getLendingTypeList() {\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}lending-types`,\n      success: (response) => {\n        switch (response.status) {\n          case \"200\":\n            dispatch({ type: types.LOAD_LENDING_TYPES, data: response.data });\n            break;\n          default:\n            dispatch({ type: types.LOAD_LENDING_TYPES, data: [] });\n            break;\n        }\n      },\n    });\n  };\n}\n\nexport function getPropertyTypes() {\n  return async (dispatch) => {\n    let data = await getListByType(TypesList.PropertyType);\n    dispatch({ type: types.LOAD_PROPERTY_TYPE_LIST, data });\n  };\n}\n\nexport function loadBrokerDeals(\n  latitude,\n  longitude,\n  state,\n  city,\n  property_types,\n  radius,\n  date_range\n) {\n  let data = {};\n  if (city && state) {\n    data = { state, city, property_types, date_range };\n  } else {\n    data = { latitude, longitude, state, property_types, radius, date_range };\n  }\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_DEALS });\n    ajax({\n      url: `${config.BASE_URL}qts-broker-deals`,\n      applyAuthHeader: true,\n      data: data,\n      success: function (response) {\n        switch (response.status) {\n          case \"204\":\n            dispatch({ type: types.NO_DEAL_DATA });\n            break;\n          case \"E107\":\n            dispatch(tokenExpired());\n            break;\n          default:\n            dispatch({\n              type: types.LOAD_QTS_BROKER_DEALS,\n              data: response.data,\n            });\n        }\n      },\n    });\n  };\n}\n\nexport function getFullContactInfo(contact_id) {\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_FULL_CONTACT });\n    ajax({\n      url: `${config.BASE_URL}contact/${contact_id}`,\n      applyAuthHeader: true,\n      success: function (response) {\n        if (response.data && response.data.length >= 1) {\n          dispatch({\n            type: types.LOAD_FULL_CONTACT,\n            contact: response.data[0].contacts[0],\n          });\n        } else {\n          dispatch({ type: types.NO_FULL_CONTACT });\n        }\n      },\n    });\n  };\n}\n\nexport function loadBankResults(searchParams) {\n  if (searchParams.city) {\n    delete searchParams.latitude;\n    delete searchParams.longitude;\n  }\n\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_QUOTES });\n    ajax({\n      url: `${config.BASE_URL}qts-banks`,\n      applyAuthHeader: true,\n      data: { ...searchParams },\n      success: function (response) {\n        response.data && response.data.banks.length > 0\n          ? dispatch({ type: types.LOAD_QTS_BANK_QUOTES, data: response.data })\n          : dispatch({ type: types.NO_QUOTE_DATA });\n      },\n      error: handleAPIError(dispatch, {\n        default: { type: types.LOAD_QTS_BANK_DEALS_FAILED },\n        404: { type: types.NO_QUOTE_DATA },\n      }),\n    });\n  };\n}\nexport function loadQTSRatesResults(searchParams) {\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_QUOTES });\n    ajax({\n      url: `${config.BASE_URL}qts-rates`,\n      applyAuthHeader: true,\n      data: { ...searchParams },\n      success: function (response) {\n        console.log(\"response\", response.data);\n        response.data && response.data.length > 0\n          ? dispatch({ type: types.LOAD_QTS_RATES, data: response.data })\n          : dispatch({ type: types.NO_RATE_DATA });\n      },\n      error: handleAPIError(dispatch, {\n        default: { type: types.LOAD_QTS_RATES_FAILED },\n        404: { type: types.NO_RATE_DATA },\n      }),\n    });\n  };\n}\n\nexport function loadQuotes(searchParams) {\n  if (searchParams.city) {\n    delete searchParams.latitude;\n    delete searchParams.longitude;\n  }\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_QUOTES });\n    ajax({\n      url: `${config.BASE_URL}qts-banks`,\n      applyAuthHeader: true,\n      data: { ...searchParams },\n      success: function (response) {\n        dispatch({\n          type: types.LOAD_QTS_QUOTES,\n          data: response.data ? response.data.banks[0] : {},\n        });\n      },\n      error: handleAPIError(dispatch, types.LOAD_QTS_QUOTES_FAILED),\n    });\n  };\n}\n\nexport function updateErrorToast(errorMessage) {\n  return { type: types.UPDATE_ERROR_TOAST, message: errorMessage };\n}\n\nexport function closeToast() {\n  return { type: types.CLOSE_ASK_QTS_TOAST };\n}\n\nexport function getParameterListByBank(bank_id) {\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_PARAM_LIST });\n    ajax({\n      url: `${config.BASE_URL}get-lending`,\n      applyAuthHeader: true,\n      data: { bank_id },\n      success: function (response) {\n        switch (response.status) {\n          case \"E404\":\n            dispatch(tokenExpired());\n            break;\n          case \"204\":\n            dispatch({ type: types.LOAD_PARAM_LIST, lendingList: [] });\n            break;\n          case \"E413\":\n            dispatch({\n              type: types.LOAD_PARAM_LIST_FAILED,\n              message: response.message,\n            });\n            break;\n          default:\n            dispatch({\n              type: types.LOAD_PARAM_LIST,\n              lendingList: response.data.lending_programs,\n            });\n            break;\n        }\n      },\n    });\n  };\n}\n\nexport function loadQTSMap(\n  latitude,\n  longitude,\n  city,\n  state,\n  property_types,\n  radius,\n  date_range,\n  range_a,\n  range_b,\n  range_c,\n  range_d,\n  show_inactive,\n  ipChecked,\n  pwChecked,\n  clChecked,\n  salesChecked,\n  financeChecked,\n  bank_name,\n  in_nyc\n) {\n  let data = {};\n  if (city && state) {\n    data = {\n      city,\n      state,\n      property_types,\n      bank_name,\n      range_a,\n      range_b,\n      range_c,\n      range_d,\n      date_range,\n      show_inactive,\n      in_nyc,\n    };\n  } else {\n    data = {\n      latitude,\n      longitude,\n      property_types,\n      bank_name,\n      range_a,\n      range_b,\n      range_c,\n      range_d,\n      date_range,\n      radius,\n      show_inactive,\n      in_nyc,\n    };\n  }\n  Object.keys(data).forEach(\n    (key) => (data[key] === null || data[key] === \"\") && delete data[key]\n  );\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_QTS_MAP });\n    ajax({\n      url: `${config.BASE_URL}qts-map`,\n      applyAuthHeader: true,\n      data: data,\n      success: function (response) {\n        switch (response.status) {\n          case \"E403\":\n            dispatch(tokenExpired());\n            break;\n          case \"E404\":\n            dispatch(tokenExpired());\n            break;\n          case \"204\":\n            dispatch({\n              type: types.NO_QTS_MAP_DATA,\n              center: {\n                latitude: latitude,\n                longitude: longitude,\n              },\n              message: response.message,\n            });\n            break;\n          case \"E107\":\n            dispatch({\n              type: types.NO_QTS_MAP_DATA,\n              center: {\n                latitude: latitude,\n                longitude: longitude,\n              },\n              message: response.message,\n            });\n            break;\n          default:\n            let data = {\n              PW: pwChecked ? response.data.PW : [],\n              IP: ipChecked ? response.data.IP : [],\n              Closed: clChecked ? response.data.Closed : [],\n              Sales: salesChecked ? response.data.Sales : [],\n              Finance: financeChecked ? response.data.Finance : [],\n              Inactive: show_inactive ? response.data.Inactive : [],\n            };\n            dispatch({\n              type: types.LOAD_QTS_MAP_DATA,\n              data: data,\n              center: {\n                latitude: latitude,\n                longitude: longitude,\n              },\n            });\n        }\n      },\n    });\n  };\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport * as qtsActions from \"../../actions/qtsActions\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\n\nclass QTSQuotes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n      modalOpen: false,\n      contact: {},\n      bankerName: \"\",\n      bankerId: \"\",\n    };\n  }\n\n  render() {\n    if (this.props.qts.quotes && !this.props.qts.loadingQuotes) {\n      var bankName = (\n        <p className=\"bank-name\">{this.props.qts.quotes.bank_name}</p>\n      );\n    }\n\n    return (\n      <Row>\n        <Row className=\"sub-header\">\n          <Col lg=\"12\" md=\"12\" sm=\"12\">\n            <Link\n              to={{ pathname: `/qts-banks`, search: window.location.search }}\n              className=\"back-arrow\"\n            >\n              <img src=\"/images/icons/arrow-left.png\" alt=\"arrow-left\" />\n            </Link>\n            <ul className=\"qts-nav\">\n              <li className=\"qts-nav-list-item list-item2\">\n                <NavLink\n                  to={{\n                    pathname: `/qts-quotes`,\n                    search: window.location.search,\n                  }}\n                  className=\"qts-nav-item\"\n                  activeClassName=\"header-active-link\"\n                >\n                  Quotes Received\n                </NavLink>\n              </li>\n              <li className=\"qts-nav-list-item list-item3\">\n                <NavLink\n                  to={{\n                    pathname: `/qts-lending-criteria`,\n                    search: window.location.search,\n                  }}\n                  className=\"qts-nav-item\"\n                  activeClassName=\"header-active-link\"\n                >\n                  Lending Criteria\n                </NavLink>\n              </li>\n            </ul>\n          </Col>\n        </Row>\n        <Row>\n          <div className=\"qts-container\">\n            {bankName}\n            {this.props.children}\n          </div>\n        </Row>\n      </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    qts: state.QTS,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    qtsActions: bindActionCreators(qtsActions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QTSQuotes);\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport { formatWithCommas, formatDate, formatCurrency } from \"../../lib\";\n\nconst Quote = (props) => (\n  <div className=\"panel mui--z1\">\n    <div className=\"panel-heading\">\n      <p className=\"property-title\">\n        {props.item.property_street_number} {props.item.property_street_name},{\" \"}\n        {props.item.property_city}, {props.item.property_state}{\" \"}\n        {props.item.property_zip}\n      </p>\n      {props.authentication.is_broker ? (\n        <img\n          onClick={() => {\n            props.openStreetView(\n              props.item.latitude,\n              props.item.longitude,\n              props.item.property_street_number,\n              props.item.property_street_name,\n              props.item.property_city,\n              props.item.property_state,\n              props.item.property_zip\n            );\n          }}\n          alt=\"sv-square\"\n          src=\"/images/icons/street-view-square.png\"\n          className=\"street-view-square\"\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n    <div className=\"panel-body\">\n      <Row>\n        <Col md=\"2\">\n          <p className=\"small-title\">Property Type</p>\n          <p className=\"panel-info-value\">{props.item.property_type}</p>\n        </Col>\n        {props.item.no_of_units > 1 || props.item.square_footage > 1 ? (\n          <Col md=\"2\">\n            <p className=\"small-title\">\n              {props.item.no_of_units > 1 ? \"Units\" : \"\"}\n              {props.item.no_of_units > 1 && props.item.square_footage > 1\n                ? \"/\"\n                : \"\"}\n              {props.item.square_footage > 1 ? \"Sq Ft.\" : \"\"}\n            </p>\n            <p className=\"panel-info-value\">\n              {props.item.no_of_units}\n              {props.item.no_of_units > 1 && props.item.square_footage > 1\n                ? \"/\"\n                : \"\"}\n              {formatWithCommas(props.item.square_footage)}\n            </p>\n          </Col>\n        ) : (\n          \"\"\n        )}\n        <Col md=\"2\">\n          <p className=\"small-title\">Banker</p>\n          {props.item.banker_id > 0 ? (\n            <p\n              className=\"panel-info-value orange-hover\"\n              onClick={() =>\n                props.openContactModal(\n                  props.item.banker_id,\n                  props.item.banker_name\n                )\n              }\n            >\n              {props.item.banker_name}\n            </p>\n          ) : (\n            <p className=\"panel-info-value\">{props.item.banker_name}</p>\n          )}\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Entered By</p>\n          {props.item.broker_edited > 0 ? (\n            <p\n              className=\"panel-info-value orange-hover\"\n              onClick={() => {\n                props.openContactModal(\n                  props.item.broker_edited,\n                  props.item.broker_entered_name\n                );\n              }}\n            >\n              {props.item.broker_entered_name}\n            </p>\n          ) : (\n            <p className=\"panel-info-value\">{props.item.broker_entered_name}</p>\n          )}\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Quoted Date</p>\n          <p className=\"panel-info-value\">\n            {props.item.quote_date ? formatDate(props.item.quote_date) : \" - \"}\n          </p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Quoted Loan Amount</p>\n          <p className=\"panel-info-value\">\n            {props.item.quoted_amount\n              ? formatCurrency(props.item.quoted_amount, 0)\n              : \" - \"}\n          </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"2\">\n          <p className=\"small-title\">Rate</p>\n          <p className=\"panel-info-value\">\n            {props.item.rate ? props.item.rate + \"%\" : \" - \"}\n          </p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Term / Amortization</p>\n          <p className=\"panel-info-value\">\n            {props.item.term}\n            {props.item.term || props.item.amortization ? \" / \" : \" - \"}\n            {props.item.amortization}\n          </p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">LTV</p>\n          <p className=\"panel-info-value\">\n            {props.item.ltv ? props.item.ltv : \" - \"}\n          </p>\n        </Col>\n      </Row>\n      <Divider />\n      <Row>\n        <p className=\"small-title\">\n          Brokers\n          <span className=\"brokers\">\n            {props.item.deals &&\n              props.item.deals.deal_brokers_details\n                .filter(\n                  (b) =>\n                    b.is_originator === 1 ||\n                    b.face_of_deal === 1 ||\n                    b.broker_of_record === 1\n                )\n                .map((item, index) => {\n                  let brokerName = item.first_name + \" \" + item.last_name;\n                  return (\n                    <span key={index}>\n                      {index >= 1 ? <span> &#8226; </span> : \"\"}\n                      <span\n                        className=\"orange-hover sm-padding\"\n                        onClick={() =>\n                          props.openContactModal(\n                            item.member_contact_id,\n                            brokerName\n                          )\n                        }\n                      >\n                        {brokerName}\n                      </span>\n                    </span>\n                  );\n                })}\n          </span>\n        </p>\n      </Row>\n    </div>\n  </div>\n);\n\nexport default Quote;\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport { formatCurrency, formatDate, formatWithCommas } from \"../../lib\";\n\nconst Quote = (props) => (\n  <div className=\"panel mui--z1\">\n    <div className=\"panel-heading\">\n      <Col md=\"9\">\n        <p className=\"property-title\">\n          {props.item.property_address}, {props.item.property_city_state_zip}\n        </p>\n      </Col>\n      <Col md=\"3\">\n        {props.authentication.is_broker ? (\n          <img\n            onClick={() => {\n              props.openStreetView(\n                props.item.latitude,\n                props.item.longitude,\n                props.item.property_address,\n                props.item.property_city_state_zip\n              );\n            }}\n            src=\"/images/icons/street-view-square.png\"\n            alt=\"sv-square\"\n            className=\"street-view-square\"\n          />\n        ) : (\n          \"\"\n        )}\n      </Col>\n    </div>\n    <div className=\"panel-body\">\n      <Row>\n        <Col md=\"2\">\n          <p className=\"small-title\">Property Type</p>\n          <p className=\"panel-info-value\">{props.item.property_type}</p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Mortgage Date</p>\n          <p className=\"panel-info-value\">\n            {formatDate(props.item.mortgage_date)}\n          </p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Bank</p>\n          <p className=\"panel-info-value\">{props.item.bank_name}</p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Loan Amount</p>\n          <p className=\"panel-info-value\">\n            {formatCurrency(props.item.loan_amount)}\n          </p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Units / Sq.Ft</p>\n          <p className=\"panel-info-value\">\n            {formatWithCommas(props.item.units) || \"-\"} /{\" \"}\n            {formatWithCommas(props.item.sq_footage) || \"-\"}\n          </p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Floors</p>\n          <p className=\"panel-info-value\">{props.item.num_floors}</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col md=\"2\">\n          <p className=\"small-title\">Price per Sq. Ft</p>\n          <p className=\"panel-info-value\">\n            {formatCurrency(props.item.price_per_sq_ft)}\n          </p>\n        </Col>\n        <Col md=\"2\">\n          <p className=\"small-title\">Price per Unit</p>\n          <p className=\"panel-info-value\">\n            {formatCurrency(props.item.price_per_unit)}\n          </p>\n        </Col>\n        {props.item.distance ? (\n          <Col md=\"2\">\n            <p className=\"small-title\">Distance from the Searched Address</p>\n            <p className=\"panel-info-value\">\n              {Math.round(props.item.distance * 1000) / 1000} miles\n            </p>\n          </Col>\n        ) : (\n          \"\"\n        )}\n      </Row>\n    </div>\n  </div>\n);\n\nexport default Quote;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Navigation } from \"../../lib\";\nimport * as qtsActions from \"../../actions/qtsActions\";\nimport Row from \"muicss/lib/react/row\";\nimport Modal from \"react-modal\";\nimport Quote from \"./Quote\";\nimport ReonomyLoan from \"./ReonomyLoan\";\nimport ClientModal from \"../common/ClientModal\";\nimport Expire from \"../common/Expire\";\nimport getParameterByName from \"../common/getParameterByName\";\nimport encodeQueryData from \"../common/encodeQueryData\";\nimport Button from \"muicss/lib/react/button\";\nimport QTSQuotesContainer from \"./QTSQuotesContainer\";\n\nconst google = window.google;\n\nclass QTSQuotes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpened: false,\n      modalOpen: false,\n      contact: {},\n      bankerName: \"\",\n      bankerId: \"\",\n    };\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.openContactModal = this.openContactModal.bind(this);\n  }\n\n  componentDidMount() {\n    let data = {\n      bank_id: getParameterByName(\"bankId\"),\n      latitude: getParameterByName(\"latitude\"),\n      longitude: getParameterByName(\"longitude\"),\n      state: getParameterByName(\"state\"),\n      city: getParameterByName(\"city\"),\n      radius: getParameterByName(\"radius\"),\n      property_types: getParameterByName(\"property_types\")\n        ? decodeURIComponent(getParameterByName(\"property_types\"))\n            .split(\",\")\n            .map((p) => parseInt(p, 10))\n        : [],\n      min_loan: getParameterByName(\"min_loan\")\n        ? parseInt(getParameterByName(\"min_loan\").replace(/\\D/g, \"\"), 10)\n        : null,\n      max_loan: getParameterByName(\"max_loan\")\n        ? parseInt(getParameterByName(\"max_loan\").replace(/\\D/g, \"\"), 10)\n        : null,\n      date_range: getParameterByName(\"date_range\")\n        ? parseInt(getParameterByName(\"date_range\"), 10)\n        : null,\n      bank: getParameterByName(\"bank\"),\n      banker: getParameterByName(\"banker\"),\n      lender_types: getParameterByName(\"lending_types\")\n        ? decodeURIComponent(getParameterByName(\"lending_types\"))\n            .split(\",\")\n            .map((p) => parseInt(p, 10))\n        : [],\n      note_search: getParameterByName(\"note_search\"),\n      search_type: getParameterByName(\"search_type\"),\n      in_nyc: getParameterByName(\"in_nyc\")\n        ? parseInt(getParameterByName(\"in_nyc\"), 10)\n        : null,\n    };\n    Object.keys(data).forEach(\n      (key) => (data[key] === null || data[key] === \"\") && delete data[key]\n    );\n    this.props.qtsActions.loadQuotes(data);\n  }\n\n  openContactModal(bankerId, bankerName) {\n    this.props.qtsActions.getFullContactInfo(bankerId);\n    this.setState({\n      modalOpen: true,\n      bankerName: bankerName,\n      bankerId: bankerId,\n    });\n  }\n\n  afterOpenModal() {}\n\n  closeModal() {\n    this.setState({\n      modalOpen: false,\n      contact: {},\n    });\n  }\n\n  openStreetViewQuote(lat, long, num, name, city, state, zip) {\n    var sv = new google.maps.StreetViewService();\n    sv.getPanorama(\n      {\n        location: {\n          lat: parseFloat(lat),\n          lng: parseFloat(long),\n        },\n        radius: 50,\n      },\n      (data, status) => {\n        if (status === \"OK\") {\n          Navigation.go(\n            `/comp-sv?${encodeQueryData({\n              latitude: lat,\n              longitude: long,\n              address: num + \" \" + name + \" \" + city + \" \" + state + \" \" + zip,\n            })}`\n          );\n        } else {\n          this.props.qtsActions.updateErrorToast(\n            \"No street view available for this property\"\n          );\n        }\n      }\n    );\n  }\n\n  openStreetViewReonomy(lat, long, address, city_state_zip) {\n    var sv = new google.maps.StreetViewService();\n    sv.getPanorama(\n      {\n        location: {\n          lat: parseFloat(lat),\n          lng: parseFloat(long),\n        },\n        radius: 50,\n      },\n      (data, status) => {\n        if (status === \"OK\") {\n          Navigation.go(\n            `/comp-sv?${encodeQueryData({\n              latitude: lat,\n              longitude: long,\n              address: address + \" \" + city_state_zip,\n            })}`\n          );\n        } else {\n          this.props.qtsActions.updateErrorToast(\n            \"No street view available for this property\"\n          );\n        }\n      }\n    );\n  }\n\n  render() {\n    let authData = JSON.parse(localStorage.getItem(\"data\"));\n    let toast = null;\n    if (this.props.qts.toast.show) {\n      toast = (\n        <Expire closeToast={this.props.qtsActions.closeToast} delay={6000}>\n          <div className=\"success-message\">\n            <p>{this.props.qts.toast.message}</p>\n            <Button variant=\"flat\" onClick={this.props.qtsActions.closeToast}>\n              {this.props.qts.toast.success ? \"Done\" : \"Dismiss\"}\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    const qtsQuotes =\n      this.props.qts.quotes.qts_quotes &&\n      this.props.qts.quotes.qts_quotes.map((item, index) => (\n        <Quote\n          key={index}\n          openContactModal={this.openContactModal}\n          openStreetView={this.openStreetViewQuote.bind(this)}\n          authentication={authData}\n          item={item}\n        />\n      ));\n\n    const reonomyLoans =\n      this.props.qts.quotes.national_data_deals &&\n      this.props.qts.quotes.national_data_deals.map((item, index) => (\n        <ReonomyLoan\n          key={index}\n          openContactModal={this.openContactModal}\n          openStreetView={this.openStreetViewReonomy.bind(this)}\n          authentication={authData}\n          item={item}\n        />\n      ));\n    return (\n      <QTSQuotesContainer>\n        {!this.props.qts.loadingQuotes ? (\n          <Row>\n            {toast}\n            <Row\n              className={\n                !this.props.qts.loadingQuotes ? \"qts-results-page\" : \"hidden\"\n              }\n            >\n              <div className=\"qts-results quote-results\">\n                {(qtsQuotes && qtsQuotes.length) ||\n                (reonomyLoans && reonomyLoans.length) ? (\n                  <div>\n                    <p\n                      className={\n                        qtsQuotes && qtsQuotes.length >= 1\n                          ? \"qts-quote-subheader\"\n                          : \"hidden\"\n                      }\n                    >\n                      <span className=\"orange-text\">&bull;</span>Quotes Received\n                    </p>\n                    {qtsQuotes}\n                    <p\n                      className={\n                        reonomyLoans && reonomyLoans.length >= 1\n                          ? \"qts-quote-subheader\"\n                          : \"hidden\"\n                      }\n                    >\n                      <span className=\"orange-text\">&bull;</span>Public Loans\n                    </p>\n                    {reonomyLoans}\n                  </div>\n                ) : (\n                  <div>\n                    <div className=\"grey-circle\">\n                      <i className=\"material-icons\">warning</i>\n                    </div>\n                    <h2 className=\"no-results\">No Bank Quotes Found</h2>\n                  </div>\n                )}\n              </div>\n              <ClientModal\n                key={this.state.bankerId}\n                isOpen={this.state.modalOpen}\n                onRequestClose={this.closeModal}\n                onAfterOpen={this.afterOpenModal}\n                name={this.state.bankerName}\n                contact={this.props.qts.contact}\n                loading={this.props.qts.loadingContact}\n                noContact={this.props.qts.noContact}\n              />\n            </Row>\n          </Row>\n        ) : (\n          <Modal\n            className=\"loading-modal\"\n            ariaHideApp={false}\n            shouldCloseOnOverlayClick={false}\n            contentLabel=\"modal\"\n            isOpen={true}\n          >\n            <div className=\"centered-spinner\">\n              <img\n                src=\"/images/icons/spin.svg\"\n                className=\"loading-spinner\"\n                alt=\"loading spinner\"\n              />\n            </div>\n          </Modal>\n        )}\n      </QTSQuotesContainer>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    qts: state.QTS,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    qtsActions: bindActionCreators(qtsActions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QTSQuotes);\n"],"sourceRoot":""}