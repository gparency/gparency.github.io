{"version":3,"sources":["components/contacts/RatingModal.js","components/contacts/Contact.js","components/common/givebackContactModal.js","components/contacts/ClosingClientContacts.js"],"names":["RatingModal","props","state","rating","client_rating","e","preventDefault","this","submitRatingModal","contactId","setState","target","value","ratingList","map","item","key","list_type_id","label","className","isOpen","onRequestClose","style","content","margin","ariaHideApp","contentLabel","shouldCloseOnOverlayClick","defaultValue","onChange","onChangeRating","bind","variant","onClick","onSubmit","type","React","Component","Contact","date","modalIsAddOpen","ratingModalIsOpen","ratingModalClose","showDatePicker","openAddModal","afterOpenModal","handleSubmit","closeAddModal","onClickHandler","validateWebsite","navigateToProperties","updateRatingSuccess","website","match","id","setPageAndScrollPos","window","scrollY","searchType","Navigation","go","encodeURIComponent","page","encodeQueryData","note","d","Date","newNote","note_date_time","moment","format","user_name","JSON","parse","localStorage","getItem","activity_note","notes","push","updateNote","contact_id","formattedDate","changeDate","previous_page","location","pathname","search","contact_name","contact_first_name","contact_last_name","changeClientRating","isBanker","activeNumber","is_primary_banker","active_number","contact_info","phone","find","obj","isPrimary","closeRatingModal","md","sm","xs","openRatingModal","property_count","is_associated","onAfterOpen","require","text","title","button","company_name","givebackContact","owner_starred","updateStar","height","activity_next_datetime","isValid","allowClear","dateValue","update","display","alignItems","src","alt","href","active_email","activity_notes","length","substring","GivebackContactModal","reasonCode","errorMessage","closeModal","invalidFields","join","replace","valid","updateSelect","reasonCodes","index","reason","rows","placeholder","noteChange","floatingLabel","submit","ClosingClientContacts","loginModalOpen","refresh","handleModalSubmit","scrollTo","contacts","previousScrollPos","contactActions","getContactRatingList","getGivebackReasonCodes","closingClientsContactLoad","updateDate","updateClosingClientNote","componentDidMount","brokerStarred","updateStarClosingClient","position","counter","callsToday","noContacts","closingClientContacts","loading","today_call_total","connect","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/40.7c3c9070.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-modal\";\nimport Option from \"muicss/lib/react/option\";\nimport Select from \"muicss/lib/react/select\";\nimport Button from \"muicss/lib/react/button\";\n\nclass RatingModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rating: this.props.client_rating,\n    };\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.submitRatingModal(this.props.contactId, this.state.rating);\n  }\n\n  onChangeRating(e) {\n    this.setState({\n      rating: e.target.value,\n    });\n  }\n\n  render() {\n    const customStyles = {\n      content: {\n        margin: \"auto\",\n      },\n    };\n    let ratingList = this.props.ratingList.map((item) => (\n      <Option\n        key={item.list_type_id}\n        value={item.list_type_id}\n        label={item.value}\n      />\n    ));\n    return (\n      <Modal\n        className=\"rating-modal\"\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.onRequestClose}\n        style={customStyles}\n        ariaHideApp={false}\n        contentLabel=\"Modal\"\n        shouldCloseOnOverlayClick={true}\n      >\n        <div className=\"modal-form\">\n          <p className=\"add-note-modal\">Rating</p>\n          <Select\n            defaultValue={this.state.rating}\n            onChange={this.onChangeRating.bind(this)}\n            label=\"Change Rating\"\n          >\n            {ratingList}\n          </Select>\n          <div className=\"add-note-buttons\">\n            <Button\n              variant=\"flat\"\n              onClick={this.props.onRequestClose}\n              className=\"cancel-btn\"\n            >\n              cancel\n            </Button>\n            <Button\n              variant=\"flat\"\n              onClick={this.onSubmit.bind(this)}\n              type=\"submit\"\n              value=\"submit\"\n            >\n              Save\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nRatingModal.propTypes = {\n  ratingList: PropTypes.array.isRequired,\n};\n\nexport default RatingModal;\n","import Row from \"muicss/lib/react/row\";\nimport React from \"react\";\nimport { Navigation } from \"../../lib\";\nimport Col from \"muicss/lib/react/col\";\nimport NoteModal from \"../common/NoteModal\";\nimport RatingModal from \"./RatingModal\";\nimport FormattedDatePicker from \"../common/FormattedDatePicker\";\nimport moment from \"moment\";\nimport encodeQueryData from \"../common/encodeQueryData\";\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: false,\n      modalIsAddOpen: false,\n      ratingModalIsOpen: false,\n      ratingModalClose: false,\n      showDatePicker: false,\n    };\n    this.onChange = this.onChange.bind(this);\n    this.openAddModal = this.openAddModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.closeAddModal = this.closeAddModal.bind(this);\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.validateWebsite = this.validateWebsite.bind(this);\n    this.navigateToProperties = this.navigateToProperties.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    this.setState({\n      ratingModalClose: this.props.updateRatingSuccess,\n    });\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.ratingModalClose != this.state.ratingModalClose) {\n  //     this.setState({\n  //       ratingModalIsOpen: false\n  //     })\n  //   }\n  // }\n\n  validateWebsite(website) {\n    var prefix = \"http://\";\n    if (!website.match(/^[a-zA-Z]+:\\/\\//)) {\n      website = prefix + website;\n    }\n    return website;\n  }\n\n  onClickHandler(id) {\n    this.props.setPageAndScrollPos(window.scrollY);\n    this.props.searchType\n      ? Navigation.go(\n          `/contacts/details/${id}/${encodeURIComponent(\n            this.props.page\n          )}?${encodeQueryData({ type: this.props.searchType })}`\n        )\n      : Navigation.go(\n          `/contacts/details/${id}/${encodeURIComponent(this.props.page)}`\n        );\n  }\n\n  afterOpenModal() {}\n\n  openAddModal() {\n    this.setState({\n      modalIsAddOpen: true,\n      note: \"\",\n    });\n  }\n\n  handleSubmit(e, note) {\n    e.preventDefault();\n    this.setState({ modalIsAddOpen: false });\n    var d = new Date();\n    let formattedDate = moment(d).format(\"MM/DD/YYYY h:mm \");\n    let newNote = {\n      note_date_time: formattedDate,\n      user_name: JSON.parse(localStorage.getItem(\"data\")).user_name,\n      activity_note: note,\n    };\n    this.props.item.notes.push(newNote);\n    this.props.updateNote(this.props.item.contact_id, note);\n  }\n\n  closeAddModal(e) {\n    e.preventDefault();\n    this.setState({ modalIsAddOpen: false });\n  }\n\n  onChange(date) {\n    let formattedDate = moment(date).format(\"YYYY-MM-DD\");\n    this.props.changeDate(this.props.item.contact_id, formattedDate);\n  }\n\n  navigateToProperties() {\n    Navigation.go(\n      `/properties/deals?${encodeQueryData({\n        contact_id: this.props.item.contact_id,\n        previous_page:\n          encodeURIComponent(window.location.pathname) + window.location.search,\n        contact_name:\n          this.props.item.contact_first_name +\n          \" \" +\n          this.props.item.contact_last_name,\n      })}`\n    );\n  }\n\n  openRatingModal() {\n    this.setState({\n      ratingModalIsOpen: true,\n    });\n  }\n\n  closeRatingModal() {\n    this.setState({\n      ratingModalIsOpen: false,\n    });\n  }\n\n  async submitRatingModal(contact_id, rating) {\n    await this.props.changeClientRating(contact_id, rating);\n    this.props.updateRatingSuccess\n      ? this.setState({ ratingModalIsOpen: false })\n      : this.setState({ ratingModalIsOpen: true });\n  }\n\n  showDatePicker() {\n    this.setState({ showDatePicker: true });\n  }\n\n  render() {\n    let isBanker = null;\n    let activeNumber = null;\n    if (this.props.item.is_primary_banker === 1) {\n      isBanker = <p className=\"green-label\">Primary Banker</p>;\n    }\n    if (\n      this.props.item.active_number != null &&\n      this.props.item.contact_info.phone\n    ) {\n      activeNumber = this.props.item.contact_info.phone.find(\n        (obj) => obj.isPrimary === \"1\"\n      );\n    }\n    return (\n      <div className=\"contact-container mui--z1\">\n        <div>\n          <Row>\n            <RatingModal\n              isOpen={this.state.ratingModalIsOpen}\n              ratingList={this.props.ratingList}\n              contactId={this.props.item.contact_id}\n              submitRatingModal={this.submitRatingModal.bind(this)}\n              client_rating={this.props.item.client_rating}\n              onRequestClose={this.closeRatingModal.bind(this)}\n            />\n\n            <Col md=\"6\" sm=\"6\" xs=\"12\">\n              <div className=\"flex-center\">\n                <h4\n                  onClick={this.onClickHandler.bind(\n                    null,\n                    this.props.item.contact_id\n                  )}\n                  className=\"contacts-name\"\n                >\n                  {this.props.item.contact_first_name\n                    ? this.props.item.contact_first_name\n                    : \"\"}{\" \"}\n                  {this.props.item.contact_last_name\n                    ? this.props.item.contact_last_name\n                    : \"\"}\n                </h4>\n                {this.props.item.client_rating ? (\n                  <div\n                    className=\"rating-contacts-properties\"\n                    onClick={this.openRatingModal.bind(this)}\n                  >\n                    {this.props.item.client_rating}\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {this.props.item.property_count === 1 &&\n                this.props.item.is_associated === 1 ? (\n                  <div\n                    className=\"rating-contacts-properties\"\n                    onClick={this.navigateToProperties}\n                  >\n                    {this.props.item.property_count}\n                    <span>property</span>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {this.props.item.property_count > 1 &&\n                this.props.item.is_associated === 1 ? (\n                  <div\n                    className=\"rating-contacts-properties\"\n                    onClick={this.navigateToProperties}\n                  >\n                    {this.props.item.property_count}\n                    <span>properties</span>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"main-contacts\">{isBanker}</div>\n              </div>\n              <NoteModal\n                isOpen={this.state.modalIsAddOpen}\n                onRequestClose={this.closeAddModal}\n                onAfterOpen={this.afterOpenModal}\n                require={true}\n                text={{ title: \"Add note\", button: \"Save\" }}\n                onSubmit={this.handleSubmit}\n              />\n              <p className=\"contacts-company\">\n                {this.props.item.company_name\n                  ? this.props.item.company_name\n                  : \"Company Name\"}\n              </p>\n            </Col>\n            <Col\n              md=\"5\"\n              sm=\"5\"\n              className=\"text-right contacts-calendar-container\"\n            >\n              {this.props.item.is_associated === 1 ? (\n                <i\n                  className=\"contacts-giveback material-icons\"\n                  onClick={this.props.givebackContact.bind(\n                    null,\n                    this.props.item.contact_id\n                  )}\n                >\n                  delete\n                </i>\n              ) : (\n                \"\"\n              )}\n              {this.props.item.owner_starred != null ? (\n                <div\n                  onClick={() => {\n                    this.props.updateStar(\n                      this.props.item.contact_id,\n                      this.props.item.owner_starred\n                    );\n                  }}\n                  className=\"star-wrapper inline-block\"\n                  style={{ height: \"24px\" }}\n                >\n                  <p>\n                    <span className=\"quote-star\">\n                      <i\n                        className={\n                          this.props.item.owner_starred === 1\n                            ? \"material-icons star-icon-orange\"\n                            : \"material-icons star-icon-gray\"\n                        }\n                      >\n                        star\n                      </i>\n                    </span>\n                  </p>\n                </div>\n              ) : (\n                \"\"\n              )}\n              {this.props.item.is_associated === 1 ? (\n                (this.props.item.activity_next_datetime &&\n                  moment(this.props.item.activity_next_datetime).isValid()) ||\n                this.state.showDatePicker ? (\n                  <FormattedDatePicker\n                    allowClear={false}\n                    dateValue={this.props.item.activity_next_datetime}\n                    update={this.onChange}\n                  />\n                ) : (\n                  <div\n                    className=\"inline-block padding-left\"\n                    style={{ display: \"inline-flex\", alignItems: \"center\" }}\n                    onClick={() => this.showDatePicker()}\n                  >\n                    no call date\n                    <i className=\"material-icons xl-text ml-8\">\n                      calendar_today\n                    </i>\n                  </div>\n                )\n              ) : (\n                \"\"\n              )}\n            </Col>\n            <Col\n              md=\"1\"\n              sm=\"1\"\n              onClick={this.onClickHandler.bind(\n                null,\n                this.props.item.contact_id\n              )}\n            >\n              <i className=\"material-icons contacts-toggle-arrow\">\n                keyboard_arrow_right\n              </i>\n            </Col>\n          </Row>\n          <Row>\n            {activeNumber && activeNumber.label === \"Mobile\" ? (\n              <Col md=\"3\" className=\"contact-detail\">\n                <div>\n                  <img\n                    src=\"/images/icons/cellphone-gray.png\"\n                    alt=\"cellphone-gray\"\n                  />\n                  <p>\n                    <a href={`tel:${activeNumber.value}`}>\n                      {activeNumber.value}\n                    </a>\n                  </p>\n                </div>\n              </Col>\n            ) : (\n              \"\"\n            )}\n            {activeNumber && activeNumber.label === \"Home\" ? (\n              <Col md=\"3\" className=\"contact-detail\">\n                <div>\n                  <img src=\"/images/icons/phone-gray.png\" alt=\"phone-gray\" />\n                  <p>\n                    <a href={`tel:${activeNumber.value}`}>\n                      {activeNumber.value}\n                    </a>\n                  </p>\n                </div>\n              </Col>\n            ) : (\n              \"\"\n            )}\n            {activeNumber && activeNumber.label === \"Office\" ? (\n              <Col md=\"3\" className=\"contact-detail\">\n                <div>\n                  <img src=\"/images/icons/phone-gray.png\" alt=\"phone-gray\" />\n                  <p>\n                    <a href={`tel:${activeNumber.value}`}>\n                      {activeNumber.value}\n                    </a>\n                  </p>\n                </div>\n              </Col>\n            ) : (\n              \"\"\n            )}\n            {activeNumber && activeNumber.label === \"Company\" ? (\n              <Col md=\"3\" className=\"contact-detail\">\n                <div>\n                  <img src=\"/images/icons/phone-gray.png\" alt=\"phone-gray\" />\n                  <p>\n                    <a href={`tel:${activeNumber.value}`}>\n                      {activeNumber.value}\n                    </a>\n                  </p>\n                </div>\n              </Col>\n            ) : (\n              \"\"\n            )}\n            {this.props.item.active_email ? (\n              <Col md=\"3\" className=\"contact-detail\">\n                <div>\n                  <img src=\"/images/icons/email-gray.png\" alt=\"email-gray\" />\n                  <p>\n                    <a href={`mailto:${this.props.item.active_email}`}>\n                      {this.props.item.active_email}\n                    </a>\n                  </p>\n                </div>\n              </Col>\n            ) : (\n              \"\"\n            )}\n          </Row>\n          {this.props.item.is_associated === 1 ? (\n            <Row>\n              <Col md=\"12\" className=\"contact-detail\">\n                <img src=\"/images/icons/note.png\" alt=\"note\" />\n                <span>\n                  {this.props.item.notes[0].note_date_time ? (\n                    <div className=\"contacts-add-note-container\">\n                      {this.props.item.activity_notes.length > 170\n                        ? this.props.item.activity_notes.substring(0, 170) +\n                          \" ...\"\n                        : this.props.item.activity_notes}\n                      <img\n                        onClick={this.openAddModal}\n                        className=\"contacts-add-note-icon\"\n                        alt=\"add\"\n                        src=\"/images/icons/add.png\"\n                      />\n                    </div>\n                  ) : (\n                    \"Click the icon to add a note\"\n                  )}\n                </span>\n                {this.props.item.notes[0].note_date_time ? (\n                  \"\"\n                ) : (\n                  <div\n                    className=\"contacts-add-note-container\"\n                    onClick={this.openAddModal}\n                  >\n                    <img\n                      className=\"contacts-add-note-icon\"\n                      src=\"/images/icons/add.png\"\n                      alt=\"add-note-icon\"\n                    />\n                  </div>\n                )}\n              </Col>\n            </Row>\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport Form from \"muicss/lib/react/form\";\nimport Button from \"muicss/lib/react/button\";\nimport Textarea from \"muicss/lib/react/textarea\";\nimport Select from \"muicss/lib/react/select\";\nimport Option from \"muicss/lib/react/option\";\n\nclass GivebackContactModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reasonCode: 0,\n      note: \"\",\n      errorMessage: \"\",\n    };\n  }\n\n  noteChange(e) {\n    this.setState({\n      note: e.target.value,\n    });\n  }\n\n  closeModal() {\n    this.props.closeModal();\n    this.setState({\n      note: \"\",\n      reasonCode: 0,\n    });\n  }\n\n  updateSelect(e) {\n    this.setState({\n      reasonCode: e.target.value === \"\" ? 0 : e.target.value,\n    });\n  }\n\n  valid() {\n    let invalidFields = [];\n    if (this.state.reasonCode === 0) {\n      invalidFields.push(\"Reason Code\");\n    }\n\n    if (this.state.reasonCode === \"other\" && !this.state.note) {\n      invalidFields.push(\"Note\");\n    }\n\n    if (invalidFields.length) {\n      //separate each invalid field with comma. last field should have 'and' instead\n      let errorMessage = invalidFields\n        .join(\", \")\n        .replace(/,(?!.*,)/gim, \" and\");\n      errorMessage += \" is required!\";\n      this.setState({ errorMessage });\n      return false;\n    } else {\n      this.setState({\n        errorMessage: \"\",\n      });\n      return true;\n    }\n  }\n\n  submit(e) {\n    e.preventDefault();\n    if (this.valid()) {\n      this.setState({ note: \"\", reasonCode: 0 });\n      this.setState({\n        note: \"\",\n        reasonCode: 0,\n      });\n      if (this.valid()) {\n        this.state.reasonCode === \"other\"\n          ? this.props.onSubmit(this.state.note, 0)\n          : this.props.onSubmit(this.state.note, this.state.reasonCode);\n      }\n    }\n  }\n\n  render() {\n    const customStyles = {\n      content: {\n        margin: \"auto\",\n      },\n    };\n    return (\n      <Modal\n        className=\"note-modal\"\n        isOpen={this.props.isOpen}\n        onRequestClose={this.props.onRequestClose}\n        style={customStyles}\n        ariaHideApp={false}\n        contentLabel=\"Modal\"\n        shouldCloseOnOverlayClick={false}\n      >\n        <Form className=\"modal-form\">\n          <p className=\"modal-title\">Giveback Contact</p>\n\n          <Select\n            value={this.state.reasonCode}\n            onChange={this.updateSelect.bind(this)}\n          >\n            <Option label=\"Please Select...\" value={0} />\n            {this.props.reasonCodes.map((item, index) => (\n              <Option key={index} value={item.id} label={item.reason} />\n            ))}\n            <Option value=\"other\" label=\"Other\" />\n          </Select>\n\n          <Textarea\n            rows={2}\n            value={this.state.note}\n            placeholder=\"Note (Optional)\"\n            onChange={this.noteChange.bind(this)}\n            floatingLabel={true}\n          />\n\n          <span className=\"error-block\">{this.state.errorMessage}</span>\n          <div className=\"add-note-buttons\">\n            <Button variant=\"flat\" onClick={this.closeModal.bind(this)}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"flat\"\n              onClick={this.submit.bind(this)}\n              type=\"submit\"\n              value=\"submit\"\n            >\n              Giveback\n            </Button>\n          </div>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default GivebackContactModal;\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Contact from \"./Contact\";\nimport { connect } from \"react-redux\";\nimport * as contactActions from \"../../actions/contactsActions\";\nimport { bindActionCreators } from \"redux\";\nimport Loader from \"../common/Loader\";\nimport GivebackModal from \"../common/givebackContactModal\";\n\nclass ClosingClientContacts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginModalOpen: false,\n      contact_id: \"\",\n    };\n    this.changeDate = this.changeDate.bind(this);\n    this.updateNote = this.updateNote.bind(this);\n    this.refresh = this.refresh.bind(this);\n    this.updateStar = this.updateStar.bind(this);\n    this.setPageAndScrollPos = this.setPageAndScrollPos.bind(this);\n    this.givebackContact = this.givebackContact.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.handleModalSubmit = this.handleModalSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, this.props.contacts.previousScrollPos);\n    this.props.contactActions.getContactRatingList();\n    this.props.contactActions.getGivebackReasonCodes();\n    this.props.contactActions.closingClientsContactLoad();\n  }\n\n  changeDate(contactId, date) {\n    this.props.contactActions.updateDate(contactId, date);\n  }\n\n  updateNote(contactId, note) {\n    this.props.contactActions.updateClosingClientNote(contactId, note);\n  }\n\n  refresh() {\n    this.componentDidMount();\n  }\n\n  updateStar(contactId, brokerStarred) {\n    this.props.contactActions.updateStarClosingClient(contactId, brokerStarred);\n  }\n\n  givebackContact(contact_id) {\n    this.setState({\n      contact_id: contact_id,\n      loginModalOpen: true,\n    });\n  }\n\n  closeModal() {\n    this.setState({ loginModalOpen: false });\n  }\n\n  handleModalSubmit(note, reasonCode) {\n    this.setState({ loginModalOpen: false });\n    this.props.contactActions.givebackContact(\n      this.state.contact_id,\n      note,\n      reasonCode,\n      \"closingClientContacts\"\n    );\n  }\n\n  setPageAndScrollPos(position) {\n    this.props.contactActions.setPageAndScrollPos(position);\n  }\n\n  async changeClientRating(contact_id, rating) {\n    await this.props.contactActions.changeClientRating(\n      contact_id,\n      rating,\n      \"closingClientContacts\"\n    );\n  }\n\n  render() {\n    //let contacts = null;\n    let counter = 0;\n    let callsToday = null;\n    let noContacts = null;\n    let contacts =\n      this.props.contacts.closingClientContacts.contacts &&\n      this.props.contacts.closingClientContacts.contacts.map((item) => (\n        <Contact\n          key={counter++}\n          item={item}\n          setPageAndScrollPos={this.setPageAndScrollPos}\n          page=\"closing-clients-contacts\"\n          givebackContact={this.givebackContact}\n          changeDate={this.changeDate}\n          updateNote={this.updateNote}\n          updateStar={this.updateStar}\n          ratingList={this.props.contacts.ratingList}\n          changeClientRating={this.changeClientRating.bind(this)}\n          updateRatingSuccess={this.props.contacts.updateRatingSuccess}\n        />\n      ));\n\n    if (\n      !this.props.contacts.loading &&\n      this.props.contacts.closingClientContacts.today_call_total\n    ) {\n      callsToday = (\n        <p className=\"quote-section total-contacts\">\n          {\" \"}\n          Total Contacts:{\" \"}\n          {this.props.contacts.closingClientContacts.today_call_total}{\" \"}\n        </p>\n      );\n    }\n    if (this.props.contacts.noContacts) {\n      noContacts = (\n        <div className=\"calls-today\">\n          <div className=\"grey-circle\">\n            <i className=\"material-icons\">phone</i>\n          </div>\n          <h2 className=\"no-results\">You have no cl contacts</h2>\n        </div>\n      );\n    }\n    return (\n      <Row>\n        <Row>\n          {this.props.contacts.loading && <Loader />}\n\n          <GivebackModal\n            isOpen={this.state.loginModalOpen}\n            closeModal={this.closeModal}\n            onSubmit={this.handleModalSubmit}\n            reasonCodes={this.props.contacts.reasonCodes}\n          />\n          {noContacts}\n          {callsToday}\n        </Row>\n        <Row>{contacts}</Row>\n      </Row>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    contactActions: bindActionCreators(contactActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClosingClientContacts);\n"],"sourceRoot":""}