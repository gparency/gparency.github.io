{"version":3,"sources":["components/missingQuotesBroker/missingQuotesBrokerByBrokerContainer.js"],"names":["missingQuotesBrokerContainer","props","state","isSearchActive","toggle","search","sessionStorage","getItem","this","setState","setItem","searchWords","match","searchURL","forEach","elem","i","length","actions","loadDeals","navActions","updateNavTitle","comps","previousScrollPos","localScrollPos","setTimeout","window","scrollTo","compsActions","resetScrollPosition","nextProps","missingQuotes","loading","scrollToContainer","loadMissingQuotesbyBroker","params","broker_id","e","target","value","keyCode","preventDefault","deal_id","setPageAndScrollPos","scrollY","Navigation","go","banker_id","successMessage","quotePassSuccessToast","closeToast","closeMQDealPassSuccessToast","delay","className","variant","onClick","quoteSnoozeSuccessToast","closeMQSnoozeSuccessToast","message","quoteIrrelevantSuccessToast","closeMQIrrelevantSuccessToast","mq","toast","show","missingQuotesActions","success","errorMBQToast","closeUpdateMQBToast","updateNoteModalSuccess","closeUpdateNoteMQModalToast","updateQTSStarModal","closeQTSStarModalToast","to","src","alt","broker_name","type","id","checked","onChange","toggleToggle","bind","htmlFor","isOpen","ariaHideApp","contentLabel","shouldCloseOnOverlayClick","noQuotes","noSearchQuotes","isSearchDeal","quotes","authentication","JSON","parse","localStorage","passDeal","snoozeDeal","irrelevantDeal","submitNoteModal","updateNote","submitDealNoteModal","updateDealNote","noAdminViewData","localAdminBankId","bank_id","loadingAdminData","getAdminViewData","removeAdminViewData","getContactFullInfo","getFullContactInfo","updateDealQTSStar","updateBankQTSStar","contact","loadingContact","noContact","openBankDD","openDealDD","React","Component","connect","missingQuotesBroker","title","navTitle","dispatch","bindActionCreators","missingQuotesBrokerActions","navigationTitleActions"],"mappings":"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","file":"static/js/80.a7621a73.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as missingQuotesBrokerActions from \"../../actions/missingQuotesBrokerActions\";\nimport * as missingQuotesActions from \"../../actions/missingQuotesActions\";\nimport * as navigationTitleActions from \"../../actions/navigationTitleActions\";\nimport * as compsActions from \"../../actions/compsActions\";\nimport Row from \"muicss/lib/react/row\";\nimport MissingQuotesBrokerPage from \"./missingQuotesBrokerPage\";\nimport Modal from \"react-modal\";\nimport Button from \"muicss/lib/react/button\";\nimport Expire from \"../common/Expire\";\nimport { Link } from \"react-router-dom\";\nimport { Navigation } from \"../../lib\";\n\nclass missingQuotesBrokerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSearchActive: false,\n      toggle: true,\n      search: sessionStorage.getItem(\"mq_broker_search\")\n        ? sessionStorage.getItem(\"mq_broker_search\")\n        : \"\",\n    };\n  }\n\n  toggleToggle() {\n    this.setState({ toggle: !this.state.toggle }, function () {\n      if (!this.state.toggle) {\n        sessionStorage.setItem(\"mq_broker_active_banker_id\", 0);\n      }\n      sessionStorage.setItem(\"MQB_toggle-broker\", this.state.toggle);\n      if (this.state.isSearchActive || this.state.search) {\n        let searchWords = this.state.search.match(/\\w+/g);\n        let searchURL = \"\";\n        searchWords.forEach((elem, i) => {\n          if (searchWords.length - 1 === i) {\n            searchURL += elem;\n          } else {\n            searchURL += elem + \"+\";\n          }\n        });\n        this.props.actions.search(\n          searchURL,\n          this.state.toggle ? \"bank\" : \"deal\"\n        );\n      } else {\n        this.loadDeals();\n      }\n    });\n  }\n\n  componentDidMount() {\n    if (this.state.search && this.state.search.length) {\n      let searchWords = this.state.search.match(/\\w+/g);\n      let searchURL = \"\";\n      searchWords.forEach((elem, i) => {\n        if (searchWords.length - 1 === i) {\n          searchURL += elem;\n        } else {\n          searchURL += elem + \"+\";\n        }\n      });\n      this.props.actions.search(\n        searchURL,\n        sessionStorage.getItem(\"MQB_toggle-broker\") === \"true\" ? \"bank\" : \"deal\"\n      );\n    }\n\n    this.props.navActions.updateNavTitle(\"Missing Quotes\");\n    if (!sessionStorage.getItem(\"MQB_toggle-broker\")) {\n      sessionStorage.setItem(\"MQB_toggle-broker\", this.state.toggle);\n    }\n\n    if (sessionStorage.getItem(\"MQB_toggle-broker\") === \"false\") {\n      this.setState({ toggle: false }, function () {\n        this.loadDeals();\n      });\n    } else {\n      this.loadDeals();\n    }\n    if (\n      this.props.comps.previousScrollPos &&\n      this.props.comps.previousScrollPos.length\n    ) {\n      var localScrollPos = this.props.comps.previousScrollPos;\n      setTimeout(() => {\n        window.scrollTo(0, localScrollPos[localScrollPos.length - 1]);\n      }, 400);\n    }\n\n    setTimeout(() => {\n      this.props.compsActions.resetScrollPosition();\n    }, 600);\n  }\n\n  scrollToContainer() {\n    if (\n      this.props.comps.previousScrollPos &&\n      this.props.comps.previousScrollPos.length\n    ) {\n      window.scrollTo(\n        0,\n        this.props.comps.previousScrollPos[\n          this.props.comps.previousScrollPos.length - 1\n        ]\n      );\n      this.props.compsActions.resetScrollPosition();\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.missingQuotes.loading && !nextProps.missingQuotes.loading) {\n      setTimeout(() => this.scrollToContainer(), 0);\n    }\n  }\n\n  loadDeals() {\n    this.props.actions.loadMissingQuotesbyBroker(\n      this.state.toggle ? \"bank\" : \"deal\",\n      this.props.match.params.broker_id\n    );\n  }\n\n  searchChange(e) {\n    this.setState({ search: e.target.value }, function () {\n      if (this.state.search.length) {\n        this.setState({ isSearchActive: true });\n      }\n      if (!this.state.search.length) {\n        this.setState({ isSearchActive: false });\n      }\n    });\n  }\n\n  handleSearchEnter(e) {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      sessionStorage.setItem(\"mq_broker_search\", e.target.value);\n      if (e.target.value.length) {\n        let searchWords = e.target.value.match(/\\w+/g);\n        let searchURL = \"\";\n        searchWords.forEach((elem, i) => {\n          if (searchWords.length - 1 === i) {\n            searchURL += elem;\n          } else {\n            searchURL += elem + \"+\";\n          }\n        });\n        this.props.actions.search(\n          searchURL,\n          this.state.toggle ? \"bank\" : \"deal\"\n        );\n      } else {\n        this.loadDeals();\n      }\n    }\n  }\n\n  openDealDD(deal_id) {\n    this.props.compsActions.setPageAndScrollPos(\n      \"/missingQuotesbroker\",\n      window.scrollY\n    );\n    Navigation.go(`/MQB-deal-details/${deal_id}/bank-quotes`);\n  }\n\n  openBankDD(deal_id, banker_id) {\n    sessionStorage.setItem(\"mq_broker_active_banker_id\", banker_id);\n    this.props.compsActions.setPageAndScrollPos(\n      \"/missingQuotesbroker\",\n      window.scrollY\n    );\n    Navigation.go(`/MQB-deal-details/${deal_id}/bank-quotes`);\n  }\n\n  render() {\n    let successMessage = null;\n    if (this.props.missingQuotes.quotePassSuccessToast) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeMQDealPassSuccessToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>The deal has successfully been passed</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeMQDealPassSuccessToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.quoteSnoozeSuccessToast) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeMQSnoozeSuccessToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.missingQuotes.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeMQSnoozeSuccessToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.quoteIrrelevantSuccessToast) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeMQIrrelevantSuccessToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>The deal has successfully been marked irrelevant</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeMQIrrelevantSuccessToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.mq.toast && this.props.mq.toast.show) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.missingQuotesActions.closeToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.mq.toast.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.missingQuotesActions.closeToast}\n            >\n              {this.props.mq.toast.success ? \"Done\" : \"Dismiss\"}\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.errorMBQToast) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeUpdateMQBToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>The deal has successfully been passed</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeUpdateMQBToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.updateNoteModalSuccess) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeUpdateNoteMQModalToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.missingQuotes.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeUpdateNoteMQModalToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.updateQTSStarModal) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeQTSStarModalToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.missingQuotes.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeQTSStarModalToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    return (\n      <div className=\"mq-broker-page\">\n        <Row className=\"sub-header\">\n          <div className=\"mq-broker-subheader-broker\">\n            <Link className=\"back-arrow\" to=\"/missingQuotesBroker\">\n              <img src=\"/images/icons/arrow-left.png\" alt=\"arrow-left\" />\n            </Link>\n            <p className=\"mq-broker-name\">\n              {this.props.match.params.broker_name}\n            </p>\n            <div className=\"mq-broker-toggle-broker\">\n              <p className={this.state.toggle ? \"\" : \"active\"}>Deal</p>\n              <div className=\"toggle\">\n                <input\n                  type=\"checkbox\"\n                  id=\"toggle\"\n                  checked={this.state.toggle}\n                  className=\"cbx hidden\"\n                  onChange={this.toggleToggle.bind(this)}\n                />\n                <label htmlFor=\"toggle\" className=\"lbl\"></label>\n              </div>\n              <p className={this.state.toggle ? \"active\" : \"\"}>Bank</p>\n            </div>\n          </div>\n        </Row>\n        {this.props.missingQuotes.loading ? (\n          <Modal\n            className=\"loading-modal\"\n            isOpen={this.props.missingQuotes.loading}\n            ariaHideApp={false}\n            contentLabel=\"Modal\"\n            shouldCloseOnOverlayClick={false}\n          >\n            <div\n              className={\n                this.props.missingQuotes.loading ? \"centered-spinner\" : \"hidden\"\n              }\n            >\n              <img\n                src=\"/images/icons/spin.svg\"\n                className=\"loading-spinner\"\n                alt=\"loading spinner\"\n              />\n            </div>\n          </Modal>\n        ) : (\n          <MissingQuotesBrokerPage\n            toggle={this.state.toggle}\n            noQuotes={this.props.missingQuotes.noQuotes}\n            noSearchQuotes={this.props.missingQuotes.noSearchQuotes}\n            isSearchDeal={this.props.missingQuotes.isSearchDeal}\n            quotes={this.props.missingQuotes.missingQuotes}\n            authentication={JSON.parse(localStorage.getItem(\"data\"))}\n            isSearchActive={this.state.isSearchActive}\n            passDeal={this.props.actions.passDeal}\n            snoozeDeal={this.props.actions.snoozeDeal}\n            irrelevantDeal={this.props.actions.irrelevantDeal}\n            submitNoteModal={this.props.actions.updateNote}\n            submitDealNoteModal={this.props.actions.updateDealNote}\n            noAdminViewData={this.props.missingQuotes.noAdminViewData}\n            localAdminBankId={this.props.missingQuotes.bank_id}\n            loadingAdminData={this.props.missingQuotes.loadingAdminData}\n            getAdminViewData={this.props.actions.getAdminViewData}\n            removeAdminViewData={this.props.actions.removeAdminViewData}\n            getContactFullInfo={this.props.actions.getFullContactInfo}\n            updateDealQTSStar={this.props.actions.updateDealQTSStar}\n            updateBankQTSStar={this.props.actions.updateBankQTSStar}\n            setPageAndScrollPos={this.props.compsActions.setPageAndScrollPos}\n            contact={this.props.missingQuotes.contact}\n            loadingContact={this.props.missingQuotes.loadingContact}\n            noContact={this.props.missingQuotes.noContact}\n            openBankDD={this.openBankDD.bind(this)}\n            openDealDD={this.openDealDD.bind(this)}\n          />\n        )}\n        {successMessage}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    missingQuotes: state.missingQuotesBroker,\n    mq: state.missingQuotes,\n    title: state.navTitle,\n    comps: state.comps,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(missingQuotesBrokerActions, dispatch),\n    missingQuotesActions: bindActionCreators(missingQuotesActions, dispatch),\n    navActions: bindActionCreators(navigationTitleActions, dispatch),\n    compsActions: bindActionCreators(compsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(missingQuotesBrokerContainer);\n"],"sourceRoot":""}