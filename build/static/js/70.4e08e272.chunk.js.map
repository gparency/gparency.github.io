{"version":3,"sources":["components/eCalc/DealDetailsEcalc.jsx"],"names":["DealDetailsEcalc","props","dealId","match","params","dispatch","useDispatch","dirty","useSelector","state","eCalcFormsNoPersist","ecalcValues","shallowEqual","handleNavigation","useCallback","location","action","pathParts","pathname","split","includes","useEffect","getEcalcByDealId","persist","handleSave","ecalc_id","otherValues","editEcalcById","values","ecalcId","saveEcalc","isDealDetails","hasToolbar","when","message"],"mappings":"qNAOe,SAASA,EAAT,GAAyC,IAAD,EAATC,EAAS,oBAC/CC,EAAM,UAAGD,EAAME,MAAMC,cAAf,aAAG,EAAoBF,OAC7BG,EAAWC,cACXC,EAAQC,aAAY,SAACC,GAAD,OAAWA,EAAMC,oBAAoBH,SACzDI,EAAcH,aAClB,SAACC,GAAD,OAAWA,EAAMC,sBACjBE,KAGIC,EAAmBC,uBACvB,SAACC,EAAUC,GACT,GAAIT,EAAO,CAAC,IAEJU,EADeF,EAAbG,SACmBC,MAAM,KACjC,SACGF,EAAUG,SAAS,gBAClBH,EAAUG,SAAS,iBACrBH,EAAUG,SAAS,WAIZ,8CAGX,OAAO,IAET,CAACb,IAGHc,qBAAU,WACJnB,GACFG,EAASiB,YAAiB,CAAEpB,SAAQqB,SAAS,OAE9C,CAACrB,EAAQG,IAEZ,IAAMmB,EAAaV,uBAAY,WAAO,IAC5BW,EAAoCd,EAApCc,SAAoBC,GAAgBf,EAA1BJ,MADiB,YACSI,EADT,uBAGjCN,EADEoB,EAEAE,YAAc,CACZC,OAAQF,EACRG,QAASJ,EACTvB,SACAqB,SAAS,IAIJO,YAAU,CAAEF,OAAQF,EAAaxB,SAAQqB,SAAS,OAE5D,CAACrB,EAAQG,EAAUM,IAEtB,OACE,kBAAC,WAAD,KACE,kBAAC,UAAD,eACEoB,eAAa,GACT9B,EAFN,CAGE+B,YAAU,EACVR,WAAYA,KAEd,kBAAC,IAAD,CAAQS,MAAM,EAAMC,QAASrB","file":"static/js/70.4e08e272.chunk.js","sourcesContent":["import React, { useEffect, useCallback, Fragment } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { Prompt } from \"react-router-dom\";\nimport { getEcalcByDealId } from \"../../actions/eCalcForms\";\nimport CalculatorContainer from \"./CalculatorContainer\";\nimport { saveEcalc, editEcalcById } from \"../../actions/eCalcForms\";\n\nexport default function DealDetailsEcalc({ ...props }) {\n  const dealId = props.match.params?.dealId;\n  const dispatch = useDispatch();\n  const dirty = useSelector((state) => state.eCalcFormsNoPersist.dirty);\n  const ecalcValues = useSelector(\n    (state) => state.eCalcFormsNoPersist,\n    shallowEqual\n  );\n\n  const handleNavigation = useCallback(\n    (location, action) => {\n      if (dirty) {\n        const { pathname } = location;\n        const pathParts = pathname.split(\"/\");\n        if (\n          (pathParts.includes(\"properties\") ||\n            pathParts.includes(\"broker-deal\")) &&\n          pathParts.includes(\"ecalc\")\n        ) {\n          return true;\n        } else {\n          return \"You have unsaved changes that will be lost.\";\n        }\n      }\n      return true;\n    },\n    [dirty]\n  );\n\n  useEffect(() => {\n    if (dealId) {\n      dispatch(getEcalcByDealId({ dealId, persist: false }));\n    }\n  }, [dealId, dispatch]);\n\n  const handleSave = useCallback(() => {\n    const { ecalc_id, dirty, ...otherValues } = ecalcValues;\n    if (ecalc_id) {\n      dispatch(\n        editEcalcById({\n          values: otherValues,\n          ecalcId: ecalc_id,\n          dealId,\n          persist: false,\n        })\n      );\n    } else {\n      dispatch(saveEcalc({ values: otherValues, dealId, persist: false }));\n    }\n  }, [dealId, dispatch, ecalcValues]);\n\n  return (\n    <Fragment>\n      <CalculatorContainer\n        isDealDetails\n        {...props}\n        hasToolbar\n        handleSave={handleSave}\n      />\n      <Prompt when={true} message={handleNavigation} />\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}