{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","components/eCalc/itemizations/potential.styles.js","components/eCalc/itemizations/PotentialIncomeItemized.js","components/eCalc/itemizations/vacancy.styles.js","components/eCalc/itemizations/VacancyItemized.js","components/eCalc/itemizations/expenses.styles.js","components/eCalc/itemizations/ExpensesItemized.js","components/eCalc/itemizations/closingCosts.styles.js","components/eCalc/itemizations/ClosingCostItemized.js","components/eCalc/calculators/CapRate.styles.js","components/eCalc/calculators/CapRate.js","components/eCalc/calculators/CapRate.logic.js","components/eCalc/components/BlendedRateItemization.logic.js","components/eCalc/calculators/EquityNeeded.styles.js","components/eCalc/calculators/EquityNeeded.js","components/eCalc/calculators/EquityNeeded.logic.js","components/eCalc/calculators/MortgageDscr.styles.js","components/eCalc/calculators/MortgageDscr.js","components/eCalc/calculators/CashOnCash.logic.js","components/eCalc/calculators/CashOnCash.styles.js","components/eCalc/calculators/CashOnCash.js","components/eCalc/calculators/Irr.logic.js","components/eCalc/calculators/Irr.styles.js","components/eCalc/calculators/Irr.js","components/eCalc/calculators/EquityWaterfall.logic.js","components/eCalc/calculators/EquityWaterfall.styles.js","components/eCalc/calculators/EquityWaterfall.js","components/eCalc/results.styles.js","components/eCalc/results.js","components/eCalc/Calculator.styles.js","components/eCalc/Calculator.js","components/eCalc/CalculatorContainer.styles.js","components/eCalc/CalculatorContainer.js"],"names":["createSvgIcon","React","d","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","useStyles","makeStyles","styles","PotentialIncomeItemized","open","handleClose","storeSliceName","persist","dispatch","useDispatch","isInitialState","useRef","useState","initialValues","setInitialValues","itemsToHide","setItemsToHide","total","setTotal","totalAddedFields","setTotalAddedFields","itemizationValues","useSelector","state","itemizations","eCalcForms","POTENTIAL_GROSS_ITEMIZATION","shallowEqual","newValueRef","useCallback","node","scrollIntoView","behavior","block","useEffect","current","annualAmount","getTotalAnnualAmount","eCalcOnMultiChange","calculator","CAP_RATE","valuesObj","potential_annual_gross_income","potential_monthly_gross_income","setActiveCalculator","addedFieldsArr","Object","keys","reduce","acc","cur","includes","split","keyNumber","length","isNaN","push","_max","handleKeysBlur","e","target","value","formatted","indexOf","_snakeCase","newValues","renameObjKey","object","oldKey","newKey","updateItemization","handleValuesBlur","nestedKey","syncedFields","syncKey","entryMethods","ANNUAL","MONTHLY","syncValue","noDecimal","parseToNumber","syncFields","handleAdd","monthly","annual","handleReset","handleUndoableDelete","key","list","undoDelete","filter","l","handleDelete","otherItems","Itemization","title","totals","label","List","map","itemName","isDeleted","ListItem","listItem","disableGutters","innerRef","undefined","handleBlur","Grid","container","hidden","item","xs","gridItem","valuesKey","startAdornment","Divider","divider","_sum","_flatMap","VacancyItemized","setTotals","VACANCY","userItemizationEntryMethods","getTotalAmounts","dollar","DOLLAR_AMOUNT","percent","PERCENT_AMOUNT","addUserItemizationEntryMethod","itemizationName","entryMethodNames","deleteUserItemizationEntryMethod","dollarAmt","percentAmt","vacancy_as_dollar","vacancy_as_percent","endAdornment","formatPercent","numberToPercent","dollarAmounts","ExpensesItemized","ANNUAL_EXPENSES","annual_expenses","monthly_expenses","LOAN_AMOUNT","ClosingCostItemized","CLOSING_COSTS","CLOSING_COST_ITEMIZED","percentOf","itemizationsPercentOf","purchase_price","loan_amount_dollar","EQUITY_NEEDED","percentOfAmountObj","showPercentValue","purchasePrice","canShowPercent","updateItemizationPercentOf","deleteClosingCostPercentOf","canBeSynced","hasOwnProperty","percentOfAmount","closing_costs_dollar","closing_costs_percent","togglePercentOf","curPercentOf","percentOfField","dollarAmount","entryMethod","onClick","style","cursor","rv","calculatorInputs","CapRate","dirty","capRateValues","userEntryMethods","incomeItemizationValues","vacancyItemizationValues","vacancyUserItemizationEntryMethods","expensesItemizationValues","first_year_noi","vacancy","handleInputChange","event","checked","intValue","parseFloat","replace","eCalcOnChange","formatInput","setIsDirty","effectiveAnnual","setEffectiveAnnual","effectiveMonthly","setEffectiveMonthly","showIncomeItemization","setShowIncomeItemization","showVacancyItemization","setShowVacancyItemization","showExpensesItemization","setShowExpensesItemization","isIncomeItemized","setIsIncomeItemized","isVacancyItemized","setIsVacancyItemized","isExpensesItemized","setIsExpensesItemized","showIncomeDisabledMsg","setShowIncomeDisabledMsg","showVacancyDisabledMsg","setShowVacancyDisabledMsg","showExpensesDisabledMsg","setShowExpensesDisabledMsg","checkIfItemizedAnnualMonthly","effectiveIncome","formatDollar","results","syncVacancyItemizationWithIncome","income","syncVacancy","displayFormat","calcCapRate","addResults","removeResults","openIncomeItemization","stopPropagation","closeIncomeItemization","openVacancyItemization","closeVacancyItemization","openExpensesItemization","closeExpensesItemization","calcContainer","TextField","inputProps","inputMode","pattern","margin","fullWidthInput","onChange","fullWidth","InputProps","input","InputAdornment","inputAdornment","InputLabelProps","inputLabel","fullWidthLabel","shrink","field","lineInputsContainer","smallInput","disabled","listIcon","inputsDivider","inputWithPadding","addUserEntryMethod","POTENTIAL_GROSS_INCOME","EXPENSES","_debounce","syncedValues","syncVacancyItemizationFields","getVacancyItemizationAmounts","calcTotalLoanAndBlendedRate","loans","totalLoan","blendedRate","Array","isArray","loansList","loan","amount","rate","a","b","prev","toFixed","EquityNeeded","showBlendedRateItemization","setShowBlendedRateItemization","equityNeededValues","closingCostItemizationValues","closingCostItemizationPercentOf","closingCostUserItemizationEntryMethods","closingCost","loanAmount","reduxLoanAmountOf","loanAmountOf","loan_amount_percent","total_capitalization","meta","setLoanAmountOf","showInputsMissingMsg","setShowInputsMissingMsg","setLoans","setTotalLoan","totalLoanPercentage","setTotalLoanPercentage","setBlendedRate","showClosingCostItemization","setShowClosingCostItemization","isClosingCostItemized","setIsClosingCostItemized","showClosingCostDisabledMsg","setShowClosingCostDisabledMsg","syncClosingCostItemization","percentOfFields","calculateTotalCapitalization","loanAmountMethod","calculateLoanAmount","calcEquityNeeded","showDebtYield","calcDebtYield","toggleLoanAmountOf","amountOf","LOAN_AMOUNT_OF","PURCHASE_PRICE","TOTAL_CAPITALIZATION","openBlendedRateItemization","mixpanel","track","popup","openClosingCostItemization","closeClosingCostItemization","isItemized","some","toggleContainer","toggle","pointer","toggleActive","onClear","clearBlendedRateItemization","onClose","console","log","CLOSING_COST","syncClosingCostItemizationFields","getClosingCostItemizationAmounts","MortgageDscr","inputValues","MORTGAGE_AND_DSCR","interest_rate","init_loan_term_yrs","io_years","amortization_years","mortgage_post_io","resultsValues","mortgage_during_io","showIO","setShowIO","showMaxBank","setShowMaxBank","showRatesModal","setShowRatesModal","openRatesModal","closeRatesModal","calcMortgageDcsrPostIO","ioResults","calcMortgageDcsrDuringIO","amortizationSchedule","calcAmortizationSchedule","calcBalanceAtMaturity","calcDcsrduringIo","calcDcsrPostIo","closeIO","showAmortizationScheduleModal","setShowAmortizationScheduleModal","rateIcon","toggleLink","marginBottom","longLabel","fields","invalidFields","errorMessage","join","showNotification","message","validateAmortScheduleFields","Notification","onOpen","handleOpen","calculateFreeCashFlow","annualPayments","monthlyAnnualPaymentsAmortizationPeriod","payments","CashOnCash","cashOnCashValues","CASH_ON_CASH","mortgageDcsr","equity_needed","first_year_cash_flow","resultValue","netCashFlow","cashOncashReturn","freeCashFlow","calcFirstYearCashOnCash","calcWeightedAvg","data","holding_period_yrs","startingVal","endingVal","Math","pow","capitalEvent","fontWeight","textDecorationLine","opacity","capitalEventEligible","Irr","showSchedule","setShowSchedule","irrValues","IRR","mortgageDscrValues","IrrScheduleValues","irrSchedule","irrCapitalEvent","hasCapitalEvent","capitalEventType","capitalEventYear","capitalEventInterestRate","capitalEventAmortizationYears","capitalEventLoanAmount","capitalEventNetLoan","projected_gross_income_rate","stabilized_vacancy","projected_annual_expense","projected_cap_rate_at_sale","projected_closing_costs_at_sale","year_of_stabilization","pgi","stabilized_vacancies","expenses","noi","irr","grand_total_distribution","capitalEventGrandTotalDistFromSale","capitalEventIRR","pgiWeightedAvg","setPgiWeightedAvg","expensesWeightedAvg","setExpensesWeightedAvg","noiWeightedAvg","setNoiWeightedAvg","openSchedule","calculate","mortgageBalance","annual_mortgage_post_io","find","m","annual_mortgage_during_io","mortgage_balance_amount","result","calculateIRRSchedule","irrScheduleChange","p","scheduleOpened","showIRRSchedule","calcEquityMultiple","isMobile","useMobile","select","inputOverride","numbers","num","MenuItem","marginTop","marginRight","extraLongLabel","oneLinerLongLabel","mobileInputWithPadding","_","i","clearIrrCapitalEvent","IRR_CAPITAL_EVENT","regexExp","RegExp","match","slice","finance","Finance","add","num1","num2","subtract","num3","Number","multiply","divide","EquityWaterfall","equityWaterfallState","equityWaterfall","cashOnCash","net_cash_flow","capitalEventNetCashFlow","equityNeededDisplay","gpPercent","lpPercent","gpDollars","lpDollars","hurdles","equityNeeded","formatDollarDisplay","endPercentPlaceholder","setEndPercentPlaceholder","calculateFromGpPercent","getDollars","dispatchMultiChange","formatValue","calculateFromLpPercent","calculateFromGpDollars","getPercent","calculateFromLpDollars","EQUITY_WATERFALL","dollars","bigNum","smallNum","handleChange","handleHurdleChange","index","emptyHurdle","startPercent","endPercent","promotePercent","hurdlesC","lpStats","gpStats","NCF","currentCashFlows","cf","forEach","hurdle","hurdleIndex","lpBalance","gpBalance","lpAdjustedPercent","gpAdjustedPercent","gpDistribution","lpDistribution","lpRequiredRet","firstEq","min","gpRequiredRet","gpIrr","lpIrr","lpTotal","gpTotal","error","calculateStats","helperText","wrappedLabelMargin","mobileMultilineLabelInputsDivider","numberWithCommas","h","hurdleTitle","placeholder","onBlur","onFocus","Boolean","decIndex","sideResults","top","right","maxWidth","isMobileResults","flexDirection","maxHeight","showSideRates","overflowY","zIndex","scrollbarWidth","msOverflowStyle","breakpoints","between","ECALC_LARGE_SCREEN","sideResultsDealDetails","mobileResultsPage","paddingTop","resultsTitle","fontStyle","padding","paddingBottom","tabFlex","paddingLeft","tabRoot","minHeight","resultsTab","minWidth","resultsTabActive","resultsList","paddingRight","listContainer","resultsKeys","down","resultDivider","resultsSectionContainer","boxSizing","resultsSectionListItem","flex","resultsSectionTitle","textTransform","resultsSectionLink","resultsSettingsIcon","brokerContainer","broker","bottom","boxShadow","noResultsContainer","subTitle","letterSpacing","thirdTitle","noResultsSmallText","noResults","threeDotsContainer","threeDots","summaryText","summaryResultValue","SideResults","setShowMobileResultsPage","isDealDetails","useMediaQuery","ECALC_SHOW_SIDE_RATES","page","setPage","handlePageTabs","newValue","Tabs","TabIndicatorProps","flexContainer","Tab","selected","marginLeft","SummaryView","NumbersView","useEcalcResults","resultsCount","hasResults","showIRRScheduleModal","setShowIRRScheduleModal","showDebtYieldModal","setShowDebtYieldModal","showMaxLoan","showAmortizationSchedule","resultsDisplayFormat","formatDisplay","DebtYieldModal","resultsSummary","renderSummaryResult","summary","values","i2","toString","toLowerCase","mobileTitleContainer","isTabletSlider","isTablet","left","hasToolbar","calculatorsSection","tabletCalculatorsSection","calculatorsSectionWithResults","tabletCalculatorsSectionWithResults","tabletCalculatorsSectionWithResultsDeal","ecalcContainer","only","tabletEcalcContainer","noRatesContainer","ecalcTitle","tabletEcalcTitle","tabletSubTitle","drawer","borderBottomLeftRadius","borderBottomRightRadius","mobileClose","expansionPanelDetails","calcListItemDetails","calcListItem","calcListItemTitle","calcListItemText","calcListItemIcon","calcListItemIconContainer","addIcon","expansionPanel","debounceTrack","debounce","formatedForMix","curr","Calculator","showSideResults","ECALC_SHOW_SIDE_RESULTS","ECALC_TABLET_VIEW","showMobileResultsPage","openCalcs","addOpenCalc","calcId","setOpenCalcs","removeOpenCalc","c","firstRender","useDeepCompareEffect","SwipeableDrawer","anchor","disableSwipeToOpen","disableDiscovery","paperAnchorTop","CalculatorListSection","text","Icon","DomainIcon","CalcComponent","isExpanded","MoneyIcon","AccountIcon","LoopRoundedIcon","TrendingUpIcon","WaterfallIcon","expand","setExpand","handleToggle","section","ex","Accordion","expanded","elevation","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","cssReset","tabsContainer","layout","CalculatorContainer","handleSave","setStoreSliceName","hash_id","parse","window","location","search","isPublicEcalc","getPublicEcalcById","updateNavTitle","Paper"],"mappings":"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","file":"static/js/9.ce46c9cd.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import { makeStyles } from \"@material-ui/core\";\nimport { styles } from \"./sharedStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  ...styles(theme),\n}));\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  Fragment,\n} from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport _snakeCase from \"lodash/snakeCase\";\nimport _flatMap from \"lodash/flatMap\";\nimport _sum from \"lodash/sum\";\nimport _max from \"lodash/max\";\nimport { Divider, List, ListItem, Grid } from \"@material-ui/core\";\nimport { eCalcForms, renameObjKey } from \"../../../lib\";\nimport { ItemizationLayout } from \"./Itemization\";\nimport { EditableItemizationText } from \"../components\";\nimport {\n  updateItemization,\n  eCalcOnMultiChange,\n  setActiveCalculator,\n} from \"../../../actions/eCalcForms\";\nimport { entryMethods, noDecimal, parseToNumber } from \"../helpers\";\nimport { useStyles } from \"./potential.styles\";\n\nexport function PotentialIncomeItemized({\n  open,\n  handleClose,\n  storeSliceName,\n  persist,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isInitialState = useRef(true);\n  const [initialValues, setInitialValues] = useState();\n  const [itemsToHide, setItemsToHide] = useState([]);\n  const [total, setTotal] = useState(0);\n  // we need to track how many fields the user added\n  const [totalAddedFields, setTotalAddedFields] = useState(0);\n\n  const itemizationValues = useSelector(\n    (state) =>\n      state[storeSliceName].itemizations?.[\n        eCalcForms.POTENTIAL_GROSS_ITEMIZATION\n      ],\n    shallowEqual\n  );\n\n  const newValueRef = useCallback((node) => {\n    if (node !== null) {\n      node.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (itemizationValues) {\n      if (isInitialState.current) {\n        setInitialValues(itemizationValues);\n        // we need to store the initial state so we can reset\n        isInitialState.current = false;\n      } else {\n        const annualAmount = getTotalAnnualAmount(itemizationValues);\n        dispatch(\n          eCalcOnMultiChange({\n            calculator: eCalcForms.CAP_RATE,\n            valuesObj: {\n              potential_annual_gross_income: annualAmount,\n              potential_monthly_gross_income: annualAmount / 12,\n            },\n            persist,\n          })\n        );\n        // need to know which calculator the user is entering for mobile slider\n        dispatch(setActiveCalculator({ name: \"capRate\", persist }));\n      }\n      setTotal(getTotalAnnualAmount(itemizationValues));\n      const addedFieldsArr = Object.keys(itemizationValues).reduce(\n        (acc, cur) => {\n          if (cur.includes(\"new_income\")) {\n            // get the number at the end of the key\n            const split = cur.split(\"_\");\n            const keyNumber = split[split.length - 1];\n            if (!isNaN(keyNumber)) {\n              acc.push(+keyNumber);\n            }\n          }\n          return acc;\n        },\n        [0]\n      );\n      setTotalAddedFields(_max(addedFieldsArr));\n    }\n  }, [dispatch, persist, itemizationValues]);\n\n  const handleKeysBlur = useCallback(\n    (e) => {\n      const { name, value } = e.target;\n      const formatted = value?.indexOf(\"/\") === -1 ? _snakeCase(value) : value;\n      const newValues = renameObjKey({\n        object: itemizationValues,\n        oldKey: name,\n        newKey: formatted,\n      });\n      dispatch(\n        updateItemization({\n          name: eCalcForms.POTENTIAL_GROSS_ITEMIZATION,\n          value: newValues,\n          persist,\n        })\n      );\n    },\n    [dispatch, persist, itemizationValues]\n  );\n\n  const handleValuesBlur = useCallback(\n    (e, nestedKey) => {\n      const { name, value } = e.target;\n      const syncedFields = syncFields({ nestedKey, value });\n      dispatch(\n        updateItemization({\n          name: eCalcForms.POTENTIAL_GROSS_ITEMIZATION,\n          value: {\n            ...itemizationValues,\n            [name]: { ...itemizationValues[name], ...syncedFields },\n          },\n          persist,\n        })\n      );\n    },\n    [dispatch, persist, itemizationValues]\n  );\n\n  const handleAdd = useCallback(() => {\n    dispatch(\n      updateItemization({\n        name: eCalcForms.POTENTIAL_GROSS_ITEMIZATION,\n        value: {\n          ...itemizationValues,\n          [`new_income_${totalAddedFields + 1}`]: { monthly: 0, annual: 0 },\n        },\n        persist,\n      })\n    );\n  }, [dispatch, persist, itemizationValues, totalAddedFields]);\n\n  const handleReset = useCallback(() => {\n    dispatch(\n      updateItemization({\n        name: eCalcForms.POTENTIAL_GROSS_ITEMIZATION,\n        value: initialValues,\n        persist,\n      })\n    );\n  }, [dispatch, initialValues, persist]);\n\n  const handleUndoableDelete = useCallback((key) => {\n    setItemsToHide((list) => [...list, key]);\n  }, []);\n\n  const undoDelete = useCallback((key) => {\n    setItemsToHide((list) => list.filter((l) => key !== l));\n  }, []);\n\n  const handleDelete = useCallback(\n    (key) => {\n      const { [key]: itemToDelete, ...otherItems } = itemizationValues;\n      dispatch(\n        updateItemization({\n          name: eCalcForms.POTENTIAL_GROSS_ITEMIZATION,\n          value: otherItems,\n          persist,\n        })\n      );\n      undoDelete(key);\n    },\n    [dispatch, persist, itemizationValues, undoDelete]\n  );\n\n  if (!itemizationValues) return null;\n  return (\n    <ItemizationLayout\n      open={open}\n      handleClose={handleClose}\n      handleAdd={handleAdd}\n      handleReset={handleReset}\n      title={\n        <span>\n          Potential Gross Income <br /> Itemized\n        </span>\n      }\n      totals={{ label: \"Potential Gross Income:\", value: total }}\n    >\n      <List>\n        {Object.keys(itemizationValues).map((itemName) => {\n          const { monthly, annual } = itemizationValues[itemName];\n          const isDeleted = itemsToHide.indexOf(itemName) > -1;\n          return (\n            <Fragment key={itemName}>\n              <ListItem\n                classes={{ root: classes.listItem }}\n                disableGutters\n                innerRef={\n                  itemName === `new_income_${totalAddedFields}`\n                    ? newValueRef\n                    : undefined\n                }\n              >\n                <EditableItemizationText\n                  value={itemName}\n                  name={itemName}\n                  type=\"key\"\n                  handleBlur={handleKeysBlur}\n                  handleUndoableDelete={handleUndoableDelete}\n                  undoDelete={undoDelete}\n                  handleDelete={handleDelete}\n                  isDeleted={isDeleted}\n                />\n                <Grid\n                  container\n                  className={clsx({ [classes.hidden]: isDeleted })}\n                >\n                  <Grid item xs={4} />\n                  <Grid item xs={3} classes={{ root: classes.gridItem }}>\n                    <span className={classes.valuesKey}>Monthly</span>\n                  </Grid>\n                  <Grid item xs={4} classes={{ root: classes.gridItem }}>\n                    <EditableItemizationText\n                      value={monthly}\n                      name={itemName}\n                      type=\"value\"\n                      nestedKey=\"monthly\"\n                      handleBlur={handleValuesBlur}\n                      startAdornment=\"$\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} />\n                  <Grid item xs={3} classes={{ root: classes.gridItem }}>\n                    <span className={classes.valuesKey}>Annual</span>\n                  </Grid>\n                  <Grid item xs={4} classes={{ root: classes.gridItem }}>\n                    <EditableItemizationText\n                      value={annual}\n                      name={itemName}\n                      type=\"value\"\n                      nestedKey=\"annual\"\n                      handleBlur={handleValuesBlur}\n                      startAdornment=\"$\"\n                    />\n                  </Grid>\n                </Grid>\n              </ListItem>\n              {!isDeleted && <Divider className={classes.divider} />}\n            </Fragment>\n          );\n        })}\n      </List>\n    </ItemizationLayout>\n  );\n}\n\nfunction syncFields({ nestedKey, value }) {\n  const syncKey =\n    nestedKey === entryMethods.ANNUAL\n      ? entryMethods.MONTHLY\n      : entryMethods.ANNUAL;\n  const syncValue =\n    nestedKey === entryMethods.ANNUAL\n      ? noDecimal(parseToNumber(value) / 12)\n      : noDecimal(parseToNumber(value) * 12);\n  return {\n    [nestedKey]: value,\n    [syncKey]: syncValue,\n  };\n}\n\nfunction getTotalAnnualAmount(itemizationValues) {\n  return _sum(\n    _flatMap(itemizationValues, (item) =>\n      parseToNumber(item[entryMethods.ANNUAL] || 0)\n    )\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { styles } from \"./sharedStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  ...styles(theme),\n}));\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  Fragment,\n} from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport _snakeCase from \"lodash/snakeCase\";\nimport _flatMap from \"lodash/flatMap\";\nimport _sum from \"lodash/sum\";\nimport _max from \"lodash/max\";\nimport { Divider, List, ListItem, Grid } from \"@material-ui/core\";\nimport { eCalcForms, renameObjKey } from \"../../../lib\";\nimport { ItemizationLayout } from \"./Itemization\";\nimport { EditableItemizationText } from \"../components\";\nimport {\n  updateItemization,\n  eCalcOnMultiChange,\n  setActiveCalculator,\n  addUserItemizationEntryMethod,\n  deleteUserItemizationEntryMethod,\n} from \"../../../actions/eCalcForms\";\nimport {\n  entryMethods,\n  entryMethodNames,\n  noDecimal,\n  parseToNumber,\n  numberToPercent,\n  formatPercent,\n} from \"../helpers\";\nimport { useStyles } from \"./vacancy.styles\";\n\nexport function VacancyItemized({\n  open,\n  handleClose,\n  storeSliceName,\n  persist,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isInitialState = useRef(true);\n  const [initialValues, setInitialValues] = useState();\n  const [itemsToHide, setItemsToHide] = useState([]);\n  const [totals, setTotals] = useState();\n  // we need to track how many fields the user added\n  const [totalAddedFields, setTotalAddedFields] = useState(0);\n\n  const itemizationValues = useSelector(\n    (state) => state[storeSliceName].itemizations?.[eCalcForms.VACANCY],\n    shallowEqual\n  );\n\n  const userItemizationEntryMethods = useSelector(\n    (state) =>\n      state[storeSliceName].userItemizationEntryMethods?.[eCalcForms.VACANCY],\n    shallowEqual\n  );\n  const potential_annual_gross_income = useSelector(\n    (state) =>\n      state[storeSliceName][eCalcForms.CAP_RATE].potential_annual_gross_income\n  );\n\n  const newValueRef = useCallback((node) => {\n    if (node !== null) {\n      node.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isInitialState.current) {\n      // we need to store the initial state so we can reset\n      setInitialValues(itemizationValues);\n      isInitialState.current = false;\n    }\n    const addedFieldsArr = Object.keys(itemizationValues).reduce(\n      (acc, cur) => {\n        if (cur.includes(\"new_vacancy\")) {\n          // get the number at the end of the key\n          const split = cur.split(\"_\");\n          const keyNumber = split[split.length - 1];\n          if (!isNaN(keyNumber)) {\n            acc.push(+keyNumber);\n          }\n        }\n        return acc;\n      },\n      [0]\n    );\n    setTotalAddedFields(_max(addedFieldsArr));\n  }, [itemizationValues]);\n\n  useEffect(() => {\n    const {\n      [entryMethods.DOLLAR_AMOUNT]: dollar,\n      [entryMethods.PERCENT_AMOUNT]: percent,\n    } = getTotalAmounts(itemizationValues, potential_annual_gross_income);\n    setTotals([\n      { label: \"Total Vacancy $:\", value: dollar, display: \"dollar\" },\n      { label: \"Total Vacancy %:\", value: percent, display: \"percent\" },\n    ]);\n  }, [dispatch, itemizationValues, potential_annual_gross_income]);\n\n  const handleKeysBlur = useCallback(\n    (e) => {\n      const { name, value } = e.target;\n      const formatted = value?.indexOf(\"/\") === -1 ? _snakeCase(value) : value;\n      const newValues = renameObjKey({\n        object: itemizationValues,\n        oldKey: name,\n        newKey: formatted,\n      });\n      dispatch(\n        updateItemization({\n          name: eCalcForms.VACANCY,\n          value: newValues,\n          persist,\n        })\n      );\n      // We need to update the key in the `userItemizationEntryMethods` object\n      dispatch(\n        addUserItemizationEntryMethod({\n          itemizationName: entryMethodNames.VACANCY,\n          item: formatted,\n          value: userItemizationEntryMethods[name],\n          persist,\n        })\n      );\n      dispatch(\n        deleteUserItemizationEntryMethod({\n          itemizationName: entryMethodNames.VACANCY,\n          item: name,\n          persist,\n        })\n      );\n    },\n    [dispatch, persist, itemizationValues, userItemizationEntryMethods]\n  );\n\n  const handleValuesBlur = useCallback(\n    (e, nestedKey) => {\n      const { name, value } = e.target;\n      if (\n        parseToNumber(value) ===\n        parseToNumber(itemizationValues[name]?.[nestedKey])\n      ) {\n        return;\n      }\n      const syncedFields = syncFields({\n        nestedKey,\n        value,\n        potential_annual_gross_income,\n      });\n      const newValues = {\n        ...itemizationValues,\n        [name]: { ...itemizationValues[name], ...syncedFields },\n      };\n      const {\n        [entryMethods.DOLLAR_AMOUNT]: dollarAmt,\n        [entryMethods.PERCENT_AMOUNT]: percentAmt,\n      } = getTotalAmounts(newValues, potential_annual_gross_income);\n      dispatch(\n        eCalcOnMultiChange({\n          calculator: eCalcForms.CAP_RATE,\n          valuesObj: {\n            vacancy_as_dollar: dollarAmt,\n            vacancy_as_percent: percentAmt,\n          },\n          persist,\n        })\n      );\n      dispatch(\n        updateItemization({\n          name: eCalcForms.VACANCY,\n          value: newValues,\n          persist,\n        })\n      );\n      dispatch(\n        addUserItemizationEntryMethod({\n          itemizationName: entryMethodNames.VACANCY,\n          item: name,\n          value:\n            nestedKey === entryMethods.DOLLAR_AMOUNT\n              ? entryMethods.DOLLAR_AMOUNT\n              : entryMethods.PERCENT_AMOUNT,\n          persist,\n        })\n      );\n      // need to know which calculator the user is entering for mobile slider\n      dispatch(setActiveCalculator({ name: \"capRate\", persist }));\n    },\n    [dispatch, persist, itemizationValues, potential_annual_gross_income]\n  );\n\n  const handleAdd = useCallback(() => {\n    dispatch(\n      updateItemization({\n        name: eCalcForms.VACANCY,\n        value: {\n          ...itemizationValues,\n          [`new_vacancy_${totalAddedFields + 1}`]: { dollar: 0, percent: 0 },\n        },\n        persist,\n      })\n    );\n  }, [dispatch, persist, itemizationValues, totalAddedFields]);\n\n  const handleReset = useCallback(() => {\n    dispatch(\n      updateItemization({\n        name: eCalcForms.VACANCY,\n        value: initialValues,\n        persist,\n      })\n    );\n  }, [dispatch, initialValues, persist]);\n\n  const handleUndoableDelete = useCallback((key) => {\n    setItemsToHide((list) => [...list, key]);\n  }, []);\n\n  const undoDelete = useCallback((key) => {\n    setItemsToHide((list) => list.filter((l) => key !== l));\n  }, []);\n\n  const handleDelete = useCallback(\n    (key) => {\n      const { [key]: itemToDelete, ...otherItems } = itemizationValues;\n      dispatch(\n        updateItemization({\n          name: eCalcForms.VACANCY,\n          value: otherItems,\n          persist,\n        })\n      );\n      dispatch(\n        deleteUserItemizationEntryMethod({\n          itemizationName: entryMethodNames.VACANCY,\n          item: key,\n          persist,\n        })\n      );\n      undoDelete(key);\n    },\n    [dispatch, persist, itemizationValues, undoDelete]\n  );\n\n  if (!itemizationValues) return null;\n  return (\n    <ItemizationLayout\n      open={open}\n      handleClose={handleClose}\n      handleAdd={handleAdd}\n      handleReset={handleReset}\n      title=\"Vacancy Itemized\"\n      totals={totals}\n    >\n      <List>\n        {Object.keys(itemizationValues).map((itemName) => {\n          const { percent, dollar } = itemizationValues[itemName];\n          const isDeleted = itemsToHide.indexOf(itemName) > -1;\n          return (\n            <Fragment key={itemName}>\n              <ListItem\n                classes={{ root: classes.listItem }}\n                disableGutters\n                innerRef={\n                  itemName === `new_vacancy_${totalAddedFields}`\n                    ? newValueRef\n                    : undefined\n                }\n              >\n                <EditableItemizationText\n                  value={itemName}\n                  name={itemName}\n                  type=\"key\"\n                  handleBlur={handleKeysBlur}\n                  handleUndoableDelete={handleUndoableDelete}\n                  undoDelete={undoDelete}\n                  handleDelete={handleDelete}\n                  isDeleted={isDeleted}\n                />\n                <Grid\n                  container\n                  className={clsx({ [classes.hidden]: isDeleted })}\n                >\n                  <Grid item xs={4} />\n                  <Grid item xs={3} classes={{ root: classes.gridItem }}>\n                    <span className={classes.valuesKey}>Dollar</span>\n                  </Grid>\n                  <Grid item xs={4} classes={{ root: classes.gridItem }}>\n                    <EditableItemizationText\n                      value={dollar}\n                      name={itemName}\n                      type=\"value\"\n                      nestedKey=\"dollar\"\n                      handleBlur={handleValuesBlur}\n                      startAdornment=\"$\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} />\n                  <Grid item xs={3} classes={{ root: classes.gridItem }}>\n                    <span className={classes.valuesKey}>Percent</span>\n                  </Grid>\n                  <Grid item xs={4} classes={{ root: classes.gridItem }}>\n                    <EditableItemizationText\n                      value={percent}\n                      name={itemName}\n                      type=\"value\"\n                      nestedKey=\"percent\"\n                      handleBlur={handleValuesBlur}\n                      endAdornment=\"%\"\n                      display=\"percent\"\n                    />\n                  </Grid>\n                </Grid>\n              </ListItem>\n              {!isDeleted && <Divider className={classes.divider} />}\n            </Fragment>\n          );\n        })}\n      </List>\n    </ItemizationLayout>\n  );\n}\n\nexport function syncFields({\n  nestedKey,\n  value,\n  potential_annual_gross_income,\n}) {\n  const syncKey =\n    nestedKey === entryMethods.DOLLAR_AMOUNT\n      ? entryMethods.PERCENT_AMOUNT\n      : entryMethods.DOLLAR_AMOUNT;\n  if (!potential_annual_gross_income) {\n    return {\n      [nestedKey]: value,\n      [syncKey]: 0,\n    };\n  }\n  const syncValue =\n    nestedKey === entryMethods.DOLLAR_AMOUNT\n      ? formatPercent(\n          parseToNumber(value) / parseToNumber(potential_annual_gross_income)\n        )\n      : value\n      ? noDecimal(\n          numberToPercent(value) * parseToNumber(potential_annual_gross_income)\n        )\n      : 0;\n  return {\n    [nestedKey]: value,\n    [syncKey]: syncValue,\n  };\n}\n\nexport function getTotalAmounts(\n  itemizationValues,\n  potential_annual_gross_income\n) {\n  const dollarAmounts = _sum(\n    _flatMap(itemizationValues, (item) =>\n      parseToNumber(item[entryMethods.DOLLAR_AMOUNT] || 0)\n    )\n  );\n  return {\n    [entryMethods.DOLLAR_AMOUNT]: dollarAmounts,\n    [entryMethods.PERCENT_AMOUNT]: formatPercent(\n      parseToNumber(dollarAmounts) /\n        parseToNumber(potential_annual_gross_income)\n    ),\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { styles } from \"./sharedStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  ...styles(theme),\n}));\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  Fragment,\n} from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport _snakeCase from \"lodash/snakeCase\";\nimport _flatMap from \"lodash/flatMap\";\nimport _sum from \"lodash/sum\";\nimport _max from \"lodash/max\";\nimport { Divider, List, ListItem, Grid } from \"@material-ui/core\";\nimport { eCalcForms, renameObjKey } from \"../../../lib\";\nimport { ItemizationLayout } from \"./Itemization\";\nimport { EditableItemizationText } from \"../components\";\nimport {\n  updateItemization,\n  eCalcOnMultiChange,\n  setActiveCalculator,\n} from \"../../../actions/eCalcForms\";\nimport { entryMethods, noDecimal, parseToNumber } from \"../helpers\";\nimport { useStyles } from \"./expenses.styles\";\n\nexport function ExpensesItemized({\n  open,\n  handleClose,\n  storeSliceName,\n  persist,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isInitialState = useRef(true);\n  const [initialValues, setInitialValues] = useState();\n  const [itemsToHide, setItemsToHide] = useState([]);\n  const [total, setTotal] = useState(0);\n  // we need to track how many fields the user added\n  const [totalAddedFields, setTotalAddedFields] = useState(0);\n\n  const itemizationValues = useSelector(\n    (state) => state[storeSliceName].itemizations?.[eCalcForms.ANNUAL_EXPENSES],\n    shallowEqual\n  );\n\n  const newValueRef = useCallback((node) => {\n    if (node !== null) {\n      node.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (itemizationValues) {\n      if (isInitialState.current) {\n        setInitialValues(itemizationValues);\n        // we need to store the initial state so we can reset\n        isInitialState.current = false;\n      } else {\n        const annualAmount = getTotalAnnualAmount(itemizationValues);\n        dispatch(\n          eCalcOnMultiChange({\n            calculator: eCalcForms.CAP_RATE,\n            valuesObj: {\n              annual_expenses: annualAmount,\n              monthly_expenses: annualAmount / 12,\n            },\n            persist,\n          })\n        );\n        // need to know which calculator the user is entering for mobile slider\n        dispatch(setActiveCalculator({ name: \"capRate\", persist }));\n      }\n      setTotal(getTotalAnnualAmount(itemizationValues));\n      const addedFieldsArr = Object.keys(itemizationValues).reduce(\n        (acc, cur) => {\n          if (cur.includes(\"new_expense\")) {\n            // get the number at the end of the key\n            const split = cur.split(\"_\");\n            const keyNumber = split[split.length - 1];\n            if (!isNaN(keyNumber)) {\n              acc.push(+keyNumber);\n            }\n          }\n          return acc;\n        },\n        [0]\n      );\n      setTotalAddedFields(_max(addedFieldsArr));\n    }\n  }, [dispatch, persist, itemizationValues]);\n\n  const handleKeysBlur = useCallback(\n    (e) => {\n      const { name, value } = e.target;\n      const formatted = value?.indexOf(\"/\") === -1 ? _snakeCase(value) : value;\n      const newValues = renameObjKey({\n        object: itemizationValues,\n        oldKey: name,\n        newKey: formatted,\n      });\n      dispatch(\n        updateItemization({\n          name: eCalcForms.ANNUAL_EXPENSES,\n          value: newValues,\n          persist,\n        })\n      );\n    },\n    [dispatch, persist, itemizationValues]\n  );\n\n  const handleValuesBlur = useCallback(\n    (e, nestedKey) => {\n      const { name, value } = e.target;\n      const syncedFields = syncFields({ nestedKey, value });\n      dispatch(\n        updateItemization({\n          name: eCalcForms.ANNUAL_EXPENSES,\n          value: {\n            ...itemizationValues,\n            [name]: { ...itemizationValues[name], ...syncedFields },\n          },\n          persist,\n        })\n      );\n    },\n    [dispatch, persist, itemizationValues]\n  );\n\n  const handleAdd = useCallback(() => {\n    dispatch(\n      updateItemization({\n        name: eCalcForms.ANNUAL_EXPENSES,\n        value: {\n          ...itemizationValues,\n          [`new_expense_${totalAddedFields + 1}`]: { monthly: 0, annual: 0 },\n        },\n        persist,\n      })\n    );\n  }, [dispatch, persist, itemizationValues, totalAddedFields]);\n\n  const handleReset = useCallback(() => {\n    dispatch(\n      updateItemization({\n        name: eCalcForms.ANNUAL_EXPENSES,\n        value: initialValues,\n        persist,\n      })\n    );\n  }, [dispatch, initialValues, persist]);\n\n  const handleUndoableDelete = useCallback((key) => {\n    setItemsToHide((list) => [...list, key]);\n  }, []);\n\n  const undoDelete = useCallback((key) => {\n    setItemsToHide((list) => list.filter((l) => key !== l));\n  }, []);\n\n  const handleDelete = useCallback(\n    (key) => {\n      const { [key]: itemToDelete, ...otherItems } = itemizationValues;\n      dispatch(\n        updateItemization({\n          name: eCalcForms.ANNUAL_EXPENSES,\n          value: otherItems,\n          persist,\n        })\n      );\n      undoDelete(key);\n    },\n    [dispatch, persist, itemizationValues, undoDelete]\n  );\n\n  if (!itemizationValues) return null;\n  return (\n    <ItemizationLayout\n      open={open}\n      handleClose={handleClose}\n      handleAdd={handleAdd}\n      handleReset={handleReset}\n      title=\"Annual Expenses Itemized\"\n      totals={{ label: \"Total Expenses:\", value: total }}\n    >\n      <List>\n        {Object.keys(itemizationValues).map((itemName) => {\n          const { monthly, annual } = itemizationValues[itemName];\n          const isDeleted = itemsToHide.indexOf(itemName) > -1;\n          return (\n            <Fragment key={itemName}>\n              <ListItem\n                classes={{ root: classes.listItem }}\n                disableGutters\n                innerRef={\n                  itemName === `new_expense_${totalAddedFields}`\n                    ? newValueRef\n                    : undefined\n                }\n              >\n                <EditableItemizationText\n                  value={itemName}\n                  name={itemName}\n                  type=\"key\"\n                  handleBlur={handleKeysBlur}\n                  handleUndoableDelete={handleUndoableDelete}\n                  undoDelete={undoDelete}\n                  handleDelete={handleDelete}\n                  isDeleted={isDeleted}\n                />\n                <Grid\n                  container\n                  className={clsx({ [classes.hidden]: isDeleted })}\n                >\n                  <Grid item xs={4} />\n                  <Grid item xs={3} classes={{ root: classes.gridItem }}>\n                    <span className={classes.valuesKey}>Monthly</span>\n                  </Grid>\n                  <Grid item xs={4} classes={{ root: classes.gridItem }}>\n                    <EditableItemizationText\n                      value={monthly}\n                      name={itemName}\n                      type=\"value\"\n                      nestedKey=\"monthly\"\n                      handleBlur={handleValuesBlur}\n                      startAdornment=\"$\"\n                    />\n                  </Grid>\n                  <Grid item xs={4} />\n                  <Grid item xs={3} classes={{ root: classes.gridItem }}>\n                    <span className={classes.valuesKey}>Annual</span>\n                  </Grid>\n                  <Grid item xs={4} classes={{ root: classes.gridItem }}>\n                    <EditableItemizationText\n                      value={annual}\n                      name={itemName}\n                      type=\"value\"\n                      nestedKey=\"annual\"\n                      handleBlur={handleValuesBlur}\n                      startAdornment=\"$\"\n                    />\n                  </Grid>\n                </Grid>\n              </ListItem>\n              {!isDeleted && <Divider className={classes.divider} />}\n            </Fragment>\n          );\n        })}\n      </List>\n    </ItemizationLayout>\n  );\n}\n\nfunction syncFields({ nestedKey, value }) {\n  const syncKey =\n    nestedKey === entryMethods.ANNUAL\n      ? entryMethods.MONTHLY\n      : entryMethods.ANNUAL;\n  const syncValue =\n    nestedKey === entryMethods.ANNUAL\n      ? noDecimal(parseToNumber(value) / 12)\n      : noDecimal(parseToNumber(value) * 12);\n  return {\n    [nestedKey]: value,\n    [syncKey]: syncValue,\n  };\n}\n\nfunction getTotalAnnualAmount(itemizationValues) {\n  return _sum(\n    _flatMap(itemizationValues, (item) =>\n      parseToNumber(item[entryMethods.ANNUAL] || 0)\n    )\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { styles } from \"./sharedStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  ...styles(theme),\n}));\n","import React, {\n  useState,\n  useEffect,\n  useCallback,\n  useRef,\n  Fragment,\n} from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport _snakeCase from \"lodash/snakeCase\";\nimport _flatMap from \"lodash/flatMap\";\nimport _sum from \"lodash/sum\";\nimport _max from \"lodash/max\";\nimport { Divider, List, ListItem, Grid } from \"@material-ui/core\";\nimport { eCalcForms, renameObjKey } from \"../../../lib\";\nimport { ItemizationLayout } from \"./Itemization\";\nimport { EditableItemizationText } from \"../components\";\nimport {\n  updateItemization,\n  eCalcOnMultiChange,\n  setActiveCalculator,\n  addUserItemizationEntryMethod,\n  deleteUserItemizationEntryMethod,\n  updateItemizationPercentOf,\n  deleteClosingCostPercentOf,\n} from \"../../../actions/eCalcForms\";\nimport {\n  entryMethods,\n  entryMethodNames,\n  noDecimal,\n  parseToNumber,\n  numberToPercent,\n  formatPercent,\n} from \"../helpers\";\nimport { useStyles } from \"./closingCosts.styles\";\nconst PURCHASE_PRICE = \"purchase_price\";\nconst LOAN_AMOUNT = \"loan_amount_dollar\";\n\nexport function ClosingCostItemized({\n  open,\n  handleClose,\n  storeSliceName,\n  persist,\n}) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isInitialState = useRef(true);\n\n  const itemizationValues = useSelector(\n    (state) => state[storeSliceName].itemizations?.[eCalcForms.CLOSING_COSTS],\n    shallowEqual\n  );\n\n  const userItemizationEntryMethods = useSelector(\n    (state) =>\n      state[storeSliceName].userItemizationEntryMethods?.[\n        entryMethodNames.CLOSING_COST_ITEMIZED\n      ],\n    shallowEqual\n  );\n  const percentOf = useSelector(\n    (state) =>\n      state[storeSliceName].itemizationsPercentOf?.[\n        entryMethodNames.CLOSING_COST_ITEMIZED\n      ],\n    shallowEqual\n  );\n  const purchase_price = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].purchase_price\n  );\n  const loan_amount_dollar = useSelector(\n    (state) =>\n      state[storeSliceName][eCalcForms.EQUITY_NEEDED].loan_amount_dollar\n  );\n\n  const percentOfAmountObj = {\n    purchase_price,\n    loan_amount_dollar,\n  };\n\n  const [initialValues, setInitialValues] = useState();\n  const [itemsToHide, setItemsToHide] = useState([]);\n  const [totals, setTotals] = useState();\n  // we need to track how many fields the user added\n  const [totalAddedFields, setTotalAddedFields] = useState(0);\n\n  const newValueRef = useCallback((node) => {\n    if (node !== null) {\n      node.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const addedFieldsArr = Object.keys(itemizationValues).reduce(\n      (acc, cur) => {\n        if (cur.includes(\"new_cost\")) {\n          // get the number at the end of the key\n          const split = cur.split(\"_\");\n          const keyNumber = split[split.length - 1];\n          if (!isNaN(keyNumber)) {\n            acc.push(+keyNumber);\n          }\n        }\n        return acc;\n      },\n      [0]\n    );\n    setTotalAddedFields(_max(addedFieldsArr));\n  }, [itemizationValues]);\n\n  useEffect(() => {\n    if (isInitialState.current) {\n      // we need to store the initial state so we can reset\n      setInitialValues(itemizationValues);\n      isInitialState.current = false;\n    }\n    const showPercentValue = !!purchase_price;\n    const {\n      [entryMethods.DOLLAR_AMOUNT]: dollar,\n      [entryMethods.PERCENT_AMOUNT]: percent,\n    } = getTotalAmounts({\n      itemizationValues,\n      purchasePrice: purchase_price,\n      canShowPercent: showPercentValue,\n    });\n    if (showPercentValue) {\n      setTotals([\n        { label: \"Total Closing Costs $:\", value: dollar, display: \"dollar\" },\n        { label: \"Total Closing Costs %:\", value: percent, display: \"percent\" },\n      ]);\n    } else {\n      setTotals({ label: \"Total Closing Costs $:\", value: dollar });\n    }\n  }, [itemizationValues, loan_amount_dollar, purchase_price]);\n\n  const handleKeysBlur = useCallback(\n    (e) => {\n      const { name, value } = e.target;\n      const formatted = value?.indexOf(\"/\") === -1 ? _snakeCase(value) : value;\n      const newValues = renameObjKey({\n        object: itemizationValues,\n        oldKey: name,\n        newKey: formatted,\n      });\n      dispatch(\n        updateItemization({\n          name: eCalcForms.CLOSING_COSTS,\n          value: newValues,\n          persist,\n        })\n      );\n      // We need to update the key in the `percentOf` object\n      dispatch(\n        updateItemizationPercentOf({\n          itemizationName: entryMethodNames.CLOSING_COST_ITEMIZED,\n          item: formatted,\n          value: percentOf[name],\n          persist,\n        })\n      );\n      // We need to update the key in the `userItemizationEntryMethods` object\n      dispatch(\n        addUserItemizationEntryMethod({\n          itemizationName: entryMethodNames.CLOSING_COST_ITEMIZED,\n          item: formatted,\n          value: userItemizationEntryMethods[name],\n          persist,\n        })\n      );\n      // delete old keys\n      dispatch(\n        deleteUserItemizationEntryMethod({\n          itemizationName: entryMethodNames.CLOSING_COST_ITEMIZED,\n          item: name,\n          persist,\n        })\n      );\n      dispatch(\n        deleteClosingCostPercentOf({\n          itemizationName: entryMethodNames.CLOSING_COST_ITEMIZED,\n          item: name,\n          persist,\n        })\n      );\n    },\n    [\n      dispatch,\n      persist,\n      itemizationValues,\n      percentOf,\n      userItemizationEntryMethods,\n    ]\n  );\n\n  const handleValuesBlur = useCallback(\n    (e, nestedKey) => {\n      const { name, value } = e.target;\n      if (\n        parseToNumber(value) ===\n        parseToNumber(itemizationValues[name]?.[nestedKey])\n      ) {\n        return;\n      }\n      const canBeSynced = itemizationValues[name].hasOwnProperty(\"percent\");\n      const percentOfAmount = percentOfAmountObj[percentOf[name]];\n      const syncedFields = syncFields({\n        nestedKey,\n        value,\n        canBeSynced,\n        percentOfAmount,\n      });\n      const newValues = {\n        ...itemizationValues,\n        [name]: { ...itemizationValues[name], ...syncedFields },\n      };\n      const {\n        [entryMethods.DOLLAR_AMOUNT]: dollarAmt,\n        [entryMethods.PERCENT_AMOUNT]: percentAmt,\n      } = getTotalAmounts({\n        itemizationValues: newValues,\n        purchasePrice: purchase_price,\n        canShowPercent: !!purchase_price,\n      });\n      dispatch(\n        eCalcOnMultiChange({\n          calculator: eCalcForms.EQUITY_NEEDED,\n          valuesObj: {\n            closing_costs_dollar: dollarAmt,\n            closing_costs_percent: percentAmt,\n          },\n          persist,\n        })\n      );\n      dispatch(\n        updateItemization({\n          name: eCalcForms.CLOSING_COSTS,\n          value: newValues,\n          persist,\n        })\n      );\n      if (canBeSynced) {\n        dispatch(\n          addUserItemizationEntryMethod({\n            itemizationName: entryMethodNames.CLOSING_COST_ITEMIZED,\n            item: name,\n            value:\n              nestedKey === entryMethods.DOLLAR_AMOUNT\n                ? entryMethods.DOLLAR_AMOUNT\n                : entryMethods.PERCENT_AMOUNT,\n            persist,\n          })\n        );\n        dispatch(\n          updateItemizationPercentOf({\n            itemizationName: entryMethodNames.CLOSING_COST_ITEMIZED,\n            item: name,\n            value: percentOf[name],\n            persist,\n          })\n        );\n      }\n      // need to know which calculator the user is entering for mobile slider\n      dispatch(setActiveCalculator({ name: \"capRate\", persist }));\n    },\n    [\n      itemizationValues,\n      percentOfAmountObj,\n      percentOf,\n      purchase_price,\n      dispatch,\n      persist,\n    ]\n  );\n\n  const handleAdd = useCallback(() => {\n    dispatch(\n      updateItemization({\n        name: eCalcForms.CLOSING_COSTS,\n        value: {\n          ...itemizationValues,\n          [`new_cost_${totalAddedFields + 1}`]: { dollar: 0 },\n        },\n        persist,\n      })\n    );\n  }, [dispatch, persist, itemizationValues, totalAddedFields]);\n\n  const handleReset = useCallback(() => {\n    dispatch(\n      updateItemization({\n        name: eCalcForms.CLOSING_COSTS,\n        value: initialValues,\n        persist,\n      })\n    );\n  }, [dispatch, initialValues, persist]);\n\n  const handleUndoableDelete = useCallback((key) => {\n    setItemsToHide((list) => [...list, key]);\n  }, []);\n\n  const undoDelete = useCallback((key) => {\n    setItemsToHide((list) => list.filter((l) => key !== l));\n  }, []);\n\n  const handleDelete = useCallback(\n    (key) => {\n      const { [key]: itemToDelete, ...otherItems } = itemizationValues;\n      dispatch(\n        updateItemization({\n          name: eCalcForms.CLOSING_COSTS,\n          value: otherItems,\n          persist,\n        })\n      );\n      dispatch(\n        deleteUserItemizationEntryMethod({\n          itemizationName: entryMethodNames.CLOSING_COST_ITEMIZED,\n          item: key,\n          persist,\n        })\n      );\n      undoDelete(key);\n    },\n    [dispatch, persist, itemizationValues, undoDelete]\n  );\n\n  const togglePercentOf = useCallback(\n    ({ itemName, curPercentOf, dollarAmount }) => {\n      const percentOfField =\n        curPercentOf === LOAN_AMOUNT ? PURCHASE_PRICE : LOAN_AMOUNT;\n      const percentOfAmount =\n        curPercentOf === LOAN_AMOUNT ? purchase_price : loan_amount_dollar;\n      const entryMethod = userItemizationEntryMethods[itemName];\n      if (entryMethod) {\n        const syncedFields = syncFields({\n          nestedKey: entryMethod,\n          value: itemizationValues[itemName][entryMethod],\n          canBeSynced: true,\n          percentOfAmount,\n        });\n        const newValues = {\n          ...itemizationValues,\n          [itemName]: { ...itemizationValues[itemName], ...syncedFields },\n        };\n        const {\n          [entryMethods.DOLLAR_AMOUNT]: dollarAmt,\n          [entryMethods.PERCENT_AMOUNT]: percentAmt,\n        } = getTotalAmounts({\n          itemizationValues: newValues,\n          purchasePrice: purchase_price,\n          canShowPercent: !!purchase_price,\n        });\n        dispatch(\n          eCalcOnMultiChange({\n            calculator: eCalcForms.EQUITY_NEEDED,\n            valuesObj: {\n              closing_costs_dollar: dollarAmt,\n              closing_costs_percent: percentAmt,\n            },\n            persist,\n          })\n        );\n        dispatch(\n          updateItemization({\n            name: eCalcForms.CLOSING_COSTS,\n            value: newValues,\n            persist,\n          })\n        );\n      }\n      dispatch(\n        updateItemizationPercentOf({\n          itemizationName: entryMethodNames.CLOSING_COST_ITEMIZED,\n          item: itemName,\n          value: percentOfField,\n          persist,\n        })\n      );\n    },\n    [\n      dispatch,\n      persist,\n      itemizationValues,\n      loan_amount_dollar,\n      purchase_price,\n      userItemizationEntryMethods,\n    ]\n  );\n\n  if (!itemizationValues) return null;\n  return (\n    <ItemizationLayout\n      open={open}\n      handleClose={handleClose}\n      handleAdd={handleAdd}\n      handleReset={handleReset}\n      title=\"Closing Costs Itemized\"\n      totals={totals}\n    >\n      <List>\n        {Object.keys(itemizationValues).map((itemName) => {\n          const { dollar } = itemizationValues[itemName];\n          const isDeleted = itemsToHide.indexOf(itemName) > -1;\n          return (\n            <Fragment key={itemName}>\n              <ListItem\n                classes={{ root: classes.listItem }}\n                disableGutters\n                innerRef={\n                  itemName === `new_cost_${totalAddedFields}`\n                    ? newValueRef\n                    : undefined\n                }\n              >\n                <EditableItemizationText\n                  value={itemName}\n                  name={itemName}\n                  type=\"key\"\n                  handleBlur={handleKeysBlur}\n                  handleUndoableDelete={handleUndoableDelete}\n                  undoDelete={undoDelete}\n                  handleDelete={handleDelete}\n                  isDeleted={isDeleted}\n                />\n                <Grid\n                  container\n                  className={clsx({ [classes.hidden]: isDeleted })}\n                >\n                  <Grid item xs={4} />\n                  <Grid item xs={3} classes={{ root: classes.gridItem }}>\n                    <span className={classes.valuesKey}>Amount</span>\n                  </Grid>\n                  <Grid item xs={4} classes={{ root: classes.gridItem }}>\n                    <EditableItemizationText\n                      value={dollar}\n                      name={itemName}\n                      type=\"value\"\n                      nestedKey=\"dollar\"\n                      handleBlur={handleValuesBlur}\n                      startAdornment=\"$\"\n                    />\n                  </Grid>\n                  {itemizationValues[itemName].hasOwnProperty(\"percent\") && (\n                    <Fragment>\n                      <Grid item xs={2} />\n                      <Grid item xs={5} classes={{ root: classes.gridItem }}>\n                        <span\n                          className={classes.valuesKey}\n                          onClick={() =>\n                            togglePercentOf({\n                              itemName,\n                              curPercentOf: percentOf[itemName],\n                              dollarAmount: dollar,\n                            })\n                          }\n                          style={{ cursor: \"pointer\" }}\n                        >\n                          {percentOf[itemName] === LOAN_AMOUNT\n                            ? \"% of Loan Amount\"\n                            : \"% of Purchase Price\"}\n                        </span>\n                      </Grid>\n                      <Grid item xs={4} classes={{ root: classes.gridItem }}>\n                        <EditableItemizationText\n                          value={itemizationValues[itemName].percent}\n                          name={itemName}\n                          type=\"value\"\n                          nestedKey=\"percent\"\n                          handleBlur={handleValuesBlur}\n                          endAdornment=\"%\"\n                          display=\"percent\"\n                        />\n                      </Grid>\n                    </Fragment>\n                  )}\n                </Grid>\n              </ListItem>\n              {!isDeleted && <Divider className={classes.divider} />}\n            </Fragment>\n          );\n        })}\n      </List>\n    </ItemizationLayout>\n  );\n}\n\nexport function syncFields({ canBeSynced, nestedKey, value, percentOfAmount }) {\n  const syncKey =\n    nestedKey === entryMethods.DOLLAR_AMOUNT\n      ? entryMethods.PERCENT_AMOUNT\n      : entryMethods.DOLLAR_AMOUNT;\n  // check if it could have a percent value\n  if (!canBeSynced) {\n    return {\n      [entryMethods.DOLLAR_AMOUNT]: value,\n    };\n  }\n  if (!percentOfAmount) {\n    return {\n      [nestedKey]: value,\n      [syncKey]: 0,\n    };\n  }\n  const syncValue =\n    nestedKey === entryMethods.DOLLAR_AMOUNT\n      ? formatPercent(parseToNumber(value) / parseToNumber(percentOfAmount))\n      : value\n      ? noDecimal(numberToPercent(value) * parseToNumber(percentOfAmount))\n      : 0;\n  return {\n    [nestedKey]: value,\n    [syncKey]: syncValue,\n  };\n}\n\nexport function getTotalAmounts({\n  itemizationValues,\n  purchasePrice,\n  canShowPercent,\n}) {\n  const dollarAmounts = _sum(\n    _flatMap(itemizationValues, (item) =>\n      parseToNumber(item[entryMethods.DOLLAR_AMOUNT] || 0)\n    )\n  );\n  const rv = {\n    [entryMethods.DOLLAR_AMOUNT]: dollarAmounts,\n  };\n  if (canShowPercent) {\n    rv[entryMethods.PERCENT_AMOUNT] = formatPercent(\n      parseToNumber(dollarAmounts) / parseToNumber(purchasePrice)\n    );\n  }\n  return rv;\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { calculatorInputs } from \"../sharedStyles\";\n\nexport const useStyles = makeStyles(theme => ({\n  ...calculatorInputs(theme)\n}));\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport _flatMap from \"lodash/flatMap\";\nimport _sum from \"lodash/sum\";\nimport _debounce from \"lodash/debounce\";\nimport {\n  // Divider,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { eCalcForms } from \"../../../lib\";\nimport {\n  setIsDirty,\n  eCalcOnChange,\n  eCalcOnMultiChange,\n  setActiveCalculator,\n  addUserEntryMethod,\n  addResults,\n  removeResults,\n  updateItemization,\n} from \"../../../actions/eCalcForms\";\nimport {\n  formatDollar,\n  formatPercent,\n  entryMethodNames,\n  entryMethods,\n  numberToPercent,\n  parseToNumber,\n  noDecimal,\n} from \"../helpers\";\nimport { calcCapRate } from \"./CapRate.logic\";\nimport {\n  PotentialIncomeItemized,\n  VacancyItemized,\n  ExpensesItemized,\n} from \"../itemizations\";\nimport {\n  syncFields as syncVacancyItemizationFields,\n  getTotalAmounts as getVacancyItemizationAmounts,\n} from \"../itemizations/VacancyItemized\";\nimport { ListIcon } from \"../../../themes\";\nimport { DisabledInputsMsg } from \"../components\";\nimport { useStyles } from \"./CapRate.styles\";\n\nexport function CapRate({ storeSliceName, persist }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const dirty = useSelector((state) => state[storeSliceName].dirty);\n  const capRateValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE],\n    shallowEqual\n  );\n  const userEntryMethods = useSelector(\n    (state) => state[storeSliceName].userEntryMethods,\n    shallowEqual\n  );\n  const incomeItemizationValues = useSelector(\n    (state) =>\n      state[storeSliceName].itemizations?.[\n        eCalcForms.POTENTIAL_GROSS_ITEMIZATION\n      ],\n    shallowEqual\n  );\n  const vacancyItemizationValues = useSelector(\n    (state) => state[storeSliceName].itemizations?.[eCalcForms.VACANCY],\n    shallowEqual\n  );\n  const vacancyUserItemizationEntryMethods = useSelector(\n    (state) =>\n      state[storeSliceName].userItemizationEntryMethods?.[eCalcForms.VACANCY],\n    shallowEqual\n  );\n  const expensesItemizationValues = useSelector(\n    (state) => state[storeSliceName].itemizations?.[eCalcForms.ANNUAL_EXPENSES],\n    shallowEqual\n  );\n  const {\n    purchase_price,\n    potential_annual_gross_income,\n    potential_monthly_gross_income,\n    vacancy_as_dollar,\n    vacancy_as_percent,\n    annual_expenses,\n    monthly_expenses,\n    first_year_noi,\n  } = capRateValues || {};\n\n  const { vacancy } = userEntryMethods;\n\n  function handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    const intValue = parseFloat(value.replace(/[^0-9.]/g, \"\")); //Strips of non-numeric characters besides decimal\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CAP_RATE,\n        name,\n        value: formatInput(name, value),\n        persist,\n      })\n    );\n    // need to know which calculator the user is entering for mobile slider\n    dispatch(setActiveCalculator({ name: \"capRate\", persist }));\n    typeof syncFields[name] === \"function\" &&\n      syncFields[name]({\n        value: intValue,\n        dispatch,\n        state: capRateValues,\n        persist,\n      });\n    if (!dirty) {\n      dispatch(setIsDirty(persist));\n    }\n  }\n  const [effectiveAnnual, setEffectiveAnnual] = useState(0);\n  const [effectiveMonthly, setEffectiveMonthly] = useState(\"\");\n  const [showIncomeItemization, setShowIncomeItemization] = useState(false);\n  const [showVacancyItemization, setShowVacancyItemization] = useState(false);\n  const [showExpensesItemization, setShowExpensesItemization] = useState(false);\n  const [isIncomeItemized, setIsIncomeItemized] = useState(false);\n  const [isVacancyItemized, setIsVacancyItemized] = useState(false);\n  const [isExpensesItemized, setIsExpensesItemized] = useState(false);\n  const [showIncomeDisabledMsg, setShowIncomeDisabledMsg] = useState(false);\n  const [showVacancyDisabledMsg, setShowVacancyDisabledMsg] = useState(false);\n  const [showExpensesDisabledMsg, setShowExpensesDisabledMsg] = useState(false);\n\n  useEffect(() => {\n    setIsIncomeItemized(checkIfItemizedAnnualMonthly(incomeItemizationValues));\n    setShowIncomeDisabledMsg(false);\n  }, [incomeItemizationValues]);\n\n  useEffect(() => {\n    setIsExpensesItemized(\n      checkIfItemizedAnnualMonthly(expensesItemizationValues)\n    );\n    setShowExpensesDisabledMsg(false);\n  }, [expensesItemizationValues]);\n\n  useEffect(() => {\n    setIsVacancyItemized(\n      checkIfItemizedDollarPercent(vacancyItemizationValues)\n    );\n    setShowVacancyDisabledMsg(false);\n  }, [vacancyItemizationValues]);\n\n  useEffect(() => {\n    if (!vacancy_as_dollar || !potential_annual_gross_income) {\n      setEffectiveAnnual(\"\");\n      setEffectiveMonthly(\"\");\n      return;\n    }\n    const effectiveIncome =\n      parseToNumber(potential_annual_gross_income) -\n      parseToNumber(vacancy_as_dollar);\n    setEffectiveAnnual(formatDollar(effectiveIncome));\n    setEffectiveMonthly(formatDollar(effectiveIncome / 12));\n  }, [potential_annual_gross_income, vacancy_as_dollar]);\n\n  useEffect(() => {\n    let results = \"\";\n    if (effectiveAnnual === 0) return;\n    if (effectiveAnnual && annual_expenses) {\n      results = formatDollar(\n        parseToNumber(effectiveAnnual) - parseToNumber(annual_expenses)\n      );\n    }\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CAP_RATE,\n        name: \"first_year_noi\",\n        value: results,\n        persist,\n      })\n    );\n  }, [effectiveAnnual, annual_expenses, dispatch, persist]);\n\n  useEffect(() => {\n    if (potential_annual_gross_income && isVacancyItemized) {\n      syncVacancyItemizationWithIncome({\n        itemizationValues: vacancyItemizationValues,\n        userItemizationEntryMethods: vacancyUserItemizationEntryMethods,\n        income: potential_annual_gross_income,\n        dispatch,\n        persist,\n      });\n    } else {\n      syncVacancy({\n        vacancy,\n        capRateValues,\n        isVacancyItemized,\n        dispatch,\n        persist,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [potential_annual_gross_income, isVacancyItemized, persist]);\n\n  useEffect(() => {\n    if (first_year_noi && purchase_price) {\n      const results = calcCapRate({ first_year_noi, purchase_price });\n      dispatch(\n        addResults({\n          name: \"cap_rate\",\n          value: results,\n          persist,\n        })\n      );\n    } else {\n      dispatch(removeResults({ name: \"cap_rate\", persist }));\n    }\n  }, [first_year_noi, purchase_price, dispatch, persist]);\n\n  const openIncomeItemization = useCallback((e) => {\n    e.stopPropagation();\n    setShowIncomeItemization(true);\n  }, []);\n\n  const closeIncomeItemization = useCallback(() => {\n    setShowIncomeItemization(false);\n  }, []);\n\n  const openVacancyItemization = useCallback((e) => {\n    e.stopPropagation();\n    setShowVacancyItemization(true);\n  }, []);\n\n  const closeVacancyItemization = useCallback(() => {\n    setShowVacancyItemization(false);\n  }, []);\n\n  const openExpensesItemization = useCallback((e) => {\n    e.stopPropagation();\n    setShowExpensesItemization(true);\n  }, []);\n\n  const closeExpensesItemization = useCallback(() => {\n    setShowExpensesItemization(false);\n  }, []);\n\n  return (\n    <div className={classes.calcContainer}>\n      <TextField\n        inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label=\"Purchase Price:\"\n        variant=\"outlined\"\n        value={purchase_price}\n        onChange={handleInputChange}\n        name=\"purchase_price\"\n        fullWidth\n        InputProps={{\n          classes: { input: classes.input },\n          startAdornment: (\n            <InputAdornment\n              position=\"start\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              $\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(classes.inputLabel, classes.fullWidthLabel),\n            shrink: \"fullInputShrink\",\n          },\n        }}\n      />\n      {showIncomeDisabledMsg && <DisabledInputsMsg field={\"Income\"} />}\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Potential Gross Income:\"\n          variant=\"outlined\"\n          value={\n            isIncomeItemized\n              ? formatDollar(parseToNumber(potential_annual_gross_income))\n              : potential_annual_gross_income\n          }\n          onChange={handleInputChange}\n          name=\"potential_annual_gross_income\"\n          disabled={isIncomeItemized}\n          onClick={\n            isIncomeItemized ? () => setShowIncomeDisabledMsg(true) : undefined\n          }\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <ListIcon\n                  className={classes.listIcon}\n                  onClick={openIncomeItemization}\n                />\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n        <span className={classes.inputsDivider} />\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Monthly Income:\"\n          variant=\"outlined\"\n          value={\n            isIncomeItemized\n              ? formatDollar(parseToNumber(potential_monthly_gross_income))\n              : potential_monthly_gross_income\n          }\n          onChange={handleInputChange}\n          name=\"potential_monthly_gross_income\"\n          disabled={isIncomeItemized}\n          onClick={\n            isIncomeItemized ? () => setShowIncomeDisabledMsg(true) : undefined\n          }\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n      </div>\n      {showVacancyDisabledMsg && <DisabledInputsMsg field={\"Vacancy\"} />}\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Vacancy as $:\"\n          variant=\"outlined\"\n          value={\n            isVacancyItemized\n              ? formatDollar(parseToNumber(vacancy_as_dollar))\n              : vacancy_as_dollar\n          }\n          disabled={isVacancyItemized}\n          onClick={\n            isVacancyItemized\n              ? () => setShowVacancyDisabledMsg(true)\n              : undefined\n          }\n          onChange={handleInputChange}\n          name=\"vacancy_as_dollar\"\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <ListIcon\n                  className={classes.listIcon}\n                  onClick={openVacancyItemization}\n                />\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n        <span className={classes.inputsDivider} />\n        <TextField\n          inputProps={{ inputMode: \"decimal\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Vacancy as %:\"\n          variant=\"outlined\"\n          value={vacancy_as_percent}\n          disabled={isVacancyItemized}\n          onClick={\n            isVacancyItemized\n              ? () => setShowVacancyDisabledMsg(true)\n              : undefined\n          }\n          onChange={handleInputChange}\n          name=\"vacancy_as_percent\"\n          InputProps={{\n            classes: {\n              input: clsx(classes.input, classes.inputWithPadding),\n            },\n            endAdornment: (\n              <InputAdornment\n                position=\"end\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                %\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n            shrink: true,\n          }}\n        />\n      </div>\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Effective Gross Income:\"\n          variant=\"outlined\"\n          value={effectiveAnnual}\n          onChange={() => {}}\n          name=\"effectiveAnnual\"\n          disabled\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n        <span className={classes.inputsDivider} />\n        <TextField\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Monthly Income:\"\n          variant=\"outlined\"\n          value={effectiveMonthly}\n          onChange={() => {}}\n          name=\"effectiveMonthly\"\n          disabled\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n      </div>\n      {showExpensesDisabledMsg && <DisabledInputsMsg field={\"Expense\"} />}\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Annual Expenses:\"\n          variant=\"outlined\"\n          value={\n            isExpensesItemized\n              ? formatDollar(parseToNumber(annual_expenses))\n              : annual_expenses\n          }\n          disabled={isExpensesItemized}\n          onClick={\n            isExpensesItemized\n              ? () => setShowExpensesDisabledMsg(true)\n              : undefined\n          }\n          onChange={handleInputChange}\n          name=\"annual_expenses\"\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <ListIcon\n                  className={classes.listIcon}\n                  onClick={openExpensesItemization}\n                />\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n        <span className={classes.inputsDivider} />\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Monthly Expenses:\"\n          variant=\"outlined\"\n          value={\n            isExpensesItemized\n              ? formatDollar(parseToNumber(monthly_expenses))\n              : monthly_expenses\n          }\n          disabled={isExpensesItemized}\n          onClick={\n            isExpensesItemized\n              ? () => setShowExpensesDisabledMsg(true)\n              : undefined\n          }\n          onChange={handleInputChange}\n          name=\"monthly_expenses\"\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n      </div>\n      <TextField\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label=\"First year NOI:\"\n        variant=\"outlined\"\n        value={first_year_noi}\n        onChange={() => {}}\n        name=\"first_year_noi\"\n        fullWidth\n        disabled\n        InputProps={{\n          classes: { input: classes.input },\n          startAdornment: (\n            <InputAdornment\n              position=\"start\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              $\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(classes.inputLabel, classes.fullWidthLabel),\n            shrink: \"fullInputShrink\",\n          },\n        }}\n      />\n      {showIncomeItemization && (\n        <PotentialIncomeItemized\n          open={showIncomeItemization}\n          handleClose={closeIncomeItemization}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n      )}\n      {showVacancyItemization && (\n        <VacancyItemized\n          open={showVacancyItemization}\n          handleClose={closeVacancyItemization}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n      )}\n      {showExpensesItemization && (\n        <ExpensesItemized\n          open={showExpensesItemization}\n          handleClose={closeExpensesItemization}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n      )}\n    </div>\n  );\n}\n\nconst syncFields = {\n  potential_annual_gross_income({ value, dispatch, state, persist }) {\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CAP_RATE,\n        name: \"potential_monthly_gross_income\",\n        value: noDecimal(parseToNumber(value) / 12),\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.POTENTIAL_GROSS_INCOME,\n        value: entryMethods.ANNUAL,\n        persist,\n      })\n    );\n  },\n  potential_monthly_gross_income({ value, dispatch, state, persist }) {\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CAP_RATE,\n        name: \"potential_annual_gross_income\",\n        value: noDecimal(parseToNumber(value) * 12),\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.POTENTIAL_GROSS_INCOME,\n        value: entryMethods.MONTHLY,\n        persist,\n      })\n    );\n  },\n  vacancy_as_dollar({ value, dispatch, state, persist }) {\n    const { potential_annual_gross_income } = state;\n    if (!potential_annual_gross_income) return;\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CAP_RATE,\n        name: \"vacancy_as_percent\",\n        value: formatPercent(\n          parseToNumber(value) / parseToNumber(potential_annual_gross_income)\n        ),\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.VACANCY,\n        value: entryMethods.DOLLAR_AMOUNT,\n        persist,\n      })\n    );\n  },\n  vacancy_as_percent({ value, dispatch, state, persist }) {\n    const { potential_annual_gross_income } = state;\n    if (!potential_annual_gross_income) return;\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CAP_RATE,\n        name: \"vacancy_as_dollar\",\n        value: value\n          ? noDecimal(\n              numberToPercent(value) *\n                parseToNumber(state.potential_annual_gross_income)\n            )\n          : \"\",\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.VACANCY,\n        value: entryMethods.PERCENT_AMOUNT,\n        persist,\n      })\n    );\n  },\n  annual_expenses({ value, dispatch, state, persist }) {\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CAP_RATE,\n        name: \"monthly_expenses\",\n        value: noDecimal(parseToNumber(value) / 12),\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.EXPENSES,\n        value: entryMethods.ANNUAL,\n        persist,\n      })\n    );\n  },\n  monthly_expenses({ value, dispatch, state, persist }) {\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CAP_RATE,\n        name: \"annual_expenses\",\n        value: noDecimal(parseToNumber(value) * 12),\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.POTENTIAL_GROSS_INCOME,\n        value: entryMethods.MONTHLY,\n        persist,\n      })\n    );\n  },\n};\n\nfunction formatInput(name, value) {\n  switch (name) {\n    case \"purchase_price\":\n    case \"potential_annual_gross_income\":\n    case \"potential_monthly_gross_income\":\n    case \"vacancy_as_dollar\":\n    case \"annual_expenses\":\n    case \"monthly_expenses\":\n    case \"first_year_noi\":\n      return noDecimal(parseToNumber(value));\n    default:\n      return value;\n  }\n}\n\nfunction syncVacancy({ vacancy, capRateValues, dispatch, persist }) {\n  const { vacancy_as_dollar, vacancy_as_percent } = capRateValues;\n  if (vacancy === entryMethods.DOLLAR_AMOUNT) {\n    syncFields.vacancy_as_dollar({\n      value: vacancy_as_dollar,\n      dispatch,\n      state: capRateValues,\n      persist,\n    });\n  } else {\n    syncFields.vacancy_as_percent({\n      value: vacancy_as_percent,\n      dispatch,\n      state: capRateValues,\n      persist,\n    });\n  }\n}\n\nconst syncVacancyItemizationWithIncome = _debounce(\n  ({\n    itemizationValues = {},\n    userItemizationEntryMethods = {},\n    income,\n    dispatch,\n    persist,\n  }) => {\n    const syncedValues = Object.keys(itemizationValues).reduce((acc, cur) => {\n      const entryMethod = userItemizationEntryMethods[cur];\n      const syncedFields = syncVacancyItemizationFields({\n        nestedKey: entryMethod || entryMethods.DOLLAR_AMOUNT,\n        value: itemizationValues[cur][entryMethod] || 0,\n        potential_annual_gross_income: income,\n      });\n      acc[cur] = { ...syncedFields };\n      return acc;\n    }, {});\n    const {\n      [entryMethods.DOLLAR_AMOUNT]: dollarAmt,\n      [entryMethods.PERCENT_AMOUNT]: percentAmt,\n    } = getVacancyItemizationAmounts(syncedValues, income);\n\n    dispatch(\n      updateItemization({\n        name: eCalcForms.VACANCY,\n        value: syncedValues,\n        persist,\n      })\n    );\n    dispatch(\n      eCalcOnMultiChange({\n        calculator: eCalcForms.CAP_RATE,\n        valuesObj: {\n          vacancy_as_dollar: dollarAmt,\n          vacancy_as_percent: percentAmt,\n        },\n        persist,\n      })\n    );\n  },\n  300\n);\n\nfunction checkIfItemizedAnnualMonthly(itemizationValues) {\n  const sum = _sum(\n    _flatMap(\n      itemizationValues,\n      (item) =>\n        parseToNumber(item[entryMethods.ANNUAL]) +\n        parseToNumber(item[entryMethods.MONTHLY])\n    )\n  );\n  return sum > 0;\n}\n\nfunction checkIfItemizedDollarPercent(itemizationValues) {\n  const sum = _sum(\n    _flatMap(itemizationValues, (item) =>\n      parseToNumber(item[entryMethods.DOLLAR_AMOUNT] || 0)\n    )\n  );\n  return sum > 0;\n}\n","import { parseToNumber, formatPercent } from \"../helpers\";\nexport function calcCapRate({ first_year_noi, purchase_price }) {\n  const results = formatPercent(\n    parseToNumber(first_year_noi) / parseToNumber(purchase_price)\n  );\n  return { label: \"Cap Rate\", results, displayFormat: \"percent\" };\n}\n","export function calcTotalLoanAndBlendedRate(loans) {\n  var totalLoan = 0;\n  var blendedRate = 0;\n  if (Array.isArray(loans)) {\n    const loansList = loans.map(loan => ({\n      amount: loan.amount ? parseFloat(`${loan.amount}`.replace(/,/g, \"\")) : 0,\n      rate: loan.rate ? parseFloat(`${loan.rate}`.replace(/,/g, \"\")) : 0\n    }));\n    totalLoan =\n      loansList && loansList.map(l => l.amount).reduce((a, b) => a + b);\n    blendedRate =\n      loansList.reduce(\n        (prev, current) => prev + current.amount * (current.rate / 100),\n        0\n      ) / totalLoan;\n  }\n  return {\n    totalLoan,\n    blendedRate: blendedRate ? +parseFloat(blendedRate * 100).toFixed(3) : 0\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { calculatorInputs } from \"../sharedStyles\";\n\nexport const useStyles = makeStyles(theme => ({\n  ...calculatorInputs(theme)\n}));\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport mixpanel from \"mixpanel-browser\";\nimport _flatMap from \"lodash/flatMap\";\nimport _sum from \"lodash/sum\";\nimport _debounce from \"lodash/debounce\";\nimport {\n  // Divider,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { eCalcForms } from \"../../../lib\";\nimport {\n  setIsDirty,\n  eCalcOnChange,\n  eCalcOnMultiChange,\n  setActiveCalculator,\n  addUserEntryMethod,\n  addResults,\n  removeResults,\n  clearBlendedRateItemization,\n  updateItemization,\n} from \"../../../actions/eCalcForms\";\nimport {\n  ClosingCostItemized,\n  syncFields as syncClosingCostItemizationFields,\n  getTotalAmounts as getClosingCostItemizationAmounts,\n} from \"../itemizations/ClosingCostItemized\";\nimport { ListIcon } from \"../../../themes\";\nimport {\n  BlendedRateItemization,\n  MissingInputsMsg,\n  DisabledInputsMsg,\n} from \"../components\";\nimport {\n  formatDollar,\n  formatPercent,\n  entryMethodNames,\n  entryMethods,\n  numberToPercent,\n  parseToNumber,\n  noDecimal,\n} from \"../helpers\";\nimport { calcEquityNeeded, calcDebtYield } from \"./EquityNeeded.logic\";\nimport { calcTotalLoanAndBlendedRate } from \"../components/BlendedRateItemization.logic\";\nimport { useStyles } from \"./EquityNeeded.styles\";\n\nexport function EquityNeeded({ storeSliceName, persist }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [showBlendedRateItemization, setShowBlendedRateItemization] = useState(\n    false\n  );\n  const dirty = useSelector((state) => state[storeSliceName].dirty);\n  const equityNeededValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.EQUITY_NEEDED],\n    shallowEqual\n  );\n  const purchase_price = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].purchase_price\n  );\n  const first_year_noi = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].first_year_noi\n  );\n  const userEntryMethods = useSelector(\n    (state) => state[storeSliceName].userEntryMethods,\n    shallowEqual\n  );\n  const closingCostItemizationValues = useSelector(\n    (state) => state[storeSliceName].itemizations?.[eCalcForms.CLOSING_COSTS],\n    shallowEqual\n  );\n  const closingCostItemizationPercentOf = useSelector(\n    (state) =>\n      state[storeSliceName].itemizationsPercentOf?.[\n        entryMethodNames.CLOSING_COST_ITEMIZED\n      ],\n    shallowEqual\n  );\n  const closingCostUserItemizationEntryMethods = useSelector(\n    (state) =>\n      state[storeSliceName].userItemizationEntryMethods?.[\n        eCalcForms.CLOSING_COSTS\n      ],\n    shallowEqual\n  );\n  const {\n    closingCost,\n    loanAmount,\n    loanAmountOf: reduxLoanAmountOf,\n  } = userEntryMethods;\n  const {\n    closing_costs_dollar,\n    closing_costs_percent,\n    loan_amount_dollar,\n    loan_amount_percent,\n    total_capitalization,\n    loans,\n  } = equityNeededValues || {};\n\n  function handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    const intValue = parseFloat(value.replace(/[^0-9.]/g, \"\")); //Strips of non-numeric characters besides decimal\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.EQUITY_NEEDED,\n        name,\n        value: formatInput(name, value),\n        persist,\n      })\n    );\n    // need to know which // need to know which calculator the user is entering for mobile slider the user is entering for mobile slider\n    dispatch(setActiveCalculator({ name: \"equityNeeded\", persist }));\n    typeof syncFields[name] === \"function\" &&\n      syncFields[name]({\n        value: intValue,\n        dispatch,\n        state: { ...equityNeededValues, purchase_price },\n        meta: { loanAmountOf },\n        persist,\n      });\n    if (!dirty) {\n      dispatch(setIsDirty(persist));\n    }\n  }\n\n  const [loanAmountOf, setLoanAmountOf] = useState(\n    reduxLoanAmountOf || \"purchasePrice\"\n  );\n  const [showInputsMissingMsg, setShowInputsMissingMsg] = useState(false);\n\n  const [loansList, setLoans] = useState(loans);\n  const [totalLoan, setTotalLoan] = useState(0);\n  const [totalLoanPercentage, setTotalLoanPercentage] = useState(0);\n  const [blendedRate, setBlendedRate] = useState(0);\n  const [showClosingCostItemization, setShowClosingCostItemization] = useState(\n    false\n  );\n  const [isClosingCostItemized, setIsClosingCostItemized] = useState(false);\n  const [showClosingCostDisabledMsg, setShowClosingCostDisabledMsg] = useState(\n    false\n  );\n\n  useEffect(() => {\n    if (!purchase_price || !loan_amount_dollar || !isClosingCostItemized) {\n      if (closingCost === entryMethods.DOLLAR_AMOUNT) {\n        syncFields.closing_costs_dollar({\n          value: closing_costs_dollar,\n          dispatch,\n          state: { ...equityNeededValues, purchase_price },\n          persist,\n        });\n      } else {\n        syncFields.closing_costs_percent({\n          value: closing_costs_percent,\n          dispatch,\n          state: { ...equityNeededValues, purchase_price },\n          persist,\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [purchase_price, isClosingCostItemized, persist]);\n\n  useEffect(() => {\n    if (purchase_price && loan_amount_dollar && isClosingCostItemized) {\n      syncClosingCostItemization({\n        itemizationValues: closingCostItemizationValues,\n        percentOfAmountObj: {\n          loan_amount_dollar,\n          purchase_price,\n        },\n        percentOfFields: closingCostItemizationPercentOf,\n        userItemizationEntryMethods: closingCostUserItemizationEntryMethods,\n        purchasePrice: purchase_price,\n        dispatch,\n        persist,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loan_amount_dollar, purchase_price, isClosingCostItemized, persist]);\n\n  useEffect(() => {\n    calculateTotalCapitalization({\n      state: { ...equityNeededValues, purchase_price },\n      dispatch,\n      persist,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [closing_costs_dollar, purchase_price]);\n\n  useEffect(() => {\n    calculateLoanAmount({\n      loanAmountOf,\n      loanAmountMethod: loanAmount,\n      state: { ...equityNeededValues, purchase_price },\n      dispatch,\n      persist,\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    dispatch,\n    loanAmount,\n    loanAmountOf,\n    purchase_price,\n    total_capitalization,\n    loan_amount_dollar,\n    persist,\n  ]);\n\n  useEffect(() => {\n    if (!purchase_price) {\n      setShowInputsMissingMsg(true);\n    } else {\n      setShowInputsMissingMsg(false);\n    }\n  }, [purchase_price]);\n\n  useEffect(() => {\n    if (loan_amount_dollar && total_capitalization) {\n      const results = calcEquityNeeded({\n        loan_amount_dollar,\n        total_capitalization,\n      });\n      dispatch(\n        addResults({\n          name: \"equity_needed\",\n          value: results,\n          persist,\n        })\n      );\n    } else {\n      dispatch(removeResults({ name: \"equity_needed\", persist }));\n    }\n  }, [loan_amount_dollar, total_capitalization, dispatch, persist]);\n\n  useEffect(() => {\n    if (loan_amount_dollar && first_year_noi) {\n      const results = calcDebtYield({\n        loan_amount_dollar,\n        first_year_noi,\n      });\n\n      dispatch(\n        addResults({\n          name: \"debt_yield\",\n          value: results,\n          persist,\n        })\n      );\n    } else {\n      dispatch(removeResults({ name: \"debt_yield\", persist }));\n    }\n  }, [loan_amount_dollar, first_year_noi, dispatch, persist]);\n\n  const toggleLoanAmountOf = useCallback(\n    (amountOf) => {\n      setLoanAmountOf(amountOf);\n      dispatch(\n        addUserEntryMethod({\n          name: entryMethodNames.LOAN_AMOUNT_OF,\n          value:\n            amountOf === \"purchasePrice\"\n              ? entryMethods.PURCHASE_PRICE\n              : entryMethods.TOTAL_CAPITALIZATION,\n          persist,\n        })\n      );\n    },\n    [dispatch, persist]\n  );\n\n  useEffect(() => {\n    const results = calcTotalLoanAndBlendedRate(loansList);\n    setTotalLoan(formatDollar(results.totalLoan));\n    setTotalLoanPercentage(\n      loanAmountOf === \"totalCapitalization\"\n        ? total_capitalization\n          ? formatPercent(\n              parseToNumber(results.totalLoan) /\n                parseToNumber(total_capitalization)\n            )\n          : \"\"\n        : purchase_price\n        ? formatPercent(\n            parseToNumber(results.totalLoan) / parseToNumber(purchase_price)\n          )\n        : \"\"\n    );\n    setBlendedRate(results.blendedRate);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loansList]);\n\n  useEffect(() => {\n    setLoans(loans);\n  }, [loans]);\n\n  useEffect(() => {\n    setIsClosingCostItemized(\n      checkIfItemizedDollarPercent(closingCostItemizationValues)\n    );\n    setShowClosingCostDisabledMsg(false);\n  }, [closingCostItemizationValues]);\n\n  const openBlendedRateItemization = useCallback(() => {\n    mixpanel.track(\"ecalc_popup\", { popup: \"Blended Rates screen\" });\n    setShowBlendedRateItemization(true);\n  }, []);\n\n  function blendedRateItemizationClose() {\n    setLoans(loans);\n    setShowBlendedRateItemization(false);\n  }\n\n  const openClosingCostItemization = useCallback((e) => {\n    e.stopPropagation();\n    setShowClosingCostItemization(true);\n  }, []);\n\n  const closeClosingCostItemization = useCallback(() => {\n    setShowClosingCostItemization(false);\n  }, []);\n\n  const isItemized = Array.isArray(loans) && loans.some((loan) => loan.amount);\n  return (\n    <div className={classes.calcContainer}>\n      {showInputsMissingMsg && (\n        <MissingInputsMsg calculator=\"Equity Needed\" persist={persist} />\n      )}\n      {showClosingCostDisabledMsg && (\n        <DisabledInputsMsg field={\"Closing Cost\"} />\n      )}\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Closing Costs $:\"\n          variant=\"outlined\"\n          value={\n            isClosingCostItemized\n              ? formatDollar(parseToNumber(closing_costs_dollar))\n              : closing_costs_dollar\n          }\n          disabled={isClosingCostItemized}\n          onClick={\n            isClosingCostItemized\n              ? () => setShowClosingCostDisabledMsg(true)\n              : undefined\n          }\n          onChange={handleInputChange}\n          name=\"closing_costs_dollar\"\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <ListIcon\n                  className={classes.listIcon}\n                  onClick={openClosingCostItemization}\n                />\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n        <span className={classes.inputsDivider} />\n        <TextField\n          inputProps={{ inputMode: \"decimal\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Closing cost %:\"\n          variant=\"outlined\"\n          value={closing_costs_percent}\n          disabled={isClosingCostItemized}\n          onClick={\n            isClosingCostItemized\n              ? () => setShowClosingCostDisabledMsg(true)\n              : undefined\n          }\n          onChange={handleInputChange}\n          name=\"closing_costs_percent\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment\n                position=\"end\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                %\n              </InputAdornment>\n            ),\n            classes: { input: classes.inputWithPadding },\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n            shrink: true,\n          }}\n        />\n      </div>\n\n      <TextField\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label=\"Total Capitalization:\"\n        variant=\"outlined\"\n        value={formatDollar(total_capitalization)}\n        onChange={() => {}}\n        name=\"total_capitalization\"\n        fullWidth\n        disabled\n        InputProps={{\n          classes: { input: classes.input },\n          startAdornment: (\n            <InputAdornment\n              position=\"start\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              $\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(classes.inputLabel, classes.fullWidthLabel),\n            shrink: \"fullInputShrink\",\n          },\n          shrink: true,\n        }}\n      />\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label={isItemized ? \"Total Loan Amount\" : \"Loan Amount as $:\"}\n          disabled={!!isItemized}\n          variant=\"outlined\"\n          value={isItemized ? totalLoan : loan_amount_dollar}\n          onChange={handleInputChange}\n          name=\"loan_amount_dollar\"\n          InputProps={{\n            classes: { input: classes.input },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <ListIcon\n                  className={classes.listIcon}\n                  onClick={openBlendedRateItemization}\n                />\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n          }}\n        />\n        <span className={classes.inputsDivider} />\n        <TextField\n          inputProps={{ inputMode: \"decimal\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label={isItemized ? \"Total Loan Amount as %\" : \"Loan Amount as %:\"}\n          variant=\"outlined\"\n          disabled={!!isItemized}\n          value={isItemized ? totalLoanPercentage : loan_amount_percent}\n          onChange={handleInputChange}\n          name=\"loan_amount_percent\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment\n                position=\"end\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                %\n              </InputAdornment>\n            ),\n            classes: { input: classes.inputWithPadding },\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n            shrink: true,\n          }}\n        />\n      </div>\n      <div className={classes.toggleContainer}>\n        <span className={classes.toggle}>% of</span>\n        <span\n          onClick={() =>\n            isItemized ? {} : toggleLoanAmountOf(\"purchasePrice\")\n          }\n          className={clsx(classes.toggle, classes.pointer, {\n            [classes.toggleActive]: loanAmountOf === \"purchasePrice\",\n          })}\n        >\n          Purchase Price\n        </span>\n        <span className={classes.toggle}>|</span>\n        <span\n          onClick={() =>\n            isItemized ? {} : toggleLoanAmountOf(\"totalCapitalization\")\n          }\n          className={clsx(classes.toggle, classes.pointer, {\n            [classes.toggleActive]: loanAmountOf === \"totalCapitalization\",\n          })}\n        >\n          Total Capitalization\n        </span>\n      </div>\n\n      {showBlendedRateItemization && (\n        <BlendedRateItemization\n          loans={loansList}\n          blendedRate={blendedRate}\n          totalLoan={totalLoan}\n          totalLoanPercentage={totalLoanPercentage}\n          setLoans={(loans) => setLoans(loans)}\n          onClear={() => dispatch(clearBlendedRateItemization(persist))}\n          onClose={() => blendedRateItemizationClose()}\n          persist={persist}\n        />\n      )}\n      {showClosingCostItemization && (\n        <ClosingCostItemized\n          open={showClosingCostItemization}\n          handleClose={closeClosingCostItemization}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n      )}\n    </div>\n  );\n}\n\nconst syncFields = {\n  closing_costs_dollar({ value, dispatch, state, persist }) {\n    const { purchase_price } = state;\n    if (!purchase_price) return;\n    console.log(\"persist1 \", persist);\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.EQUITY_NEEDED,\n        name: \"closing_costs_percent\",\n        value: formatPercent(\n          parseToNumber(value) / parseToNumber(purchase_price)\n        ),\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.CLOSING_COST,\n        value: entryMethods.DOLLAR_AMOUNT,\n        persist,\n      })\n    );\n  },\n  closing_costs_percent({ value, dispatch, state, persist }) {\n    const { purchase_price } = state;\n    if (!purchase_price) return;\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.EQUITY_NEEDED,\n        name: \"closing_costs_dollar\",\n        value: value\n          ? noDecimal(numberToPercent(value) * parseToNumber(purchase_price))\n          : \"\",\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.CLOSING_COST,\n        value: entryMethods.PERCENT_AMOUNT,\n        persist,\n      })\n    );\n  },\n\n  loan_amount_dollar({ value, dispatch, state, meta, persist }) {\n    const { loanAmountOf } = meta;\n    const { purchase_price, total_capitalization } = state;\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.EQUITY_NEEDED,\n        name: \"loan_amount_percent\",\n        value:\n          loanAmountOf === \"totalCapitalization\"\n            ? total_capitalization\n              ? formatPercent(\n                  parseToNumber(value) / parseToNumber(total_capitalization)\n                )\n              : \"\"\n            : purchase_price\n            ? formatPercent(\n                parseToNumber(value) / parseToNumber(purchase_price)\n              )\n            : \"\",\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.LOAN_AMOUNT,\n        value: entryMethods.DOLLAR_AMOUNT,\n        persist,\n      })\n    );\n  },\n  loan_amount_percent({ value, dispatch, state, meta, persist }) {\n    const { loanAmountOf } = meta;\n    const { purchase_price, total_capitalization } = state;\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.EQUITY_NEEDED,\n        name: \"loan_amount_dollar\",\n        value: value\n          ? noDecimal(\n              loanAmountOf === \"totalCapitalization\"\n                ? total_capitalization\n                  ? numberToPercent(value) * parseToNumber(total_capitalization)\n                  : \"\"\n                : purchase_price\n                ? numberToPercent(value) * parseToNumber(purchase_price)\n                : \"\"\n            )\n          : \"\",\n        persist,\n      })\n    );\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.LOAN_AMOUNT,\n        value: entryMethods.PERCENT_AMOUNT,\n        persist,\n      })\n    );\n  },\n};\n\nconst syncClosingCostItemization = _debounce(\n  ({\n    itemizationValues = {},\n    userItemizationEntryMethods = {},\n    percentOfAmountObj,\n    percentOfFields,\n    purchasePrice,\n    dispatch,\n    persist,\n  }) => {\n    const syncedValues = Object.keys(itemizationValues).reduce((acc, cur) => {\n      const entryMethod =\n        userItemizationEntryMethods[cur] || entryMethods.DOLLAR_AMOUNT;\n      const syncedFields = syncClosingCostItemizationFields({\n        nestedKey: entryMethod,\n        value: itemizationValues[cur][entryMethod],\n        percentOfAmount: percentOfAmountObj[percentOfFields[cur]],\n        canBeSynced: itemizationValues[cur].hasOwnProperty(\"percent\"),\n      });\n      acc[cur] = { ...syncedFields };\n      return acc;\n    }, {});\n\n    const {\n      [entryMethods.DOLLAR_AMOUNT]: dollarAmt,\n      [entryMethods.PERCENT_AMOUNT]: percentAmt,\n    } = getClosingCostItemizationAmounts({\n      itemizationValues: syncedValues,\n      purchasePrice,\n      canShowPercent: true,\n    });\n    dispatch(\n      eCalcOnMultiChange({\n        calculator: eCalcForms.EQUITY_NEEDED,\n        valuesObj: {\n          closing_costs_dollar: dollarAmt,\n          closing_costs_percent: percentAmt,\n        },\n        persist,\n      })\n    );\n    dispatch(\n      updateItemization({\n        name: eCalcForms.CLOSING_COSTS,\n        value: syncedValues,\n        persist,\n      })\n    );\n  },\n  300\n);\n\nfunction calculateTotalCapitalization({ state, dispatch, persist }) {\n  const { purchase_price, closing_costs_dollar } = state;\n  let results = \"\";\n  if (purchase_price && closing_costs_dollar) {\n    results =\n      parseToNumber(closing_costs_dollar) + parseToNumber(purchase_price);\n  }\n  dispatch(\n    eCalcOnChange({\n      calculator: eCalcForms.EQUITY_NEEDED,\n      name: \"total_capitalization\",\n      value: results,\n      persist,\n    })\n  );\n}\n\nfunction calculateLoanAmount({\n  loanAmountOf,\n  loanAmountMethod,\n  state,\n  dispatch,\n  persist,\n}) {\n  const { loan_amount_dollar, loan_amount_percent } = state;\n  if (loanAmountMethod === entryMethods.PERCENT_AMOUNT) {\n    syncFields.loan_amount_percent({\n      value: loan_amount_percent,\n      dispatch,\n      state,\n      meta: { loanAmountOf },\n      persist,\n    });\n  } else {\n    syncFields.loan_amount_dollar({\n      value: loan_amount_dollar,\n      dispatch,\n      state,\n      meta: { loanAmountOf },\n      persist,\n    });\n  }\n}\n\nfunction formatInput(name, value) {\n  switch (name) {\n    case \"closing_costs_dollar\":\n    case \"loan_amount_dollar\":\n      return noDecimal(parseToNumber(value));\n    default:\n      return value;\n  }\n}\n\nfunction checkIfItemizedDollarPercent(itemizationValues) {\n  const sum = _sum(\n    _flatMap(itemizationValues, (item) =>\n      parseToNumber(item[entryMethods.DOLLAR_AMOUNT] || 0)\n    )\n  );\n  return sum > 0;\n}\n","import { parseToNumber } from \"../helpers\";\n\nexport function calcEquityNeeded({ loan_amount_dollar, total_capitalization }) {\n  const results =\n    parseToNumber(total_capitalization) - parseToNumber(loan_amount_dollar);\n  return { label: \"Equity Needed\", results, displayFormat: \"dollar\" };\n}\n\nexport function calcDebtYield({ loan_amount_dollar, first_year_noi }) {\n  const results = +parseFloat(\n    (parseToNumber(first_year_noi) / parseToNumber(loan_amount_dollar)) * 100\n  ).toFixed(2);\n  return {\n    label: \"Debt Yield\",\n    results,\n    displayFormat: \"percent\",\n    showDebtYield: true\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { calculatorInputs } from \"../sharedStyles\";\n\nexport const useStyles = makeStyles(theme => ({\n  ...calculatorInputs(theme)\n}));\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport {\n  // Divider,\n  TextField,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport mixpanel from \"mixpanel-browser\";\nimport { eCalcForms } from \"../../../lib\";\nimport {\n  setIsDirty,\n  eCalcOnChange,\n  setActiveCalculator,\n  addUserEntryMethod,\n  addResults,\n  removeResults,\n  clearBlendedRateItemization,\n} from \"../../../actions/eCalcForms\";\nimport { SignalCellularAltIcon, ListIcon } from \"../../../themes\";\nimport {\n  formatDollar,\n  formatPercent,\n  entryMethodNames,\n  entryMethods,\n  noDecimal,\n  parseToNumber,\n  // numberToPercent,\n} from \"../helpers\";\nimport {\n  BlendedRateItemization,\n  MaxBankWillLend,\n  MissingNoiMsg,\n  RatesModal,\n  AmortizationScheduleModal,\n} from \"../components\";\nimport {\n  calcMortgageDcsrPostIO,\n  calcMortgageDcsrDuringIO,\n  calcBalanceAtMaturity,\n  calcDcsrPostIo,\n  calcDcsrduringIo,\n  calcAmortizationSchedule,\n} from \"./MortgageDscr.logic\";\nimport { calcTotalLoanAndBlendedRate } from \"../components/BlendedRateItemization.logic\";\nimport { useStyles } from \"./MortgageDscr.styles\";\nimport { showNotification } from \"../../../actions/uiActions\";\nimport { Notification } from \"../../common/Notification\";\n\nexport function MortgageDscr({ storeSliceName, persist }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const dirty = useSelector((state) => state[storeSliceName].dirty);\n  const inputValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.MORTGAGE_AND_DSCR],\n    shallowEqual\n  );\n  const total_capitalization = useSelector(\n    (state) =>\n      state[storeSliceName][eCalcForms.EQUITY_NEEDED].total_capitalization\n  );\n  const loan_amount_dollar = useSelector(\n    (state) =>\n      state[storeSliceName][eCalcForms.EQUITY_NEEDED].loan_amount_dollar\n  );\n  const loans = useSelector(\n    (state) => state[storeSliceName][eCalcForms.EQUITY_NEEDED].loans\n  );\n  const first_year_noi = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].first_year_noi\n  );\n  const { interest_rate, init_loan_term_yrs, io_years, amortization_years } =\n    inputValues || {};\n\n  const purchase_price = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].purchase_price\n  );\n\n  const mortgage_post_io = useSelector(\n    (state) => state[storeSliceName].resultsValues.mortgage_post_io,\n    shallowEqual\n  );\n\n  const mortgage_during_io = useSelector(\n    (state) => state[storeSliceName].resultsValues.mortgage_during_io,\n    shallowEqual\n  );\n\n  const userEntryMethods = useSelector(\n    (state) => state[storeSliceName].userEntryMethods,\n    shallowEqual\n  );\n  const { /* closingCost, loanAmount, */ loanAmountOf } = userEntryMethods;\n\n  const [showIO, setShowIO] = useState(!!io_years);\n  const [showMaxBank, setShowMaxBank] = useState(false);\n  const [showBlendedRateItemization, setShowBlendedRateItemization] = useState(\n    false\n  );\n  const [showRatesModal, setShowRatesModal] = useState(false);\n\n  const openRatesModal = useCallback(() => {\n    mixpanel.track(\"Rates Modal Opened\");\n    setShowRatesModal(true);\n  }, []);\n\n  const closeRatesModal = useCallback(() => {\n    setShowRatesModal(false);\n  }, []);\n\n  function handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    const intValue = parseFloat(value.replace(/[^0-9.]/g, \"\")); //Strips of non-numeric characters besides decimal\n    dispatch(\n      eCalcOnChange({\n        // the loan_amount field is a duplicate of the equity needed calculator\n        calculator:\n          name !== \"loan_amount_dollar\"\n            ? eCalcForms.MORTGAGE_AND_DSCR\n            : eCalcForms.EQUITY_NEEDED,\n        name,\n        value: formatInput(name, value),\n        persist,\n      })\n    );\n    // need to know which calculator the user is entering for mobile slider\n    dispatch(setActiveCalculator({ name: \"mortgage\", persist }));\n    typeof syncFields[name] === \"function\" &&\n      syncFields[name]({\n        value: intValue,\n        dispatch,\n        state: { ...inputValues, loan_amount_dollar },\n        meta: {},\n        persist,\n      });\n    if (!dirty) {\n      dispatch(setIsDirty(persist));\n    }\n  }\n\n  useEffect(() => {\n    if (loan_amount_dollar && interest_rate && amortization_years) {\n      const results = calcMortgageDcsrPostIO({\n        loan_amount_dollar,\n        interest_rate,\n        amortization_years,\n        io_years,\n      });\n      dispatch(\n        addResults({\n          name: \"mortgage_post_io\",\n          value: results,\n          persist,\n        })\n      );\n      if (io_years) {\n        const ioResults = calcMortgageDcsrDuringIO({\n          loan_amount_dollar,\n          interest_rate,\n        });\n        dispatch(\n          addResults({\n            name: \"mortgage_during_io\",\n            value: ioResults,\n            persist,\n          })\n        );\n      }\n    } else {\n      dispatch(removeResults({ name: \"mortgage_post_io\", persist }));\n    }\n  }, [\n    loan_amount_dollar,\n    interest_rate,\n    amortization_years,\n    io_years,\n    dispatch,\n    persist,\n  ]);\n\n  useEffect(() => {\n    if (mortgage_post_io?.results || mortgage_during_io?.results) {\n      const amortizationSchedule = calcAmortizationSchedule({\n        mortgage_during_io,\n        mortgage_post_io,\n        io_years,\n        loan_amount_dollar,\n        interest_rate,\n        init_loan_term_yrs,\n        amortization_years,\n      });\n      dispatch(\n        eCalcOnChange({\n          // the loan_amount field is a duplicate of the equity needed calculator\n          calculator: eCalcForms.MORTGAGE_AND_DSCR,\n          name: \"amortization_schedule\",\n          value: amortizationSchedule,\n          persist,\n        })\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mortgage_during_io, mortgage_post_io, init_loan_term_yrs, persist]);\n\n  useEffect(() => {\n    if (\n      loan_amount_dollar &&\n      interest_rate &&\n      amortization_years &&\n      init_loan_term_yrs\n    ) {\n      const results = calcBalanceAtMaturity({\n        loan_amount_dollar,\n        interest_rate,\n        amortization_years,\n        init_loan_term_yrs,\n        io_years,\n      });\n      dispatch(\n        addResults({\n          name: \"balance_at_maturity\",\n          value: results,\n          persist,\n        })\n      );\n    } else {\n      dispatch(removeResults({ name: \"balance_at_maturity\", persist }));\n    }\n  }, [\n    loan_amount_dollar,\n    interest_rate,\n    amortization_years,\n    init_loan_term_yrs,\n    io_years,\n    dispatch,\n    persist,\n  ]);\n\n  useEffect(() => {\n    if (\n      loan_amount_dollar &&\n      interest_rate &&\n      amortization_years &&\n      first_year_noi\n    ) {\n      if (io_years) {\n        const ioResults = calcDcsrduringIo({\n          loan_amount_dollar,\n          interest_rate,\n          amortization_years,\n          first_year_noi,\n          io_years,\n        });\n        // we only show one results\n        dispatch(removeResults({ name: \"dscr_post_io\", persist }));\n        dispatch(\n          addResults({\n            name: \"dscr_during_post_io\",\n            value: ioResults,\n            persist,\n          })\n        );\n      } else {\n        const results = calcDcsrPostIo({\n          loan_amount_dollar,\n          interest_rate,\n          amortization_years,\n          first_year_noi,\n        });\n        dispatch(\n          removeResults({\n            name: \"dscr_during_post_io\",\n            persist,\n          })\n        );\n        dispatch(\n          addResults({\n            name: \"dscr_post_io\",\n            value: results,\n            persist,\n          })\n        );\n      }\n    } else {\n      dispatch(removeResults({ name: \"dscr_post_io\", persist }));\n      dispatch(removeResults({ name: \"dscr_during_post_io\", persist }));\n    }\n  }, [\n    loan_amount_dollar,\n    interest_rate,\n    first_year_noi,\n    amortization_years,\n    io_years,\n    dispatch,\n    persist,\n  ]);\n\n  const closeIO = useCallback(() => {\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.MORTGAGE_AND_DSCR,\n        name: \"io_years\",\n        value: \"\",\n        persist,\n      })\n    );\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.MORTGAGE_AND_DSCR,\n        name: \"bank_max_loan_during_io\",\n        value: \"\",\n        persist,\n      })\n    );\n    dispatch(removeResults({ name: \"mortgage_during_io\", persist }));\n    dispatch(removeResults({ name: \"dscr_during_post_io\", persist }));\n    setShowIO(false);\n  }, [dispatch, persist]);\n\n  const [loansList, setLoans] = useState(loans);\n  const [totalLoan, setTotalLoan] = useState(0);\n  const [totalLoanPercentage, setTotalLoanPercentage] = useState(0);\n  const [blendedRate, setBlendedRate] = useState(0);\n  const [\n    showAmortizationScheduleModal,\n    setShowAmortizationScheduleModal,\n  ] = useState(false);\n\n  useEffect(() => {\n    const results = calcTotalLoanAndBlendedRate(loansList);\n    setTotalLoan(formatDollar(results.totalLoan));\n    setTotalLoanPercentage(\n      loanAmountOf === \"totalCapitalization\"\n        ? total_capitalization\n          ? formatPercent(\n              parseToNumber(results.totalLoan) /\n                parseToNumber(total_capitalization)\n            )\n          : \"\"\n        : purchase_price\n        ? formatPercent(\n            parseToNumber(results.totalLoan) / parseToNumber(purchase_price)\n          )\n        : \"\"\n    );\n    setBlendedRate(results.blendedRate);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loansList]);\n\n  useEffect(() => {\n    setLoans(loans);\n  }, [loans]);\n\n  const openBlendedRateItemization = useCallback(() => {\n    mixpanel.track(\"ecalc_popup\", { popup: \"Blended Rates screen\" });\n    setShowBlendedRateItemization(true);\n  }, []);\n\n  function blendedRateItemizationClose() {\n    setLoans(loans);\n    setShowBlendedRateItemization(false);\n  }\n\n  const validateAmortScheduleFields = ({ fields = [] }) => {\n    let invalidFields = [];\n    fields.map((field) => {\n      return !field.value ? invalidFields.push(field.name) : null;\n    });\n\n    if (invalidFields.length) {\n      //separate each invalid field with comma. last field should have 'and' instead\n      let errorMessage = invalidFields\n        .join(\", \")\n        .replace(/,(?!.*,)/gim, \" and\");\n      errorMessage += ` ${invalidFields.length > 1 ? \"are\" : \"is\"} required!`;\n      dispatch(showNotification({ message: errorMessage }));\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const isItemized = Array.isArray(loans) && loans.some((loan) => loan.amount);\n  return (\n    <div className={classes.calcContainer}>\n      <TextField\n        inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label={isItemized ? \"Total Loan Amount: \" : \"Loan Amount:\"}\n        disabled={!!isItemized}\n        variant=\"outlined\"\n        value={isItemized ? totalLoan : loan_amount_dollar}\n        onChange={handleInputChange}\n        name=\"loan_amount_dollar\"\n        fullWidth\n        InputProps={{\n          classes: { input: classes.input },\n          startAdornment: (\n            <InputAdornment\n              position=\"start\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              $\n            </InputAdornment>\n          ),\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <ListIcon\n                className={classes.listIcon}\n                onClick={openBlendedRateItemization}\n              />\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(classes.inputLabel, classes.fullWidthLabel),\n            shrink: \"fullInputShrink\",\n          },\n        }}\n      />\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          inputProps={{ inputMode: \"decimal\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label={\n            <span style={{ display: \"flex\" }}>\n              {isItemized ? \"Blended Initial Rate\" : \"Interest Rate:\"}\n              <SignalCellularAltIcon\n                className={classes.rateIcon}\n                onClick={openRatesModal}\n              />\n            </span>\n          }\n          disabled={!!isItemized}\n          variant=\"outlined\"\n          value={isItemized ? blendedRate : interest_rate}\n          onChange={handleInputChange}\n          name=\"interest_rate\"\n          InputProps={{\n            endAdornment: (\n              <InputAdornment\n                position=\"end\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                %\n              </InputAdornment>\n            ),\n            classes: { input: classes.inputWithPadding },\n          }}\n          InputLabelProps={{\n            classes: { root: classes.inputLabel, shrink: \"shrink\" },\n            shrink: true,\n          }}\n        />\n        <span className={classes.inputsDivider} style={{ height: 0 }} />\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Initial Loan Term (YRS):\"\n          variant=\"outlined\"\n          value={init_loan_term_yrs}\n          onChange={handleInputChange}\n          name=\"init_loan_term_yrs\"\n          InputProps={{\n            classes: { input: classes.inputWithPadding },\n          }}\n          InputLabelProps={{\n            classes: {\n              root: classes.inputLabel,\n              shrink: \"shrink\",\n            },\n            shrink: true,\n          }}\n        />\n      </div>\n      <div\n        className={classes.toggleLink}\n        onClick={showIO ? closeIO : () => setShowIO(true)}\n        style={{ marginBottom: showIO ? -33 : 10 }}\n      >\n        {showIO ? \"Remove I/O (Interest Only)\" : \"Add I/O (Interest Only)\"}\n      </div>\n      {showIO && (\n        <div className={classes.lineInputsContainer}>\n          {/* For spacing */}\n          <div className={clsx(classes.margin, classes.smallInput)} />\n          <span className={classes.inputsDivider} style={{ height: 0 }} />\n          <TextField\n            inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n            className={clsx(classes.margin, classes.smallInput)}\n            label=\"I/O (interest only) Years:\"\n            variant=\"outlined\"\n            value={io_years}\n            onChange={handleInputChange}\n            name=\"io_years\"\n            InputProps={{\n              classes: { input: classes.inputWithPadding },\n            }}\n            InputLabelProps={{\n              classes: {\n                root: classes.inputLabel,\n                shrink: \"shrink\",\n              },\n              shrink: true,\n            }}\n          />\n        </div>\n      )}\n      <TextField\n        inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label={\n          showIO ? \"Amortization after I/O in Years:\" : \"Amortization in Years:\"\n        }\n        variant=\"outlined\"\n        value={amortization_years}\n        onChange={handleInputChange}\n        name=\"amortization_years\"\n        fullWidth\n        InputProps={{\n          classes: { input: classes.inputWithPadding },\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(\n              classes.inputLabel,\n              classes.longLabel,\n              classes.fullWidthLabel\n            ),\n            shrink: \"fullInputShrink\",\n          },\n          shrink: true,\n        }}\n      />\n      <div\n        className={classes.toggleLink}\n        onClick={() => {\n          if (\n            validateAmortScheduleFields({\n              fields: [\n                { name: \"Loan Amount\", value: loan_amount_dollar },\n                { name: \"Interest Rate\", value: interest_rate },\n                { name: \"Amortization Years\", value: amortization_years },\n              ],\n            })\n          ) {\n            mixpanel.track(\"amortization modal opened\");\n            setShowAmortizationScheduleModal(true);\n          }\n        }}\n      >\n        View Amortization Schedule\n      </div>\n\n      <Notification />\n\n      {first_year_noi ? (\n        <div\n          className={classes.toggleLink}\n          onClick={() => setShowMaxBank(true)}\n        >\n          Figure out Max Bank will Lend\n        </div>\n      ) : (\n        <MissingNoiMsg />\n      )}\n      {showMaxBank && (\n        <MaxBankWillLend\n          open={showMaxBank}\n          handleClose={() => setShowMaxBank(false)}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n      )}\n\n      {showBlendedRateItemization && (\n        <BlendedRateItemization\n          loans={loansList}\n          blendedRate={blendedRate}\n          totalLoan={totalLoan}\n          totalLoanPercentage={totalLoanPercentage}\n          setLoans={(loans) => setLoans(loans)}\n          onClear={() => dispatch(clearBlendedRateItemization(persist))}\n          onClose={() => blendedRateItemizationClose()}\n          persist={persist}\n        />\n      )}\n\n      {showAmortizationScheduleModal && (\n        <AmortizationScheduleModal\n          open={showAmortizationScheduleModal}\n          onClose={() => setShowAmortizationScheduleModal(false)}\n          onOpen={() => {\n            mixpanel.track(\"amortization modal opened\");\n            setShowAmortizationScheduleModal(true);\n          }}\n          storeSliceName={storeSliceName}\n        />\n      )}\n      <RatesModal\n        open={showRatesModal}\n        handleOpen={openRatesModal}\n        handleClose={closeRatesModal}\n      />\n    </div>\n  );\n}\n\nconst syncFields = {\n  loan_amount_dollar({ value, dispatch, state, meta, persist }) {\n    dispatch(\n      addUserEntryMethod({\n        name: entryMethodNames.LOAN_AMOUNT,\n        value: entryMethods.DOLLAR_AMOUNT,\n        persist,\n      })\n    );\n  },\n};\n\nfunction formatInput(name, value) {\n  switch (name) {\n    case \"loan_amount_dollar\":\n    case \"init_loan_term_yrs\":\n    case \"amortization_years\":\n      return noDecimal(parseToNumber(value));\n    default:\n      return value;\n  }\n}\n","import { parseToNumber, formatPercent } from \"../helpers\";\nimport { monthlyAnnualPaymentsAmortizationPeriod } from \"./MortgageDscr.logic\";\n\nexport function calculateFreeCashFlow({\n  first_year_noi,\n  loan_amount_dollar,\n  interest_rate,\n  amortization_years,\n  io_years,\n}) {\n  var results = first_year_noi;\n  if (\n    first_year_noi &&\n    loan_amount_dollar &&\n    interest_rate &&\n    amortization_years\n  ) {\n    const { annual: annualPayments } = monthlyAnnualPaymentsAmortizationPeriod({\n      loan_amount_dollar,\n      interest_rate,\n      amortization_years,\n    });\n    let payments = annualPayments;\n    if (io_years) {\n      payments =\n        parseToNumber(loan_amount_dollar) *\n        (parseToNumber(interest_rate) / 100);\n    }\n    results =\n      annualPayments !== \"Invalid Entry\"\n        ? parseToNumber(first_year_noi) - payments\n        : annualPayments;\n  }\n  return {\n    label: \"First Year Net Cash Flow\",\n    results,\n    displayFormat: \"dollar\",\n  };\n}\n\nexport function calcFirstYearCashOnCash({\n  first_year_noi,\n  loan_amount_dollar,\n  interest_rate,\n  amortization_years,\n  equity_needed,\n  io_years,\n}) {\n  var results = 0;\n  const { results: freeCashFlow } = calculateFreeCashFlow({\n    first_year_noi,\n    loan_amount_dollar,\n    interest_rate,\n    amortization_years,\n    io_years,\n  });\n\n  results =\n    freeCashFlow !== \"Invalid Entry\"\n      ? formatPercent(\n          parseToNumber(freeCashFlow) / parseToNumber(equity_needed)\n        )\n      : freeCashFlow;\n  return {\n    label: \"First Year Cash on Cash Return\",\n    results,\n    displayFormat: \"percent\",\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { calculatorInputs } from \"../sharedStyles\";\n\nexport const useStyles = makeStyles(theme => ({\n  ...calculatorInputs(theme)\n}));\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\nimport { eCalcForms } from \"../../../lib\";\n// import { AddIcon } from \"../../../themes\";\nimport {\n  eCalcOnChange,\n  addResults,\n  removeResults,\n} from \"../../../actions/eCalcForms\";\nimport { MissingInputsMsg } from \"../components\";\nimport { formatDollar, parseToNumber } from \"../helpers\";\nimport {\n  calcFirstYearCashOnCash,\n  calculateFreeCashFlow,\n} from \"./CashOnCash.logic\";\nimport { useStyles } from \"./CashOnCash.styles\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\n\nexport function CashOnCash({ storeSliceName, persist }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const cashOnCashValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CASH_ON_CASH],\n    shallowEqual\n  );\n  const equityNeededValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.EQUITY_NEEDED],\n    shallowEqual\n  );\n  const mortgageDcsr = useSelector(\n    (state) => state[storeSliceName][eCalcForms.MORTGAGE_AND_DSCR],\n    shallowEqual\n  );\n  const first_year_noi = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].first_year_noi\n  );\n\n  const { equity_needed, first_year_cash_flow } = cashOnCashValues || {};\n  const { total_capitalization, loan_amount_dollar } = equityNeededValues || {};\n  const { interest_rate, amortization_years, io_years } = mortgageDcsr || {};\n\n  const [showInputsMissingMsg, setShowInputsMissingMsg] = useState(false);\n\n  useEffect(() => {\n    let results = \"\";\n    if (total_capitalization && loan_amount_dollar) {\n      results = formatDollar(\n        parseToNumber(total_capitalization) - parseToNumber(loan_amount_dollar)\n      );\n    }\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CASH_ON_CASH,\n        name: \"equity_needed\",\n        value: results,\n        persist,\n      })\n    );\n  }, [total_capitalization, loan_amount_dollar, dispatch, persist]);\n\n  useEffect(() => {\n    if (\n      !total_capitalization ||\n      !loan_amount_dollar ||\n      !interest_rate ||\n      !amortization_years\n    ) {\n      setShowInputsMissingMsg(true);\n    } else {\n      setShowInputsMissingMsg(false);\n    }\n  }, [\n    total_capitalization,\n    loan_amount_dollar,\n    interest_rate,\n    amortization_years,\n  ]);\n\n  useEffect(() => {\n    let resultValue = \"\";\n    if (first_year_noi) {\n      const netCashFlow = calculateFreeCashFlow({\n        first_year_noi,\n        loan_amount_dollar,\n        interest_rate,\n        amortization_years,\n        io_years,\n      });\n      resultValue = netCashFlow.results;\n      dispatch(\n        addResults({\n          name: \"first_year_cash_flow\",\n          value: netCashFlow,\n          persist,\n        })\n      );\n    } else {\n      dispatch(removeResults({ name: \"first_year_cash_flow\", persist }));\n    }\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.CASH_ON_CASH,\n        name: \"first_year_cash_flow\",\n        value: resultValue,\n        persist,\n      })\n    );\n  }, [\n    first_year_noi,\n    loan_amount_dollar,\n    interest_rate,\n    amortization_years,\n    io_years,\n    dispatch,\n    persist,\n  ]);\n\n  useEffect(() => {\n    if (first_year_noi && equity_needed) {\n      const cashOncashReturn = calcFirstYearCashOnCash({\n        first_year_noi,\n        loan_amount_dollar,\n        interest_rate,\n        amortization_years,\n        equity_needed,\n        io_years,\n      });\n      dispatch(\n        addResults({\n          name: \"cash_on_cash_return\",\n          value: cashOncashReturn,\n          persist,\n        })\n      );\n    } else {\n      dispatch(removeResults({ name: \"cash_on_cash_return\", persist }));\n    }\n  }, [\n    first_year_noi,\n    loan_amount_dollar,\n    interest_rate,\n    amortization_years,\n    equity_needed,\n    io_years,\n    dispatch,\n    persist,\n  ]);\n\n  return (\n    <div className={classes.calcContainer} style={{ width: \"100%\" }}>\n      {showInputsMissingMsg && (\n        <MissingInputsMsg calculator=\"Cash On Cash\" persist={persist} />\n      )}\n      <TextField\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label=\"Equity Needed:\"\n        variant=\"outlined\"\n        value={equity_needed}\n        onChange={() => {}}\n        name=\"equity_needed\"\n        fullWidth\n        disabled\n        InputProps={{\n          classes: { input: classes.input },\n          startAdornment: (\n            <InputAdornment\n              position=\"start\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              $\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(classes.inputLabel, classes.fullWidthLabel),\n            shrink: \"fullInputShrink\",\n          },\n        }}\n      />\n      <TextField\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label=\"First Year Net Cash Flow (NCF):\"\n        variant=\"outlined\"\n        value={formatDollar(first_year_cash_flow)}\n        onChange={() => {}}\n        name=\"first_year_cash_flow\"\n        fullWidth\n        disabled\n        InputProps={{\n          classes: { input: classes.input },\n          startAdornment: (\n            <InputAdornment\n              position=\"start\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              $\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(\n              classes.inputLabel,\n              classes.longLabel,\n              classes.fullWidthLabel\n            ),\n            shrink: \"fullInputShrink\",\n          },\n        }}\n      />\n    </div>\n  );\n}\n","import { parseToNumber } from \"../helpers\";\n\nexport function calcWeightedAvg(data, holding_period_yrs) {\n  if (data.length) {\n    const startingVal = data[0]; // ? parseFloat(`${data[0]}`.replace(\",\", \"\")) : 0;\n    const endingVal = data[data.length - 1]; // ? parseFloat(`${data[data.length - 1]}`.replace(\",\", \"\")) : 0;\n    const avg = +parseFloat(\n      (Math.pow(endingVal / startingVal, 1 / holding_period_yrs) - 1) * 100\n    ).toFixed(3);\n    return avg || 0;\n  }\n}\n\n// export function calcVacancyRateAvg(stabilized_vacancies) {\n//   const avg =\n//     stabilized_vacancies.length > 1\n//       ? stabilized_vacancies\n//           .slice(1)\n//           .map((s) => s.value)\n//           .reduce((a, b) => a + b) /\n//         (stabilized_vacancies.length - 1)\n//       : \"\";\n//   return avg ? +parseFloat(avg * 100).toFixed(3) : \"\";\n// }\n\nexport function calcNOIWithoutIrrSchedule({\n  holding_period_yrs,\n  projected_gross_income_rate,\n  stabilized_vacancy,\n  projected_annual_expense,\n  annual_expenses,\n  potential_annual_gross_income,\n}) {\n  const totalExpenses = [\n    annual_expenses,\n    ...new Array(holding_period_yrs).fill(projected_annual_expense / 100 + 1),\n  ].reduce((a, b) => a * b);\n  const totalPgi = [\n    potential_annual_gross_income,\n    ...new Array(holding_period_yrs).fill(\n      projected_gross_income_rate / 100 + 1\n    ),\n  ].reduce((a, b) => a * b);\n  const startingVal =\n    potential_annual_gross_income -\n    potential_annual_gross_income * (stabilized_vacancy / 100) -\n    annual_expenses;\n  const endingVal =\n    totalPgi - totalPgi * (stabilized_vacancy / 100) - totalExpenses;\n  return +parseFloat(\n    (Math.pow(endingVal / startingVal, 1 / holding_period_yrs) - 1) * 100\n  ).toFixed(3);\n}\n\nexport function calcEquityMultiple({\n  grand_total_distribution,\n  equity_needed,\n}) {\n  const results = +parseFloat(\n    parseToNumber(grand_total_distribution) / parseToNumber(equity_needed)\n  ).toFixed(3);\n  return {\n    label: \"Equity Multiple\",\n    results,\n    displayFormat: \"times\",\n  };\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { calculatorInputs } from \"../sharedStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  ...calculatorInputs(theme),\n  capitalEvent: {\n    fontFamily: \"Karla\",\n    margin: \"16px 0\",\n    fontWeight: \"bold\",\n    fontSize: \"15px\",\n    textDecorationLine: \"underline\",\n    color: \"#10B8C7\",\n    opacity: (props) => (props.capitalEventEligible ? 0.8 : 0.4),\n    cursor: (props) => (props.capitalEventEligible ? \"pointer\" : \"text\"),\n    display: \"inline-block\",\n  },\n}));\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport mixpanel from \"mixpanel-browser\";\nimport {\n  // Divider,\n  TextField,\n  InputAdornment,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { eCalcForms } from \"../../../lib\";\nimport {\n  setIsDirty,\n  eCalcOnChange,\n  irrScheduleChange,\n  addResults,\n  removeResults,\n  scheduleOpened,\n  setActiveCalculator,\n  clearIrrCapitalEvent,\n} from \"../../../actions/eCalcForms\";\nimport { useMobile, ListIcon } from \"../../../themes\";\n// import { MissingInputsMsg } from \"../components\";\nimport { IRRSchedule, MissingInputsMsg, IRRCapitalEvent } from \"../components\";\nimport {\n  calcWeightedAvg,\n  // calcVacancyRateAvg,\n  calcEquityMultiple,\n} from \"./Irr.logic\";\nimport { calculateIRRSchedule } from \"../components/IRRSchedule.logic\";\nimport { calcBalanceAtMaturity } from \"../calculators/MortgageDscr.logic\";\nimport { useStyles } from \"./Irr.styles\";\n\nexport function Irr({ storeSliceName, persist }) {\n  const dispatch = useDispatch();\n  const [showSchedule, setShowSchedule] = useState(false);\n  const dirty = useSelector((state) => state[storeSliceName].dirty);\n  const irrValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.IRR],\n    shallowEqual\n  );\n  const first_year_noi = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].first_year_noi\n  );\n  const annual_expenses = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].annual_expenses\n  );\n  const potential_annual_gross_income = useSelector(\n    (state) =>\n      state[storeSliceName][eCalcForms.CAP_RATE].potential_annual_gross_income\n  );\n  const vacancy_as_percent = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].vacancy_as_percent\n  );\n  const equity_needed = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CASH_ON_CASH].equity_needed\n  );\n  const { loan_amount_dollar, total_capitalization } = useSelector(\n    (state) => state[storeSliceName][eCalcForms.EQUITY_NEEDED]\n  );\n  const mortgageDscrValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.MORTGAGE_AND_DSCR],\n    shallowEqual\n  );\n  const mortgage_post_io = useSelector(\n    (state) => state[storeSliceName].resultsValues.mortgage_post_io,\n    shallowEqual\n  );\n  const mortgage_during_io = useSelector(\n    (state) => state[storeSliceName].resultsValues.mortgage_during_io,\n    shallowEqual\n  );\n\n  const { interest_rate, init_loan_term_yrs, io_years, amortization_years } =\n    mortgageDscrValues || {};\n\n  const IrrScheduleValues = useSelector(\n    (state) => state[storeSliceName].irrSchedule,\n    shallowEqual\n  );\n\n  const {\n    hasCapitalEvent,\n    capitalEventType,\n    capitalEventYear,\n    capitalEventInterestRate,\n    capitalEventAmortizationYears,\n    capitalEventLoanAmount,\n    capitalEventNetLoan,\n  } = useSelector(\n    (state) => state[storeSliceName].irrCapitalEvent,\n    shallowEqual\n  );\n\n  const {\n    holding_period_yrs,\n    projected_gross_income_rate,\n    stabilized_vacancy,\n    projected_annual_expense,\n    projected_cap_rate_at_sale,\n    projected_closing_costs_at_sale,\n    year_of_stabilization,\n  } = irrValues || {};\n\n  const {\n    pgi,\n    stabilized_vacancies,\n    expenses,\n    noi,\n    irr,\n    grand_total_distribution,\n    capitalEventGrandTotalDistFromSale,\n    capitalEventIRR,\n  } = IrrScheduleValues || {};\n\n  const capitalEventEligible = holding_period_yrs && holding_period_yrs > 1;\n  const classes = useStyles({ capitalEventEligible });\n\n  const [pgiWeightedAvg, setPgiWeightedAvg] = useState(\"\");\n  // const [vacancyAvg, setVacancyAvg] = useState(\"\");\n  const [expensesWeightedAvg, setExpensesWeightedAvg] = useState(\"\");\n  const [noiWeightedAvg, setNoiWeightedAvg] = useState(\"\");\n\n  const openSchedule = useCallback(() => {\n    mixpanel.track(\"ecalc_popup\", { popup: \"IRR Schedule\" });\n    setShowSchedule(true);\n  }, []);\n\n  useEffect(() => {\n    if (year_of_stabilization && holding_period_yrs < year_of_stabilization) {\n      dispatch(\n        eCalcOnChange({\n          calculator: eCalcForms.IRR,\n          name: \"year_of_stabilization\",\n          value: \"\",\n          persist,\n        })\n      );\n    }\n  }, [year_of_stabilization, holding_period_yrs, dispatch, persist]);\n\n  //needs to be in this order\n  useEffect(() => {\n    calculate({ pgi: [], stabilized_vacancies, expenses });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projected_gross_income_rate]);\n\n  useEffect(() => {\n    calculate({ pgi, stabilized_vacancies: [], expenses });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [stabilized_vacancy, year_of_stabilization]);\n\n  useEffect(() => {\n    calculate({ pgi, stabilized_vacancies, expenses: [] });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projected_annual_expense]);\n\n  useEffect(() => {\n    if (pgi.length && stabilized_vacancies.length && expenses.length) {\n      let pgiWeightedAvg = calcWeightedAvg(\n        pgi.map((p) => p.amount),\n        holding_period_yrs\n      );\n\n      // let vacancyAvg = calcVacancyRateAvg(stabilized_vacancies);\n\n      let expensesWeightedAvg = calcWeightedAvg(\n        expenses.map((e) => e.amount),\n        holding_period_yrs\n      );\n\n      setPgiWeightedAvg(pgiWeightedAvg);\n      // setVacancyAvg(vacancyAvg);\n      setExpensesWeightedAvg(expensesWeightedAvg);\n    }\n\n    let noiWeightedAvg = calcWeightedAvg(noi, holding_period_yrs);\n    setNoiWeightedAvg(noiWeightedAvg);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pgi, stabilized_vacancies, expenses]);\n\n  useEffect(() => {\n    calculate({ pgi, stabilized_vacancies, expenses });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    holding_period_yrs,\n    projected_cap_rate_at_sale,\n    projected_closing_costs_at_sale,\n    potential_annual_gross_income,\n    vacancy_as_percent,\n    annual_expenses,\n    io_years,\n    amortization_years,\n    equity_needed,\n    loan_amount_dollar,\n    interest_rate,\n    mortgage_post_io,\n    mortgage_during_io,\n    hasCapitalEvent,\n    capitalEventType,\n    capitalEventYear,\n    capitalEventInterestRate,\n    capitalEventAmortizationYears,\n    capitalEventLoanAmount,\n    capitalEventNetLoan,\n  ]);\n\n  function calculate({ pgi, stabilized_vacancies, expenses }) {\n    const mortgageBalance = calcBalanceAtMaturity({\n      loan_amount_dollar,\n      interest_rate,\n      amortization_years,\n      holding_period_yrs,\n      io_years,\n    });\n\n    const annual_mortgage_post_io =\n      mortgage_post_io &&\n      mortgage_post_io.results.find((m) => m.name === \"Annual\").value;\n    const annual_mortgage_during_io =\n      mortgage_during_io &&\n      mortgage_during_io.results.find((m) => m.name === \"Annual\").value;\n    const mortgage_balance_amount = mortgageBalance && mortgageBalance.results;\n\n    const result = calculateIRRSchedule({\n      holding_period_yrs,\n      projected_gross_income_rate,\n      stabilized_vacancy,\n      projected_annual_expense,\n      projected_cap_rate_at_sale,\n      projected_closing_costs_at_sale,\n      potential_annual_gross_income,\n      vacancy_as_percent,\n      annual_expenses,\n      io_years,\n      amortization_years,\n      mortgage_balance_amount,\n      annual_mortgage_post_io,\n      annual_mortgage_during_io,\n      equity_needed,\n      pgi,\n      stabilized_vacancies,\n      expenses,\n      year_of_stabilization,\n      total_capitalization,\n      hasCapitalEvent,\n      capitalEventType,\n      capitalEventYear,\n      capitalEventInterestRate,\n      capitalEventAmortizationYears,\n      capitalEventLoanAmount,\n      capitalEventNetLoan,\n    });\n    dispatch(irrScheduleChange(result, persist));\n  }\n\n  function handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    const name = target.name;\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.IRR,\n        name,\n        value: formatInput(name, value),\n        persist,\n      })\n    );\n    // need to know which calculator the user is entering for mobile slider\n    dispatch(setActiveCalculator({ name: \"irr\", persist }));\n    if (!dirty) {\n      dispatch(setIsDirty(persist));\n    }\n  }\n\n  const [showInputsMissingMsg, setShowInputsMissingMsg] = useState(false);\n\n  useEffect(() => {\n    if (\n      !first_year_noi ||\n      !equity_needed ||\n      !loan_amount_dollar ||\n      !interest_rate ||\n      !init_loan_term_yrs ||\n      !amortization_years\n    ) {\n      setShowInputsMissingMsg(true);\n    } else {\n      setShowInputsMissingMsg(false);\n    }\n  }, [\n    first_year_noi,\n    equity_needed,\n    loan_amount_dollar,\n    interest_rate,\n    init_loan_term_yrs,\n    amortization_years,\n  ]);\n\n  useEffect(() => {\n    if (showSchedule) {\n      dispatch(scheduleOpened(persist));\n    }\n  }, [showSchedule, dispatch, persist]);\n\n  useEffect(() => {\n    if (irr) {\n      if (capitalEventIRR) {\n        dispatch(\n          addResults({\n            name: \"irr\",\n            value: {\n              label: \"Internal Rate of Return\",\n              results: [\n                {\n                  name: \"With Capital Event\",\n                  value: capitalEventIRR,\n                  displayFormat: \"percent\",\n                },\n                {\n                  name: \"Without Capital Event\",\n                  value: irr,\n                  displayFormat: \"percent\",\n                },\n              ],\n              showIRRSchedule: true,\n            },\n            persist,\n          })\n        );\n      } else {\n        dispatch(\n          addResults({\n            name: \"irr\",\n            value: {\n              label: \"IRR\",\n              results: irr,\n              displayFormat: \"percent\",\n              showIRRSchedule: true,\n            },\n            persist,\n          })\n        );\n      }\n    } else {\n      dispatch(removeResults({ name: \"irr\", persist }));\n    }\n  }, [irr, capitalEventIRR, dispatch, persist]);\n\n  useEffect(() => {\n    if (grand_total_distribution && equity_needed) {\n      const GTD =\n        hasCapitalEvent && capitalEventGrandTotalDistFromSale\n          ? capitalEventGrandTotalDistFromSale\n          : grand_total_distribution;\n      const results = calcEquityMultiple({\n        grand_total_distribution: GTD,\n        equity_needed,\n      });\n\n      dispatch(\n        addResults({\n          name: \"equity_multiple\",\n          value: results,\n          persist,\n        })\n      );\n    } else {\n      dispatch(removeResults({ name: \"equity_multiple\", persist }));\n    }\n  }, [\n    grand_total_distribution,\n    hasCapitalEvent,\n    capitalEventGrandTotalDistFromSale,\n    equity_needed,\n    dispatch,\n    persist,\n  ]);\n\n  const isMobile = useMobile();\n\n  const toggleCapitalEvent = () => {\n    if (hasCapitalEvent) {\n      dispatch(clearIrrCapitalEvent(persist));\n    } else {\n      dispatch(\n        eCalcOnChange({\n          calculator: eCalcForms.IRR_CAPITAL_EVENT,\n          name: \"hasCapitalEvent\",\n          value: !hasCapitalEvent,\n          persist,\n        })\n      );\n    }\n  };\n\n  return (\n    <div className={classes.calcContainer} style={{ width: \"100%\" }}>\n      {showInputsMissingMsg && (\n        <MissingInputsMsg calculator=\"IRR\" persist={persist} />\n      )}\n      <TextField\n        select\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        style={{ width: \"100%\" }}\n        label=\"Holding Period in Years:\"\n        variant=\"outlined\"\n        value={holding_period_yrs}\n        onChange={handleInputChange}\n        name=\"holding_period_yrs\"\n        fullWidth\n        InputProps={{\n          classes: {\n            input: clsx(classes.inputOverride, classes.inputWithPadding),\n          },\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(classes.inputLabel, classes.fullWidthLabel),\n            shrink: \"fullInputShrink\",\n          },\n          shrink: true,\n        }}\n      >\n        {/* this is displaying weirdly */}\n        {numbers.map((num) => (\n          <MenuItem key={num} value={num}>\n            {num}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        inputProps={{ inputMode: \"decimal\" }}\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        style={{ width: \"100%\" }}\n        label={\n          <span>\n            Projected Annual {<strong>Potential Gross Income </strong>} Growth\n            Rate:\n          </span>\n        }\n        variant=\"outlined\"\n        value={\n          pgiWeightedAvg > 0 ? pgiWeightedAvg : projected_gross_income_rate\n        }\n        onChange={handleInputChange}\n        name=\"projected_gross_income_rate\"\n        InputProps={{\n          style: { marginTop: isMobile ? 30 : undefined },\n          classes: { input: classes.input },\n          endAdornment: (\n            <InputAdornment\n              position=\"start\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              %\n            </InputAdornment>\n          ),\n          startAdornment: (\n            <InputAdornment position=\"end\">\n              <ListIcon\n                onClick={openSchedule}\n                className={classes.listIcon}\n                style={{ marginRight: 15 }}\n              />\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(\n              classes.inputLabel,\n              classes.extraLongLabel,\n              // { [classes.extraLongLabel]: !isMobile },\n              // { [classes.longLabel]: isMobile },\n              classes.fullWidthLabel\n            ),\n            shrink: \"fullInputShrink\",\n          },\n        }}\n      />\n      <TextField\n        inputProps={{ inputMode: \"decimal\" }}\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        style={{ width: \"100%\" }}\n        label=\"Stabilized Vacancy:\"\n        variant=\"outlined\"\n        value={stabilized_vacancy}\n        // value={vacancyAvg > 0 ? vacancyAvg : stabilized_vacancy}\n        onChange={handleInputChange}\n        name=\"stabilized_vacancy\"\n        InputProps={{\n          classes: { input: classes.input },\n          endAdornment: (\n            <InputAdornment\n              position=\"start\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              %\n            </InputAdornment>\n          ),\n          startAdornment: (\n            <InputAdornment position=\"end\">\n              <ListIcon\n                onClick={openSchedule}\n                className={classes.listIcon}\n                style={{ marginRight: 15 }}\n              />\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(classes.inputLabel, classes.fullWidthLabel),\n            shrink: \"fullInputShrink\",\n          },\n        }}\n      />\n      <TextField\n        inputProps={{ inputMode: \"decimal\" }}\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        style={{ width: \"100%\" }}\n        label={\n          <span>\n            Projected Annual <strong>Expense</strong> Growth Rate:\n          </span>\n        }\n        variant=\"outlined\"\n        value={\n          expensesWeightedAvg > 0\n            ? expensesWeightedAvg\n            : projected_annual_expense\n        }\n        onChange={handleInputChange}\n        name=\"projected_annual_expense\"\n        InputProps={{\n          classes: { input: classes.input },\n          endAdornment: (\n            <InputAdornment\n              position=\"end\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              %\n            </InputAdornment>\n          ),\n          startAdornment: (\n            <InputAdornment position=\"end\">\n              <ListIcon\n                onClick={openSchedule}\n                className={classes.listIcon}\n                style={{ marginRight: 15 }}\n              />\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(\n              classes.inputLabel,\n              classes.oneLinerLongLabel,\n              classes.fullWidthLabel\n            ),\n            shrink: \"fullInputShrink\",\n          },\n        }}\n      />\n      <TextField\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label=\"Projected Annual NOI Growth Rate:\"\n        variant=\"outlined\"\n        value={noiWeightedAvg || \"\"}\n        onChange={() => {}}\n        name=\"projected_annual_noi_growth_rate\"\n        fullWidth\n        disabled\n        InputProps={{\n          classes: { input: classes.inputWithPadding },\n          endAdornment: (\n            <InputAdornment\n              position=\"end\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              %\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(\n              classes.inputLabel,\n              classes.oneLinerLongLabel,\n              classes.fullWidthLabel\n            ),\n            shrink: \"fullInputShrink\",\n          },\n          shrink: true,\n        }}\n      />\n      <TextField\n        inputProps={{ inputMode: \"decimal\" }}\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label=\"Projected Cap Rate at Sale:\"\n        variant=\"outlined\"\n        value={projected_cap_rate_at_sale}\n        onChange={handleInputChange}\n        name=\"projected_cap_rate_at_sale\"\n        fullWidth\n        InputProps={{\n          classes: { input: classes.inputWithPadding },\n          endAdornment: (\n            <InputAdornment\n              position=\"end\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              %\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(\n              classes.inputLabel,\n              classes.longLabel,\n              classes.fullWidthLabel\n            ),\n            shrink: \"fullInputShrink\",\n          },\n          shrink: true,\n        }}\n      />\n      <TextField\n        inputProps={{ inputMode: \"decimal\" }}\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        style={{ width: \"100%\" }}\n        label=\"Projected Closing Costs at Sale:\"\n        variant=\"outlined\"\n        value={projected_closing_costs_at_sale}\n        onChange={handleInputChange}\n        name=\"projected_closing_costs_at_sale\"\n        InputProps={{\n          classes: { input: classes.inputWithPadding },\n          endAdornment: (\n            <InputAdornment\n              position=\"end\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              %\n            </InputAdornment>\n          ),\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(\n              classes.inputLabel,\n              classes.longLabel,\n              classes.fullWidthLabel\n            ),\n            shrink: \"fullInputShrink\",\n          },\n          shrink: true,\n        }}\n      />\n      {holding_period_yrs && (\n        <TextField\n          select\n          className={clsx(classes.margin, classes.fullWidthInput)}\n          style={{ width: \"100%\" }}\n          label=\"Year of Stabilization:\"\n          variant=\"outlined\"\n          value={year_of_stabilization}\n          onChange={handleInputChange}\n          name=\"year_of_stabilization\"\n          fullWidth\n          InputProps={{\n            classes: {\n              input: clsx(\n                classes.inputOverride,\n                classes.mobileInputWithPadding\n              ),\n            },\n          }}\n          InputLabelProps={{\n            classes: {\n              root: clsx(classes.inputLabel, classes.fullWidthLabel),\n              shrink: \"fullInputShrink\",\n            },\n            shrink: true,\n          }}\n        >\n          {[...Array(+holding_period_yrs || 10)].map((_, i) => (\n            <MenuItem key={i} value={i + 1}>\n              {i + 1}\n            </MenuItem>\n          ))}\n        </TextField>\n      )}\n\n      <div\n        className={classes.capitalEvent}\n        onClick={capitalEventEligible ? toggleCapitalEvent : null}\n      >\n        {hasCapitalEvent ? \"Remove\" : \"Add\"} Capital Event before Sale\n      </div>\n\n      <IRRCapitalEvent storeSliceName={storeSliceName} persist={persist} />\n      {showSchedule && (\n        <IRRSchedule\n          onClose={() => setShowSchedule(false)}\n          calculate={calculate}\n          storeSliceName={storeSliceName}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction formatInput(name, value) {\n  switch (name) {\n    case \"projected_gross_income_rate\":\n    case \"stabilized_vacancy\":\n    case \"projected_annual_expense\":\n    case \"projected_closing_costs_at_sale\":\n    case \"projected_cap_rate_at_sale\":\n      let regexExp = new RegExp(\"^\\\\d*(\\\\.\\\\d{0,3})?$\");\n      if (!value.match(regexExp)) {\n        value = value.slice(0, -1);\n      }\n      return value;\n    default:\n      return value;\n  }\n}\n\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n","import { addResults, removeResults } from \"../../../actions/eCalcForms\";\nimport { Finance } from \"financejs\";\nconst finance = new Finance();\n\nconst calculateStats = (data, dispatch, persist) => {\n  const {\n    lpDollars,\n    gpDollars,\n    lpPercent,\n    gpPercent,\n    hurdles,\n    netCashFlow,\n    capitalEventNetCashFlow,\n  } = data;\n  const lpStats = [];\n  const gpStats = [];\n  const NCF = capitalEventNetCashFlow ? capitalEventNetCashFlow : netCashFlow;\n  const currentCashFlows = [...NCF.slice(0, -1).map((cf) => cf.amount)];\n  hurdles.forEach((hurdle, hurdleIndex) => {\n    let { endPercent, promotePercent } = hurdle;\n    endPercent = !endPercent ? 0 : divide(endPercent, 100);\n    if (!promotePercent) promotePercent = 0;\n    let lpBalance = +lpDollars;\n    let gpBalance = +gpDollars;\n    const lpAdjustedPercent = multiply(\n      1 - divide(promotePercent, 100),\n      divide(lpPercent, 100)\n    );\n    const gpAdjustedPercent = add(\n      divide(promotePercent, 100),\n      multiply(1 - divide(promotePercent, 100), divide(gpPercent, 100))\n    );\n    for (let i = 0; i < currentCashFlows.length; i++) {\n      let gpDistribution;\n      let lpDistribution;\n      if (hurdleIndex < hurdles.length - 1 && hurdles.length > 1) {\n        //////// LP INFO ////////\n        const lpRequiredRet = multiply(endPercent, lpBalance);\n        let firstEq = add(lpRequiredRet, lpBalance);\n        if (hurdleIndex > 0) firstEq = subtract(firstEq, lpStats[i]);\n        lpDistribution = Math.min(\n          firstEq,\n          multiply(lpAdjustedPercent, currentCashFlows[i])\n        );\n        lpBalance = subtract(\n          add(lpBalance, lpRequiredRet),\n          lpStats[i] ? lpStats[i] : 0,\n          lpDistribution\n        );\n        //////// GP INFO ///////\n        if (hurdleIndex === 0) {\n          /// get GP stats on first hurdle\n          const gpRequiredRet = multiply(endPercent, gpBalance);\n          gpDistribution = Math.min(\n            add(gpRequiredRet, gpBalance),\n            multiply(gpAdjustedPercent, currentCashFlows[i])\n          );\n          gpBalance = subtract(add(gpBalance, gpRequiredRet), gpDistribution);\n        } else {\n          gpDistribution = multiply(\n            divide(lpDistribution, lpAdjustedPercent),\n            gpAdjustedPercent\n          );\n        }\n      } else {\n        lpDistribution = multiply(currentCashFlows[i], lpAdjustedPercent);\n        gpDistribution = multiply(currentCashFlows[i], gpAdjustedPercent);\n      }\n      lpStats[i] = lpStats[i]\n        ? add(lpStats[i], lpDistribution)\n        : lpDistribution;\n      gpStats[i] = gpStats[i]\n        ? add(gpStats[i], gpDistribution)\n        : gpDistribution;\n      // update available cash\n      currentCashFlows[i] = subtract(\n        currentCashFlows[i],\n        lpDistribution,\n        gpDistribution\n      );\n    }\n  });\n  try {\n    const gpIrr = finance.IRR(-gpDollars, ...gpStats);\n    const lpIrr = finance.IRR(-lpDollars, ...lpStats);\n\n    const lpTotal = lpStats.reduce((a, b) => add(a, b));\n    const gpTotal = gpStats.reduce((a, b) => add(a, b));\n\n    dispatch(\n      addResults({\n        name: \"gp_stats\",\n        value: {\n          label: \"Sponsor (GP)\",\n          results: [\n            {\n              name: \"Total Contribution\",\n              value: gpDollars,\n              displayFormat: \"dollar\",\n            },\n            {\n              name: \"IRR\",\n              value: gpIrr,\n              displayFormat: \"percent\",\n            },\n            {\n              name: \"Total Distribution\",\n              value: gpTotal,\n              displayFormat: \"dollar\",\n            },\n          ],\n        },\n        persist,\n      })\n    );\n    dispatch(\n      addResults({\n        name: \"lp_stats\",\n        value: {\n          label: \"Sponsor (LP)\",\n          results: [\n            {\n              name: \"Total Contribution\",\n              value: lpDollars,\n              displayFormat: \"dollar\",\n            },\n            {\n              name: \"IRR\",\n              value: lpIrr,\n              displayFormat: \"percent\",\n            },\n            {\n              name: \"Total Distribution\",\n              value: lpTotal,\n              displayFormat: \"dollar\",\n            },\n          ],\n        },\n        persist,\n      })\n    );\n  } catch (error) {\n    dispatch(removeResults({ name: \"lp_stats\", persist }));\n    dispatch(removeResults({ name: \"gp_stats\", persist }));\n  }\n};\n\nexport { calculateStats };\n\nfunction add(num1, num2) {\n  return (+num1 * 10 + +num2 * 10) / 10;\n}\n\nfunction subtract(num1, num2, num3 = 0) {\n  return Number(((+num1 * 10 - +num2 * 10 - +num3 * 10) / 10).toFixed(8));\n}\n\nfunction multiply(num1, num2) {\n  return Number((+num1 * +num2).toFixed(8));\n}\n\nfunction divide(num1, num2) {\n  return Number((+num1 / +num2).toFixed(8));\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { calculatorInputs } from \"../sharedStyles\";\n\nexport const useStyles = makeStyles(theme => ({\n  ...calculatorInputs(theme)\n}));\n","import React, { useEffect, useState } from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport { eCalcForms } from \"../../../lib\";\nimport {\n  setIsDirty,\n  eCalcOnChange,\n  setActiveCalculator,\n  eCalcOnMultiChange,\n  removeResults,\n} from \"../../../actions/eCalcForms\";\nimport { useMobile } from \"../../../themes\";\nimport { MissingInputsMsg } from \"../components\";\nimport { calculateStats } from \"./EquityWaterfall.logic\";\nimport { useStyles } from \"./EquityWaterfall.styles\";\n\nexport function EquityWaterfall({ storeSliceName, persist }) {\n  const classes = useStyles();\n  const isMobile = useMobile();\n  const dispatch = useDispatch();\n\n  const dirty = useSelector((state) => state[storeSliceName].dirty);\n  const equityWaterfallState = useSelector((state) => {\n    const {\n      equityWaterfall,\n      cashOnCash: { equity_needed },\n      irrSchedule: { net_cash_flow = [], capitalEventNetCashFlow },\n    } = state[storeSliceName];\n    return {\n      ...equityWaterfall,\n      equityNeededDisplay: equity_needed,\n      netCashFlow: net_cash_flow,\n      capitalEventNetCashFlow,\n    };\n  }, shallowEqual);\n\n  let {\n    gpPercent,\n    lpPercent,\n    gpDollars,\n    lpDollars,\n    equityNeededDisplay,\n    netCashFlow,\n    hurdles,\n  } = equityWaterfallState;\n  const equityNeeded =\n    equityNeededDisplay && equityNeededDisplay !== \"0\"\n      ? formatDollarDisplay(equityNeededDisplay)\n      : 0;\n\n  const [showInputsMissingMsg, setShowInputsMissingMsg] = useState(false);\n  const [endPercentPlaceholder, setEndPercentPlaceholder] = useState(\n    \"Infinite\"\n  );\n\n  useEffect(() => {\n    if (equityNeeded && (gpPercent || lpPercent || gpDollars || lpDollars)) {\n      lpPercent\n        ? calculateFromLpPercent(lpPercent)\n        : gpPercent\n        ? calculateFromGpPercent(gpPercent)\n        : lpDollars\n        ? calculateFromLpDollars(lpDollars)\n        : calculateFromGpDollars(gpDollars);\n    }\n    if (!equityNeeded) {\n      dispatchMultiChange({ lpDollars: \"\", gpDollars: \"\" }, persist);\n      dispatch(removeResults({ name: \"lp_stats\", persist }));\n      dispatch(removeResults({ name: \"gp_stats\", persist }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [equityNeeded]);\n\n  useEffect(() => {\n    if (\n      equityNeeded &&\n      netCashFlow.length &&\n      gpPercent &&\n      lpPercent &&\n      gpDollars &&\n      lpDollars &&\n      hurdles.length\n    ) {\n      calculateStats(equityWaterfallState, dispatch, persist);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    equityNeeded,\n    gpPercent,\n    lpPercent,\n    gpDollars,\n    lpDollars,\n    hurdles,\n    netCashFlow,\n    persist,\n  ]);\n\n  useEffect(() => {\n    if (!equityNeeded || !netCashFlow) {\n      setShowInputsMissingMsg(true);\n    } else {\n      setShowInputsMissingMsg(false);\n    }\n  }, [equityNeeded, netCashFlow]);\n\n  function calculateFromGpPercent(gpPercent) {\n    const gpDollars = getDollars(gpPercent);\n    dispatchMultiChange(\n      {\n        gpPercent,\n        gpDollars,\n        lpDollars: formatDollarDisplay(subtract(equityNeeded, gpDollars)),\n        lpPercent: formatValue(subtract(100, gpPercent)),\n      },\n      persist\n    );\n  }\n\n  function calculateFromLpPercent(lpPercent) {\n    const lpDollars = getDollars(lpPercent);\n    dispatchMultiChange(\n      {\n        lpPercent,\n        lpDollars,\n        gpDollars: formatDollarDisplay(subtract(equityNeeded, lpDollars)),\n        gpPercent: formatValue(subtract(100, lpPercent)),\n      },\n      persist\n    );\n  }\n\n  function calculateFromGpDollars(gpDollars) {\n    const gpPercent = getPercent(gpDollars);\n    dispatchMultiChange(\n      {\n        gpDollars,\n        lpDollars: formatDollarDisplay(subtract(equityNeeded, gpDollars)),\n        gpPercent,\n        lpPercent: formatValue(subtract(100, gpPercent)),\n      },\n      persist\n    );\n  }\n\n  function calculateFromLpDollars(lpDollars) {\n    const lpPercent = getPercent(lpDollars);\n    dispatchMultiChange(\n      {\n        lpDollars,\n        gpDollars: formatDollarDisplay(subtract(equityNeeded, lpDollars)),\n        lpPercent,\n        gpPercent: formatValue(subtract(100, lpPercent)),\n      },\n      persist\n    );\n  }\n\n  function dispatchMultiChange(valuesObj, persist) {\n    dispatch(\n      eCalcOnMultiChange({\n        calculator: eCalcForms.EQUITY_WATERFALL,\n        valuesObj,\n        persist,\n      })\n    );\n  }\n\n  function getPercent(dollars) {\n    return ((+dollars * 100) / +equityNeeded).toFixed(2);\n  }\n\n  function getDollars(percent) {\n    return formatDollarDisplay((+percent / 100) * +equityNeeded);\n  }\n\n  function subtract(bigNum, smallNum) {\n    const bigNumInt = +bigNum * 100;\n    const smallNumInt = +smallNum * 100;\n    return (bigNumInt - smallNumInt) / 100;\n  }\n\n  function handleChange(e) {\n    const { name, value: rawValue } = e.target;\n    const value = formatValue(rawValue);\n    switch (name) {\n      case \"lpPercent\":\n        calculateFromLpPercent(value);\n        break;\n      case \"gpPercent\":\n        calculateFromGpPercent(value);\n        break;\n      case \"lpDollars\":\n        calculateFromLpDollars(value);\n        break;\n      case \"gpDollars\":\n        calculateFromGpDollars(value);\n        break;\n      default:\n        break;\n    }\n    dispatch(setActiveCalculator({ name: \"equityWaterfall\", persist }));\n    if (!dirty) {\n      dispatch(setIsDirty(persist));\n    }\n  }\n\n  function handleHurdleChange(e, index) {\n    const { name, value: rawValue } = e.target;\n    const value = formatValue(rawValue);\n    const emptyHurdle = {\n      startPercent: value,\n      endPercent: \"\",\n      promotePercent: \"\",\n    };\n    let hurdlesC = [...hurdles];\n\n    if (name === \"endPercent\") {\n      // if changing one of middle percents, remove later hurdles\n      // TODO: find out if this is the desired behaviour\n      if (hurdles.length - 1 !== index) {\n        hurdlesC = hurdles.slice(0, index + 1);\n        if (value) {\n          setEndPercentPlaceholder(\"Infinite\");\n          hurdlesC.push(emptyHurdle);\n        } else {\n          setEndPercentPlaceholder(\"\");\n        }\n      } else {\n        setEndPercentPlaceholder(\"Infinite\");\n        hurdlesC.push(emptyHurdle);\n      }\n    }\n\n    hurdlesC[index][name] = value;\n    dispatch(\n      eCalcOnChange({\n        calculator: eCalcForms.EQUITY_WATERFALL,\n        name: \"hurdles\",\n        value: hurdlesC,\n      })\n    );\n    dispatch(setActiveCalculator({ name: \"equityWaterfall\", persist }));\n  }\n\n  return (\n    <div className={classes.calcContainer}>\n      {showInputsMissingMsg && (\n        <MissingInputsMsg calculator=\"Equity Waterfall\" persist={persist} />\n      )}\n      <TextField\n        className={clsx(classes.margin, classes.fullWidthInput)}\n        label=\"Total Equity Needed:\"\n        variant=\"outlined\"\n        value={equityNeededDisplay}\n        onChange={() => {}}\n        fullWidth\n        disabled\n        InputProps={{\n          startAdornment: (\n            <InputAdornment\n              position=\"end\"\n              classes={{ root: classes.inputAdornment }}\n            >\n              $\n            </InputAdornment>\n          ),\n          classes: { input: classes.inputWithPadding },\n        }}\n        InputLabelProps={{\n          classes: {\n            root: clsx(classes.inputLabel),\n            shrink: \"shrink\",\n          },\n          shrink: true,\n        }}\n      />\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          inputProps={{ inputMode: \"decimal\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Sponsor (GP) Contribution %:\"\n          variant=\"outlined\"\n          value={gpPercent}\n          onChange={handleChange}\n          name=\"gpPercent\"\n          error={gpPercent > 100}\n          helperText={\n            gpPercent > 100 ? \"Value may not be greater then 100\" : \"\"\n          }\n          InputProps={{\n            classes: {\n              root: clsx({ [classes.wrappedLabelMargin]: isMobile }),\n              input: classes.inputWithPadding,\n            },\n            endAdornment: (\n              <InputAdornment\n                position=\"end\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                %\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: {\n              root: clsx(classes.inputLabel, {\n                [classes.longLabel]: !isMobile,\n              }),\n              shrink: \"shrink\",\n            },\n            shrink: true,\n          }}\n        />\n        <span\n          className={clsx(\n            classes.inputsDivider,\n            classes.mobileMultilineLabelInputsDivider\n          )}\n        />\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Sponsor (GP) Contribution $:\"\n          variant=\"outlined\"\n          value={numberWithCommas(gpDollars)}\n          onChange={handleChange}\n          name=\"gpDollars\"\n          InputProps={{\n            classes: {\n              root: clsx({ [classes.wrappedLabelMargin]: isMobile }),\n              input: classes.input,\n            },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: {\n              root: clsx(classes.inputLabel, {\n                [classes.longLabel]: !isMobile,\n              }),\n              shrink: \"shrink\",\n            },\n          }}\n        />\n      </div>\n      <div className={classes.lineInputsContainer}>\n        <TextField\n          inputProps={{ inputMode: \"decimal\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Investor (LP) Contribution %:\"\n          variant=\"outlined\"\n          value={lpPercent}\n          onChange={handleChange}\n          name=\"lpPercent\"\n          error={lpPercent > 100}\n          helperText={\n            lpPercent > 100 ? \"Value may not be greater then 100\" : \"\"\n          }\n          InputProps={{\n            classes: {\n              root: clsx({ [classes.wrappedLabelMargin]: isMobile }),\n              input: classes.inputWithPadding,\n            },\n            endAdornment: (\n              <InputAdornment\n                position=\"end\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                %\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: {\n              root: clsx(classes.inputLabel, {\n                [classes.longLabel]: !isMobile,\n              }),\n              shrink: \"shrink\",\n            },\n            shrink: true,\n          }}\n        />\n        <span\n          className={clsx(\n            classes.inputsDivider,\n            classes.mobileMultilineLabelInputsDivider\n          )}\n        />\n        <TextField\n          inputProps={{ inputMode: \"numeric\", pattern: \"[0-9]*\" }}\n          className={clsx(classes.margin, classes.smallInput)}\n          label=\"Investor (LP) Contribution $:\"\n          variant=\"outlined\"\n          value={numberWithCommas(lpDollars)}\n          onChange={handleChange}\n          name=\"lpDollars\"\n          InputProps={{\n            classes: {\n              root: clsx({ [classes.wrappedLabelMargin]: isMobile }),\n              input: classes.input,\n            },\n            startAdornment: (\n              <InputAdornment\n                position=\"start\"\n                classes={{ root: classes.inputAdornment }}\n              >\n                $\n              </InputAdornment>\n            ),\n          }}\n          InputLabelProps={{\n            classes: {\n              root: clsx(classes.inputLabel, {\n                [classes.longLabel]: !isMobile,\n              }),\n              shrink: \"shrink\",\n            },\n          }}\n        />\n      </div>\n\n      {hurdles.map((h, index) => {\n        const { startPercent, endPercent, promotePercent } = h;\n        return (\n          <div key={index}>\n            <div className={classes.hurdleTitle}>{`Hurdle ${index + 1}`}</div>\n            <div\n              className={classes.lineInputsContainer}\n              style={{ alignItems: \"flex-start\" }}\n            >\n              <TextField\n                className={clsx(classes.margin, classes.smallInput)}\n                label=\"Return From:\"\n                variant=\"outlined\"\n                value={startPercent}\n                onChange={() => {}}\n                disabled\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment\n                      position=\"end\"\n                      classes={{ root: classes.inputAdornment }}\n                    >\n                      %\n                    </InputAdornment>\n                  ),\n                  classes: { input: classes.inputWithPadding },\n                }}\n                InputLabelProps={{\n                  classes: {\n                    root: clsx(classes.inputLabel),\n                    shrink: \"shrink\",\n                  },\n                  shrink: true,\n                }}\n              />\n              <span className={classes.inputsDivider} style={{ height: 0 }} />\n              <TextField\n                inputProps={{ inputMode: \"decimal\" }}\n                className={clsx(classes.margin, classes.smallInput)}\n                label=\"Return Up To:\"\n                variant=\"outlined\"\n                value={endPercent}\n                onChange={(e) => handleHurdleChange(e, index)}\n                name=\"endPercent\"\n                placeholder={endPercentPlaceholder}\n                onBlur={() =>\n                  hurdles.length - 1 === index\n                    ? setEndPercentPlaceholder(\"Infinite\")\n                    : null\n                }\n                onFocus={() =>\n                  hurdles.length - 1 === index\n                    ? setEndPercentPlaceholder(\"\")\n                    : null\n                }\n                error={Boolean(\n                  endPercent &&\n                    parseFloat(endPercent) < parseFloat(startPercent)\n                )}\n                helperText={\n                  endPercent &&\n                  parseFloat(endPercent) < parseFloat(startPercent)\n                    ? \"Value must be greater than Return From\"\n                    : \"\"\n                }\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment\n                      position=\"end\"\n                      classes={{ root: classes.inputAdornment }}\n                    >\n                      %\n                    </InputAdornment>\n                  ),\n                  classes: { input: classes.inputWithPadding },\n                }}\n                InputLabelProps={{\n                  classes: {\n                    root: clsx(classes.inputLabel),\n                    shrink: \"shrink\",\n                  },\n                  shrink: true,\n                }}\n              />\n            </div>\n            <TextField\n              inputProps={{ inputMode: \"decimal\" }}\n              className={clsx(classes.margin, classes.fullWidthInput)}\n              label=\"Promote to Sponsor (GP):\"\n              variant=\"outlined\"\n              value={promotePercent}\n              onChange={(e) => handleHurdleChange(e, index)}\n              name=\"promotePercent\"\n              fullWidth\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment\n                    position=\"end\"\n                    classes={{ root: classes.inputAdornment }}\n                  >\n                    %\n                  </InputAdornment>\n                ),\n                classes: { input: classes.inputWithPadding },\n              }}\n              InputLabelProps={{\n                classes: {\n                  root: clsx(\n                    classes.inputLabel,\n                    classes.fullWidthLabel,\n                    classes.longLabel\n                  ),\n                  shrink: \"fullInputShrink\",\n                },\n                shrink: true,\n              }}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction formatValue(value) {\n  let formatted = `${value}`.replace(/[^0-9.]/g, \"\");\n  const decIndex = formatted.indexOf(\".\");\n  if (decIndex > -1) {\n    formatted = formatted.replace(/(\\.[^.]*)\\./g, \"$1\").slice(0, decIndex + 3);\n  }\n  return formatted;\n}\n\nfunction formatDollarDisplay(value) {\n  let formatted = `${value}`.replace(/[^0-9.]/g, \"\");\n  const decIndex = formatted.indexOf(\".\");\n  if (decIndex > -1) {\n    formatted = `${formatted}00`;\n    formatted = formatted.slice(0, decIndex + 3);\n  }\n  return formatted;\n}\n\nfunction numberWithCommas(num) {\n  return `${num}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { ECALC_LARGE_SCREEN } from \"../../lib\";\n\nexport const useStyles = makeStyles((theme) => ({\n  sideResults: {\n    fontFamily: \"Karla\",\n    top: 130,\n    right: 115,\n    width: 424,\n    maxWidth: (props) => (props.isMobileResults ? \"initial\" : \"22%\"),\n    position: \"fixed\",\n    background: \"#00112B\",\n    borderRadius: 5,\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxHeight: (props) =>\n      props.isMobileResults\n        ? \"initial\"\n        : props.showSideRates\n        ? \"calc(100vh - 150px)\"\n        : \"calc(100vh - 295px)\",\n    overflowY: \"auto\",\n    zIndex: 1,\n    // hide scroll bar https://stackoverflow.com/a/49278385\n    scrollbarWidth: \"none\" /* Firefox */,\n    msOverflowStyle: \"none\" /* Internet Explorer 10+ */,\n    /* WebKit (Chrome) */\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      right: 85,\n      width: 299,\n    },\n  },\n  sideResultsDealDetails: {\n    top: 200,\n  },\n  mobileResultsPage: {\n    fontFamily: \"Karla\",\n    position: \"relative\",\n    maxHeight: \"initial\",\n    height: \"100%\",\n    top: \"initial\",\n    right: \"initial\",\n    width: \"100%\",\n    paddingTop: 20,\n  },\n  resultsTitle: {\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 22,\n    color: \"#FFFFFF\",\n    padding: 16,\n    paddingBottom: 0,\n  },\n  tabFlex: {\n    justifyContent: \"flex-start\",\n    paddingLeft: 18,\n  },\n  tabRoot: {\n    maxHeight: 38,\n    minHeight: \"38px !important\",\n  },\n  resultsTab: {\n    minWidth: 78.49,\n    width: 78.49,\n    color: \"#FFFFFF\",\n    opacity: 0.5,\n    fontSize: 15,\n  },\n  resultsTabActive: {\n    fontSize: 15,\n    color: \"#FFFFFF\",\n  },\n  resultsList: {\n    justifyContent: \"space-between\",\n    paddingLeft: 16,\n    paddingRight: 16,\n  },\n  listContainer: {\n    maxHeight: 645,\n    overflowY: \"auto\",\n    // hide scroll bar https://stackoverflow.com/a/49278385\n    scrollbarWidth: \"none\" /* Firefox */,\n    msOverflowStyle: \"none\" /* Internet Explorer 10+ */,\n    /* WebKit (Chrome) */\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  resultsKeys: {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: 16,\n    color: \"#FFFFFF\",\n    opacity: 0.7,\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 15,\n    },\n  },\n  resultsValues: {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: 20.2854,\n    color: \"#10B8C7\",\n    fontFamily: \"Roboto Condensed\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 18,\n    },\n  },\n  resultDivider: {\n    opacity: 0.2,\n    background: \"#FFFFFF\",\n    marginBottom: 13,\n  },\n  resultsSectionContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"100%\",\n    position: \"relative\",\n    boxSizing: \"border-box\",\n    textAlign: \"left\",\n    paddingTop: 8,\n    paddingBottom: 8,\n    padding: \"8px 18px 8px 18px\",\n  },\n  resultsSectionListItem: {\n    ...flex,\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n  resultsSectionTitle: {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: 18,\n    textTransform: \"uppercase\",\n    color: \"#FFFFFF\",\n    opacity: 0.9,\n    [theme.breakpoints.down(\"xs\")]: {\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n    },\n  },\n  resultsSectionLink: {\n    fontSize: 14.6506,\n    textDecorationLine: \"underline\",\n    color: \"#FFFFFF\",\n    opacity: 0.7,\n    cursor: \"pointer\",\n  },\n  resultsSettingsIcon: {\n    fontWeight: 300,\n    fontSize: 14.3713,\n    color: \"#FFFFFF\",\n    opacity: 0.7,\n    position: \"absolute\",\n    top: 0,\n    right: 15,\n    cursor: \"pointer\",\n  },\n  brokerContainer: {\n    height: 175,\n    width: \"100%\",\n    background: \"inherit\",\n    position: \"relative\",\n    marginBottom: 15,\n  },\n  broker: {\n    position: \"absolute\",\n    bottom: 0,\n    width: \"89%\",\n    height: 165,\n    background: \"#FFFFFF\",\n    boxShadow: \"0px 0px 15px rgba(0, 0, 0, 0.14)\",\n    borderRadius: 5.28568,\n    right: 22,\n  },\n  noResultsContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: 150,\n  },\n  subTitle: {\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 37,\n    letterSpacing: \"-0.04em\",\n    color: \"#00112B\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 18,\n      color: \"#FFFFFF\",\n    },\n  },\n  thirdTitle: {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: 24,\n    color: \"#00112B\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 16,\n      color: \"#FFFFFF\",\n      opacity: 0.6,\n    },\n  },\n  noResultsSmallText: {\n    fontSize: 13,\n    color: \"#FFFFFF\",\n    opacity: 0.3,\n    padding: \"0px 10px 0px 10px\",\n  },\n  noResults: {\n    color: \"#FFFFFF\",\n    background: \"rgba(255, 255, 255, 0.2)\",\n    borderRadius: 5,\n    padding: \"3px 15px\",\n    marginBottom: 15,\n    marginTop: 10,\n  },\n  threeDotsContainer: {\n    ...flex,\n    // justifyContent: \"space-between\",\n    justifyContent: \"space-around\",\n    padding: \"0px 10px 0px 10px\",\n  },\n  threeDots: {\n    color: \"#FFFFFF\",\n    fontSize: 20,\n  },\n  summaryText: {\n    color: \"#FFFFFF\",\n    fontFamily: \"Roboto Condensed\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: 20,\n    padding: \"20px 28px\",\n    lineHeight: \"175.4%\",\n  },\n  summaryResultValue: {\n    color: \"#10B8C7\",\n  },\n}));\n\nconst flex = {\n  display: \"flex\",\n  alignItems: \"center\",\n};\n","import React, { useState, Fragment, useCallback } from \"react\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport clsx from \"clsx\";\nimport {\n  useMediaQuery,\n  List,\n  ListItem,\n  Divider,\n  Tab,\n  Tabs,\n} from \"@material-ui/core\";\nimport { SettingsOutlinedIcon /*, MoreHoriz, CloseIcon */ } from \"../../themes\";\nimport {\n  useEcalcResults,\n  MaxBankWillLend,\n  IRRSchedule,\n  AmortizationScheduleModal,\n} from \"./components\";\nimport { formatDollar } from \"./helpers\";\nimport { eCalcForms, ECALC_SHOW_SIDE_RATES } from \"../../lib\";\nimport { irrScheduleChange } from \"../../actions/eCalcForms\";\nimport { calculateIRRSchedule } from \"./components/IRRSchedule.logic\";\nimport { calcBalanceAtMaturity } from \"./calculators/MortgageDscr.logic\";\nimport { DebtYieldModal } from \"./components/DebtYieldModal\";\nimport { useStyles } from \"./results.styles\";\nimport mixpanel from \"mixpanel-browser\";\n\nexport function SideResults({\n  isMobileResults,\n  setShowMobileResultsPage,\n  storeSliceName,\n  isDealDetails,\n  persist,\n}) {\n  const showSideRates = useMediaQuery(ECALC_SHOW_SIDE_RATES);\n  const classes = useStyles({ showSideRates, isMobileResults, isDealDetails });\n  const [page, setPage] = useState(0);\n\n  const handlePageTabs = useCallback((event, newValue) => {\n    mixpanel.track(\n      newValue === 0\n        ? \"Summary Tab on Results Clicked\"\n        : \"Number Tab on Results Clicked\"\n    );\n    setPage(newValue);\n  }, []);\n\n  return (\n    <div\n      className={clsx(classes.sideResults, {\n        [classes.sideResultsDealDetails]: isDealDetails,\n        [classes.mobileResultsPage]: isMobileResults,\n      })}\n    >\n      {!isMobileResults ? (\n        <div className={classes.resultsTitle}>Results</div>\n      ) : (\n        <div className={classes.threeDotsContainer}>\n          <div className={classes.subTitle}>eCALC Results</div>\n          {/* <MoreHoriz className={classes.threeDots} /> */}\n        </div>\n      )}\n      <Tabs\n        value={page}\n        onChange={handlePageTabs}\n        TabIndicatorProps={{\n          style: { color: \"#10B8C7\", height: 1.10549 },\n        }}\n        classes={{ flexContainer: classes.tabFlex, root: classes.tabRoot }}\n      >\n        <Tab\n          label=\"summary\"\n          classes={{\n            root: classes.resultsTab,\n            selected: classes.resultsTabActive,\n          }}\n        />\n        <Tab\n          label=\"Numbers\"\n          classes={{\n            root: classes.resultsTab,\n            selected: classes.resultsTabActive,\n          }}\n          style={{ marginLeft: 30 }}\n        />\n      </Tabs>\n      {page === 0 && <SummaryView storeSliceName={storeSliceName} />}\n      {page === 1 && (\n        <NumbersView\n          storeSliceName={storeSliceName}\n          isDealDetails={isDealDetails}\n          persist={persist}\n        />\n      )}\n      {/* <BrokerComponent /> */}\n    </div>\n  );\n}\n\nexport function NumbersView({ storeSliceName, isDealDetails, persist }) {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { resultsCount, resultsValues } = useEcalcResults(storeSliceName);\n\n  const hasResults = !!resultsCount > 0;\n\n  const [showMaxBank, setShowMaxBank] = useState(false);\n  const [showIRRScheduleModal, setShowIRRScheduleModal] = useState(false);\n  const [showDebtYieldModal, setShowDebtYieldModal] = useState(false);\n  const [\n    showAmortizationScheduleModal,\n    setShowAmortizationScheduleModal,\n  ] = useState(false);\n\n  const irrValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.IRR],\n    shallowEqual\n  );\n  const annual_expenses = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].annual_expenses\n  );\n  const potential_annual_gross_income = useSelector(\n    (state) =>\n      state[storeSliceName][eCalcForms.CAP_RATE].potential_annual_gross_income\n  );\n  const vacancy_as_percent = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].vacancy_as_percent\n  );\n  const equity_needed = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CASH_ON_CASH].equity_needed\n  );\n  const { loan_amount_dollar, total_capitalization } = useSelector(\n    (state) => state[storeSliceName][eCalcForms.EQUITY_NEEDED]\n  );\n  const mortgageDscrValues = useSelector(\n    (state) => state[storeSliceName][eCalcForms.MORTGAGE_AND_DSCR],\n    shallowEqual\n  );\n  const mortgage_post_io = useSelector(\n    (state) => state[storeSliceName].resultsValues.mortgage_post_io,\n    shallowEqual\n  );\n  const mortgage_during_io = useSelector(\n    (state) => state[storeSliceName].resultsValues.mortgage_during_io,\n    shallowEqual\n  );\n\n  const { interest_rate, io_years, amortization_years } =\n    mortgageDscrValues || {};\n\n  const IrrScheduleValues = useSelector(\n    (state) => state[storeSliceName].irrSchedule,\n    shallowEqual\n  );\n\n  const {\n    hasCapitalEvent,\n    capitalEventType,\n    capitalEventYear,\n    capitalEventInterestRate,\n    capitalEventAmortizationYears,\n    capitalEventLoanAmount,\n    capitalEventNetLoan,\n  } = useSelector(\n    (state) => state[storeSliceName].irrCapitalEvent,\n    shallowEqual\n  );\n\n  const {\n    holding_period_yrs,\n    projected_gross_income_rate,\n    stabilized_vacancy,\n    projected_annual_expense,\n    projected_cap_rate_at_sale,\n    projected_closing_costs_at_sale,\n    year_of_stabilization,\n  } = irrValues || {};\n\n  const { pgi, stabilized_vacancies, expenses } = IrrScheduleValues || {};\n\n  function calculate() {\n    const mortgageBalance = calcBalanceAtMaturity({\n      loan_amount_dollar,\n      interest_rate,\n      amortization_years,\n      holding_period_yrs,\n      io_years,\n    });\n\n    const annual_mortgage_post_io =\n      mortgage_post_io &&\n      mortgage_post_io.results.find((m) => m.name === \"Annual\").value;\n    const annual_mortgage_during_io =\n      mortgage_during_io &&\n      mortgage_during_io.results.find((m) => m.name === \"Annual\").value;\n    const mortgage_balance_amount = mortgageBalance && mortgageBalance.results;\n\n    const result = calculateIRRSchedule({\n      holding_period_yrs,\n      projected_gross_income_rate,\n      stabilized_vacancy,\n      projected_annual_expense,\n      projected_cap_rate_at_sale,\n      projected_closing_costs_at_sale,\n      potential_annual_gross_income,\n      vacancy_as_percent,\n      annual_expenses,\n      io_years,\n      amortization_years,\n      mortgage_balance_amount,\n      annual_mortgage_post_io,\n      annual_mortgage_during_io,\n      equity_needed,\n      pgi,\n      stabilized_vacancies,\n      expenses,\n      year_of_stabilization,\n      total_capitalization,\n      hasCapitalEvent,\n      capitalEventType,\n      capitalEventYear,\n      capitalEventInterestRate,\n      capitalEventAmortizationYears,\n      capitalEventLoanAmount,\n      capitalEventNetLoan,\n    });\n    dispatch(irrScheduleChange(result, persist));\n  }\n\n  return (\n    <div className={classes.listContainer}>\n      {hasResults && !!Object.keys(resultsValues).length ? (\n        <List>\n          {Object.keys(resultsValues).map((key) => {\n            const {\n              label,\n              results,\n              displayFormat,\n              showMaxLoan,\n              showAmortizationSchedule,\n              showIRRSchedule,\n              showDebtYield,\n            } = resultsValues[key] || {};\n            if (!!results || results >= 0) {\n              return Array.isArray(results) ? (\n                <Fragment key={key}>\n                  <ListItem\n                    alignItems=\"center\"\n                    className={classes.resultsSectionContainer}\n                  >\n                    {!!showMaxLoan && (\n                      <SettingsOutlinedIcon\n                        className={classes.resultsSettingsIcon}\n                        style={{ top: 20 }}\n                        onClick={() => {\n                          mixpanel.track(\"Max frm Dscr Modal Opened\");\n                          setShowMaxBank(true);\n                        }}\n                      />\n                    )}\n\n                    {!!showIRRSchedule && (\n                      <SettingsOutlinedIcon\n                        className={classes.resultsSettingsIcon}\n                        style={{ top: 20 }}\n                        onClick={() => setShowIRRScheduleModal(true)}\n                      />\n                    )}\n\n                    {!!showDebtYield && (\n                      <SettingsOutlinedIcon\n                        className={classes.resultsSettingsIcon}\n                        style={{ top: 20 }}\n                        onClick={() => {\n                          mixpanel.track(\"Debt Yield Modal Opened\");\n                          setShowDebtYieldModal(true);\n                        }}\n                      />\n                    )}\n\n                    <div\n                      className={classes.resultsSectionListItem}\n                      style={{ marginBottom: 7 }}\n                    >\n                      <span className={classes.resultsSectionTitle}>\n                        {label}\n                      </span>\n                      {showAmortizationSchedule && (\n                        <span\n                          className={classes.resultsSectionLink}\n                          onClick={() => {\n                            mixpanel.track(\"amortization modal opened\");\n                            setShowAmortizationScheduleModal(true);\n                          }}\n                        >\n                          View Schedule\n                        </span>\n                      )}\n                    </div>\n                    {results.map((result, index) => {\n                      const {\n                        name,\n                        value,\n                        displayFormat: resultsDisplayFormat,\n                      } = result || {};\n                      return (\n                        <div\n                          className={classes.resultsSectionListItem}\n                          key={index}\n                        >\n                          <span className={classes.resultsKeys}>{name}</span>\n                          <span className={classes.resultsValues}>\n                            {formatDisplay(value, resultsDisplayFormat)}\n                          </span>\n                        </div>\n                      );\n                    })}\n                  </ListItem>\n                  <Divider className={classes.resultDivider} />\n                </Fragment>\n              ) : (\n                <Fragment key={key}>\n                  <ListItem\n                    alignItems=\"center\"\n                    className={classes.resultsList}\n                    style={{\n                      paddingTop:\n                        showMaxLoan || showIRRSchedule || showDebtYield\n                          ? 15\n                          : undefined,\n                    }}\n                  >\n                    {!!showMaxLoan && (\n                      <SettingsOutlinedIcon\n                        className={classes.resultsSettingsIcon}\n                        onClick={() => {\n                          mixpanel.track(\"Max frm Dscr Modal Opened\");\n                          setShowMaxBank(true);\n                        }}\n                      />\n                    )}\n\n                    {!!showIRRSchedule && (\n                      <SettingsOutlinedIcon\n                        className={classes.resultsSettingsIcon}\n                        onClick={() => setShowIRRScheduleModal(true)}\n                      />\n                    )}\n                    {!!showDebtYield && (\n                      <SettingsOutlinedIcon\n                        className={classes.resultsSettingsIcon}\n                        onClick={() => {\n                          mixpanel.track(\"Debt Yield Modal Opened\");\n                          setShowDebtYieldModal(true);\n                        }}\n                      />\n                    )}\n                    <span className={classes.resultsKeys}>{label}:</span>\n                    <span className={classes.resultsValues}>\n                      {formatDisplay(results, displayFormat)}\n                    </span>\n                  </ListItem>\n                  <Divider className={classes.resultDivider} />\n                </Fragment>\n              );\n            } else return null;\n          })}\n        </List>\n      ) : (\n        <div className={classes.noResultsContainer}>\n          {/* <div className={classes.threeDotsContainer}>\n            <span /> for spacing\n            <div className={classes.subTitle} style={{ marginLeft: 15 }}>\n              The E Calculator\n            </div>\n          </div> */}\n          <div className={classes.noResults}>No Results Yet</div>\n          <div className={classes.noResultsSmallText}>\n            Calculation results will show as you enter the fields.\n          </div>\n        </div>\n      )}\n      {showMaxBank && (\n        <MaxBankWillLend\n          open={showMaxBank}\n          handleClose={() => setShowMaxBank(false)}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n      )}\n\n      {showIRRScheduleModal && (\n        <IRRSchedule\n          onClose={() => setShowIRRScheduleModal(false)}\n          calculate={calculate}\n          storeSliceName={storeSliceName}\n        />\n      )}\n      {showDebtYieldModal && (\n        <DebtYieldModal\n          open={showDebtYieldModal}\n          handleClose={() => setShowDebtYieldModal(false)}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n      )}\n      {showAmortizationScheduleModal && (\n        <AmortizationScheduleModal\n          open={showAmortizationScheduleModal}\n          onClose={() => setShowAmortizationScheduleModal(false)}\n          storeSliceName={storeSliceName}\n        />\n      )}\n    </div>\n  );\n}\n\nexport function SummaryView({ storeSliceName }) {\n  const classes = useStyles();\n  const { resultsCount, resultsValues, resultsSummary } = useEcalcResults(\n    storeSliceName\n  );\n\n  const hasResults = !!resultsCount > 0;\n\n  const renderSummaryResult = (\n    { summary, results, displayFormat: resultsDisplayFormat },\n    index\n  ) => {\n    if (results !== \"\" && (!!results || results >= 0)) {\n      return (\n        <Fragment key={index}>\n          <span\n            style={{\n              opacity: 0.8,\n            }}\n          >\n            {summary}{\" \"}\n          </span>\n          <span className={classes.summaryResultValue}>\n            {formatDisplay(results, resultsDisplayFormat)}\n          </span>\n          <span\n            style={{\n              opacity: 0.8,\n            }}\n          >\n            .{\" \"}\n          </span>\n        </Fragment>\n      );\n    }\n  };\n\n  return (\n    <div className={classes.listContainer}>\n      {hasResults && !!Object.keys(resultsValues).length ? (\n        resultsSummary.map((values, index) => (\n          <p key={index} className={classes.summaryText}>\n            {Object.keys(values).map((key, i) => {\n              return Array.isArray(values[key])\n                ? values[key].map((value, i2) =>\n                    renderSummaryResult(value, `${i}${i2}`)\n                  )\n                : renderSummaryResult(values[key], i);\n            })}\n          </p>\n        ))\n      ) : (\n        <div className={classes.noResultsContainer}>\n          {/* <div className={classes.threeDotsContainer}>\n            <span /> for spacing\n            <div className={classes.subTitle} style={{ marginLeft: 15 }}>\n              The E Calculator\n            </div>\n          </div> */}\n          <div className={classes.noResults}>No Results Yet</div>\n          <div className={classes.noResultsSmallText}>\n            Calculation results will show as you enter the fields.\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// function BrokerComponent(props) {\n//   const classes = useStyles();\n//   return (\n//     <div className={classes.brokerContainer}>\n//       <div className={classes.broker}></div>\n//     </div>\n//   );\n// }\n\nfunction formatDisplay(value, displayFormat) {\n  if (\n    !displayFormat ||\n    !value ||\n    value.toString().toLowerCase() === \"invalid entry\"\n  ) {\n    return value;\n  }\n  switch (displayFormat) {\n    case \"dollar\":\n      return `$${formatDollar(value)}`;\n    case \"percent\":\n      return `${value}%`;\n    case \"times\":\n      return `${value}x`;\n    default:\n      return value;\n  }\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { ECALC_LARGE_SCREEN } from \"../../lib\";\n\nexport const useStyles = makeStyles((theme) => ({\n  container: {\n    fontFamily: \"Karla\",\n    margin: \"25px auto\",\n    width: \"90%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      margin: 0,\n    },\n  },\n  mobileTitleContainer: {\n    ...flex,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    position: \"fixed\",\n    width: (props) =>\n      props.isTabletSlider && !props.isTablet ? \"calc(100% - 224px)\" : \"100%\",\n    height: 110,\n    left: (props) => (props.isTabletSlider ? undefined : 0),\n    right: 0,\n    top: (props) =>\n      props.isTabletSlider && !props.isTablet\n        ? props.hasToolbar\n          ? 101\n          : props.isDealDetails\n          ? 0\n          : 44\n        : props.hasToolbar\n        ? 107\n        : 49,\n    background: \"#00112B\",\n    borderRadius: \"0px 0px 5px 5px\",\n    zIndex: 1,\n    fontFamily: \"Karla\",\n  },\n  calculatorsSection: {\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      marginTop: 0,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 110,\n    },\n  },\n  tabletCalculatorsSection: {\n    marginTop: 105,\n  },\n  calculatorsSectionWithResults: {\n    [theme.breakpoints.down(\"xs\")]: {\n      marginTop: 160,\n    },\n  },\n  tabletCalculatorsSectionWithResults: {\n    marginTop: 110,\n  },\n  tabletCalculatorsSectionWithResultsDeal: {\n    marginTop: 120,\n  },\n  ecalcContainer: {\n    flex: \"1 0 470px\",\n    marginLeft: 75,\n    maxWidth: 470,\n    [theme.breakpoints.between(\"lg\", ECALC_LARGE_SCREEN)]: {\n      maxWidth: \"calc(100% - 540px)\",\n      width: 535,\n      marginLeft: 40,\n      flex: \"initial\",\n    },\n    [theme.breakpoints.only(\"md\")]: {\n      maxWidth: \"calc(100% - 370px)\",\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      margin: 0,\n    },\n  },\n  tabletEcalcContainer: {\n    maxWidth: \"90%\",\n    marginLeft: 0,\n    margin: \"0px auto\",\n  },\n  noRatesContainer: {\n    maxWidth: 640,\n    paddingBottom: 35,\n  },\n  ecalcTitle: {\n    color: \"#000000\",\n    fontWeight: \"bold\",\n    fontSize: 33,\n    marginBottom: 10,\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      fontSize: 22.4865,\n      marginBottom: 5,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 15,\n      color: \"#FFFFFF\",\n      opacity: 0.8,\n    },\n  },\n  tabletEcalcTitle: {\n    fontSize: 15,\n    color: \"#FFFFFF\",\n    opacity: 0.8,\n  },\n  subTitle: {\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 37,\n    letterSpacing: \"-0.04em\",\n    color: \"#00112B\",\n    lineHeight: 1,\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      fontSize: 25.4741,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 18,\n      color: \"#FFFFFF\",\n    },\n  },\n  tabletSubTitle: {\n    fontSize: 18,\n    color: \"#FFFFFF\",\n  },\n  thirdTitle: {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n\n    fontSize: 24,\n    color: \"#00112B\",\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      fontSize: 16.6808,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 16,\n      color: \"#FFFFFF\",\n      opacity: 0.6,\n    },\n  },\n  noResultsSmallText: {\n    fontSize: 10,\n    color: \"#FFFFFF\",\n    opacity: 0.3,\n  },\n  noResults: {\n    color: \"#FFFFFF\",\n    background: \"rgba(255, 255, 255, 0.2)\",\n    borderRadius: 5,\n    padding: \"3px 15px\",\n    marginBottom: 5,\n    marginTop: 10,\n  },\n  threeDotsContainer: {\n    ...flex,\n    // justifyContent: \"space-between\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    padding: \"0px 10px 0px 10px\",\n  },\n  threeDots: {\n    color: \"#FFFFFF\",\n    fontSize: 20,\n  },\n  drawer: {\n    maxHeight: \"calc(100% - 64px)\",\n    paddingBottom: 20,\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    overflowY: \"hidden\",\n    background: \"#00112B\",\n  },\n  mobileClose: {\n    minHeight: 4,\n    maxWidth: 60,\n    background: \"#C1C1C1\",\n    textAlign: \"center\",\n    width: 60,\n    margin: \"0 auto\",\n  },\n  expansionPanelDetails: {\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: 0,\n    },\n  },\n  calcListItemDetails: {\n    ...flex,\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n  },\n  calcListItem: {\n    width: \"100%\",\n    height: 75,\n    ...flex,\n  },\n  calcListItemTitle: {\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 24,\n    color: \"#00112B\",\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      fontSize: 16.6808,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 16,\n    },\n  },\n  calcListItemText: {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: 18,\n    color: \"#646464\",\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      fontSize: 12.5106,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 12,\n    },\n  },\n  calcListItemIcon: {\n    color: \"#10B8C7\",\n    fontSize: 30,\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      fontSize: 24,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 20,\n    },\n  },\n  calcListItemIconContainer: {\n    background: \"#FFFFFF\",\n    boxShadow: \"0px 0px 22.9942px rgba(0, 0, 0, 0.14)\",\n    width: 56.72,\n    height: 56.72,\n    marginRight: 20,\n    [theme.breakpoints.between(\"md\", ECALC_LARGE_SCREEN)]: {\n      width: 40.72,\n      height: 40.72,\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      width: 37,\n      height: 37,\n    },\n  },\n  addIcon: {\n    fontWeight: 300,\n    color: \"#00112B\",\n    fontSize: 30,\n  },\n  divider: {\n    opacity: 0.1,\n    background: \"#000000\",\n  },\n  expansionPanel: {\n    \"&:before\": {\n      display: \"none\",\n    },\n  },\n}));\n\nconst flex = {\n  display: \"flex\",\n  alignItems: \"center\",\n};\n","import React, {\n  Fragment,\n  useState,\n  useCallback,\n  useEffect,\n  useRef,\n} from \"react\";\nimport useDeepCompareEffect from \"use-deep-compare-effect\";\nimport clsx from \"clsx\";\nimport { useDispatch, useSelector, shallowEqual } from \"react-redux\";\nimport mixpanel from \"mixpanel-browser\";\nimport debounce from \"lodash/debounce\";\nimport {\n  useMediaQuery,\n  Divider,\n  Avatar,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n  SwipeableDrawer,\n} from \"@material-ui/core\";\nimport { MobileResultsTop } from \"./components\";\nimport { eCalcForms } from \"../../lib\";\nimport {\n  CapRate,\n  EquityNeeded,\n  MortgageDscr,\n  CashOnCash,\n  Irr,\n  EquityWaterfall,\n} from \"./calculators\";\nimport { SideResults } from \"./results\";\nimport {\n  DomainIcon,\n  AddIcon,\n  RemoveIcon,\n  MoneyIcon,\n  TrendingUpIcon,\n  AccountIcon,\n  LoopRoundedIcon,\n  WaterfallIcon,\n  // MoreHoriz,\n  useMobile,\n} from \"../../themes\";\nimport { ECALC_SHOW_SIDE_RESULTS, ECALC_TABLET_VIEW } from \"../../lib\";\nimport { useStyles } from \"./Calculator.styles\";\nimport { setOpenCalcs } from \"../../actions/eCalcForms\";\n\n// const Transition = forwardRef(function Transition(props, ref) {\n//   return <Slide direction=\"up\" ref={ref} {...props} />;\n// });\n\nconst debounceTrack = debounce((results = {}, purchasePrice) => {\n  const formatedForMix = Object.keys(results).reduce((prev, curr) => {\n    prev[curr] = results[curr].results;\n    return prev;\n  }, {});\n  mixpanel.track(\"ecalc_result\", {\n    purchase_price: purchasePrice,\n    ...formatedForMix,\n  });\n}, 300);\n\nexport function Calculator({\n  persist,\n  isDealDetails,\n  storeSliceName,\n  hasToolbar,\n}) {\n  // \"showSideResults\" is where the desktop starts to show the results on the side.\n  // \"isTablet\" is the site breakoint for tablet\n  const showSideResults = useMediaQuery(ECALC_SHOW_SIDE_RESULTS);\n  const isTablet = useMediaQuery(ECALC_TABLET_VIEW);\n  const isMobile = useMobile();\n  const dispatch = useDispatch();\n  const isTabletSlider = !showSideResults && !isMobile;\n  const classes = useStyles({\n    isTabletSlider,\n    isTablet,\n    hasToolbar,\n    isDealDetails,\n  });\n  const [showMobileResultsPage, setShowMobileResultsPage] = useState(false);\n\n  const openCalcs = useSelector((state) => state[storeSliceName].openCalcs);\n\n  const addOpenCalc = (calcId) => {\n    dispatch(\n      setOpenCalcs(\n        Array.isArray(openCalcs) ? [...openCalcs, calcId] : [calcId],\n        persist\n      )\n    );\n  };\n\n  const removeOpenCalc = (calcId) => {\n    if (Array.isArray(openCalcs)) {\n      dispatch(\n        setOpenCalcs(\n          openCalcs.filter((c) => c !== calcId),\n          persist\n        )\n      );\n    }\n  };\n\n  const resultsValues = useSelector(\n    (state) => state[storeSliceName].resultsValues,\n    shallowEqual\n  );\n  const purchase_price = useSelector(\n    (state) => state[storeSliceName][eCalcForms.CAP_RATE].purchase_price\n  );\n\n  const firstRender = useRef(true);\n  // `resultsValues` are causing the useEffect to render too many times.\n  // See https://github.com/kentcdodds/use-deep-compare-effect\n  useDeepCompareEffect(() => {\n    // Don't track when page first loads\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    debounceTrack(resultsValues, purchase_price);\n  }, [resultsValues]);\n\n  const hasResults = !!Object.keys(resultsValues).length;\n  return (\n    <div\n      className={clsx(classes.ecalcContainer, {\n        [classes.tabletEcalcContainer]: isTabletSlider,\n        [classes.noRatesContainer]: isDealDetails,\n      })}\n    >\n      {!isMobile && showSideResults && (\n        <div>\n          <div\n            className={clsx(classes.ecalcTitle, {\n              [classes.tabletEcalcTitle]: isTabletSlider,\n            })}\n          >\n            eCALC\n          </div>\n          <div\n            className={clsx(classes.subTitle, {\n              [classes.tabletSubTitle]: isTabletSlider,\n            })}\n          >\n            The E Calculator\n          </div>\n          <div className={classes.thirdTitle}>\n            A full underwriting experience\n          </div>\n        </div>\n      )}\n      {(isMobile || !showSideResults) &&\n        Array.isArray(openCalcs) &&\n        !openCalcs.length &&\n        !hasResults && (\n          <div className={classes.mobileTitleContainer}>\n            <div\n              className={clsx(classes.ecalcTitle, {\n                [classes.tabletEcalcTitle]: isTabletSlider,\n              })}\n            >\n              eCALC\n            </div>\n            <div\n              className={clsx(classes.subTitle, {\n                [classes.tabletSubTitle]: isTabletSlider,\n              })}\n            >\n              The E Calculator\n            </div>\n            <div className={classes.thirdTitle}>\n              A full underwriting experience\n            </div>\n          </div>\n        )}\n      {(isMobile || !showSideResults) &&\n        Array.isArray(openCalcs) &&\n        !!openCalcs.length &&\n        !hasResults && (\n          <div className={classes.mobileTitleContainer} style={{ height: 125 }}>\n            <div\n              className={clsx(classes.ecalcTitle, {\n                [classes.tabletEcalcTitle]: isTabletSlider,\n              })}\n              style={{ margin: 0 }}\n            >\n              eCALC\n            </div>\n            <div className={classes.threeDotsContainer}>\n              <span /> {/* for spacing */}\n              <div\n                className={clsx(classes.subTitle, {\n                  [classes.tabletSubTitle]: isTabletSlider,\n                })}\n                style={{ marginLeft: 15 }}\n              >\n                The E Calculator\n              </div>\n              <span />{\" \"}\n              {/* for spacing TODO remove when implementing three dots */}\n              {/* <MoreHoriz className={classes.threeDots} /> */}\n            </div>\n            <div className={classes.noResults}>No Results Yet</div>\n            <div className={classes.noResultsSmallText}>\n              Calculation results will show as you enter the fields.\n            </div>\n          </div>\n        )}\n      {(isMobile || !showSideResults) && hasResults && (\n        <MobileResultsTop\n          setShowMobileResultsPage={setShowMobileResultsPage}\n          isTabletSlider={!isMobile}\n          storeSliceName={storeSliceName}\n          isDealDetails={isDealDetails}\n          persist={persist}\n          hasToolbar={hasToolbar}\n        />\n      )}\n      <SwipeableDrawer\n        anchor=\"top\"\n        open={showMobileResultsPage}\n        onClose={() => setShowMobileResultsPage(false)}\n        onOpen={() => setShowMobileResultsPage(true)}\n        disableSwipeToOpen\n        disableDiscovery\n        classes={{ paperAnchorTop: classes.drawer }}\n      >\n        <SideResults\n          isMobileResults\n          setShowMobileResultsPage={setShowMobileResultsPage}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n        <div className={classes.mobileClose} />\n      </SwipeableDrawer>\n      <div\n        className={clsx(classes.calculatorsSection, {\n          [classes.tabletCalculatorsSection]: isTabletSlider,\n          [classes.calculatorsSectionWithResults]: isMobile && hasResults,\n          [classes.tabletCalculatorsSectionWithResults]:\n            isTabletSlider && hasResults,\n          [classes.tabletCalculatorsSectionWithResultsDeal]:\n            isTabletSlider && hasResults && isDealDetails,\n        })}\n      >\n        <CalculatorListSection\n          title=\"Cap Rate\"\n          text=\"Calculate the cap rate I am paying based on my underwriting\"\n          Icon={DomainIcon}\n          CalcComponent={CapRate}\n          calcId=\"capRate\"\n          isExpanded={Array.isArray(openCalcs) && openCalcs.includes(\"capRate\")}\n          addOpenCalc={addOpenCalc}\n          removeOpenCalc={removeOpenCalc}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n        <CalculatorListSection\n          title=\"Equity Needed\"\n          text=\"Calculate equity needed to close\"\n          Icon={MoneyIcon}\n          CalcComponent={EquityNeeded}\n          calcId=\"equityNeeded\"\n          isExpanded={\n            Array.isArray(openCalcs) && openCalcs.includes(\"equityNeeded\")\n          }\n          addOpenCalc={addOpenCalc}\n          removeOpenCalc={removeOpenCalc}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n        <CalculatorListSection\n          title=\"Mortgage and DSCR\"\n          text=\"Calculate the mortgage payments and Debt Service Coverage Ratio\"\n          Icon={AccountIcon}\n          CalcComponent={MortgageDscr}\n          calcId=\"mortgageDscr\"\n          isExpanded={\n            Array.isArray(openCalcs) && openCalcs.includes(\"mortgageDscr\")\n          }\n          addOpenCalc={addOpenCalc}\n          removeOpenCalc={removeOpenCalc}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n        <CalculatorListSection\n          title=\"Cash-on-Cash\"\n          text=\"Calculate the first year’s cash on cash return\"\n          Icon={LoopRoundedIcon}\n          CalcComponent={CashOnCash}\n          calcId=\"cashOnCash\"\n          isExpanded={\n            Array.isArray(openCalcs) && openCalcs.includes(\"cashOnCash\")\n          }\n          addOpenCalc={addOpenCalc}\n          removeOpenCalc={removeOpenCalc}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n        <CalculatorListSection\n          title=\"IRR and Equity Multiplier\"\n          text=\"Calculate the main metrics used by Syndicators and Investors\"\n          Icon={TrendingUpIcon}\n          CalcComponent={Irr}\n          calcId=\"irr\"\n          isExpanded={Array.isArray(openCalcs) && openCalcs.includes(\"irr\")}\n          addOpenCalc={addOpenCalc}\n          removeOpenCalc={removeOpenCalc}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n        <CalculatorListSection\n          title=\"Equity Waterfall\"\n          text=\"Calculate the Property IRR based equity waterfall returns to the GP and LP\"\n          Icon={WaterfallIcon}\n          CalcComponent={EquityWaterfall}\n          calcId=\"equityWaterfall\"\n          isExpanded={\n            Array.isArray(openCalcs) && openCalcs.includes(\"equityWaterfall\")\n          }\n          addOpenCalc={addOpenCalc}\n          removeOpenCalc={removeOpenCalc}\n          storeSliceName={storeSliceName}\n          persist={persist}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction CalculatorListSection({\n  Icon,\n  CalcComponent,\n  title,\n  text,\n  calcId,\n  isExpanded,\n  addOpenCalc,\n  removeOpenCalc,\n  storeSliceName,\n  persist,\n}) {\n  const [expand, setExpand] = useState(isExpanded);\n  const classes = useStyles();\n\n  useEffect(() => {\n    setExpand(isExpanded);\n  }, [isExpanded]);\n\n  const handleToggle = useCallback(() => {\n    if (expand) {\n      // if currently expanded so we are now closing\n      removeOpenCalc(calcId);\n    } else {\n      mixpanel.track(\"ecalc_section_opened\", { section: title });\n      addOpenCalc(calcId);\n    }\n    setExpand((ex) => !ex);\n  }, [expand, removeOpenCalc, addOpenCalc, calcId, title]);\n\n  return (\n    <Fragment>\n      <Accordion\n        expanded={expand}\n        onChange={handleToggle}\n        // TransitionProps={{ unmountOnExit: true, mountOnEnter: true }}\n        className={classes.expansionPanel}\n        elevation={0}\n      >\n        <AccordionSummary\n          expandIcon={\n            expand ? (\n              <RemoveIcon className={classes.addIcon} />\n            ) : (\n              <AddIcon className={classes.addIcon} />\n            )\n          }\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <div className={classes.calcListItem}>\n            <Avatar className={classes.calcListItemIconContainer}>\n              <Icon className={classes.calcListItemIcon} />\n            </Avatar>\n            <div className={classes.calcListItemDetails}>\n              <div className={classes.calcListItemTitle}>{title}</div>\n              <div className={classes.calcListItemText}>{text}</div>\n            </div>\n            {/* <IconButton onClick={handleToggle}>\n          <Add className={classes.addIcon} />\n        </IconButton> */}\n          </div>\n        </AccordionSummary>\n        <AccordionDetails classes={{ root: classes.expansionPanelDetails }}>\n          <CalcComponent storeSliceName={storeSliceName} persist={persist} />\n        </AccordionDetails>\n      </Accordion>\n      <Divider className={classes.divider} />\n    </Fragment>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nexport const useStyles = makeStyles((theme) => ({\n  cssReset: {\n    fontSize: \"initial\",\n    fontWeight: \"normal\",\n    lineHeight: 1.429,\n  },\n  container: {\n    fontFamily: \"Karla\",\n    margin: \"25px auto\",\n    width: \"90%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100%\",\n      margin: 0,\n    },\n  },\n  tabsContainer: {\n    paddingLeft: 60,\n  },\n  resultsTab: {\n    // minWidth: 78.49,\n    // width: 78.49,\n    fontSize: 18,\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: 15,\n    },\n  },\n  resultsTabActive: {\n    fontSize: 18,\n  },\n  layout: {\n    display: (props) => (props.showSideRates ? \"flex\" : \"block\"),\n    alignItems: \"flex-start\",\n    marginTop: 25,\n    // [theme.breakpoints.down(\"xs\")]: {\n    //   display: \"block\"\n    // }\n  },\n}));\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport clsx from \"clsx\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  // makeStyles,\n  useMediaQuery,\n  Paper,\n} from \"@material-ui/core\";\nimport { Calculator } from \"./Calculator\";\nimport { SideResults } from \"./results\";\nimport {\n  EcalcSideRates,\n  EcalcMobileRatesSlider,\n  EcalcDesktopRatesSlider,\n  CalculatorToolbar,\n} from \"./components\";\nimport { updateNavTitle } from \"../../actions/navigationTitleActions\";\nimport { ECALC_SHOW_SIDE_RESULTS, ECALC_SHOW_SIDE_RATES } from \"../../lib\";\nimport { useMobile } from \"../../themes\";\nimport { useStyles } from \"./CalculatorContainer.styles\";\nimport { parse } from \"query-string\";\nimport { getPublicEcalcById } from \"../../actions/eCalcForms\";\n\nexport default function CalculatorContainer({\n  isDealDetails,\n  hasToolbar,\n  handleSave,\n}) {\n  const showSideRates = useMediaQuery(ECALC_SHOW_SIDE_RATES);\n  const showSideResults = useMediaQuery(ECALC_SHOW_SIDE_RESULTS);\n  const classes = useStyles({ showSideRates, isDealDetails });\n  const isMobile = useMobile();\n  const dispatch = useDispatch();\n  const [storeSliceName, setStoreSliceName] = useState();\n  const { hash_id } = parse(window.location.search);\n  const isPublicEcalc = !!hash_id;\n\n  useEffect(() => {\n    setStoreSliceName(\n      isDealDetails || isPublicEcalc ? \"eCalcFormsNoPersist\" : \"eCalcForm\"\n    );\n  }, [isDealDetails, isPublicEcalc]);\n\n  useEffect(() => {\n    if (isPublicEcalc) {\n      dispatch(getPublicEcalcById({ hash_id }));\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPublicEcalc]);\n\n  useEffect(() => {\n    if (!isDealDetails) {\n      dispatch(updateNavTitle(\"eCALC\"));\n    }\n  }, [dispatch, isDealDetails]);\n  // const [page, setPage] = useState(0);\n\n  // const handlePageTabs = (event, newValue) => {\n  //   setPage(newValue);\n  // };\n\n  if (!storeSliceName) return null;\n\n  return (\n    <Fragment>\n      <CalculatorToolbar\n        storeSliceName={storeSliceName}\n        isDealDetails={isDealDetails}\n        persist={!isDealDetails && !isPublicEcalc}\n        isMobile={isMobile}\n        handleSave={handleSave}\n      />\n      <Paper\n        className={clsx(classes.cssReset, classes.container)}\n        style={{ paddingTop: !isMobile ? 20 : undefined }} // Remove after tabs are implemented\n      >\n        {/* {!isMobile && (\n        <Tabs\n          value={page}\n          indicatorColor=\"primary\"\n          onChange={handlePageTabs}\n          classes={{ root: classes.tabsContainer }}\n        >\n          <Tab\n            label=\"The E Calculator\"\n            classes={{\n              root: classes.resultsTab,\n              selected: classes.resultsTabActive\n            }}\n          />\n          <Tab\n            label=\"My Saved Underwritings\"\n            classes={{\n              root: classes.resultsTab,\n              selected: classes.resultsTabActive\n            }}\n            disabled\n          />\n        </Tabs>\n      )} */}\n        <div className={classes.layout}>\n          {showSideRates && !isDealDetails && <EcalcSideRates />}\n          <Calculator\n            persist={!isDealDetails && !isPublicEcalc}\n            isDealDetails={isDealDetails}\n            storeSliceName={storeSliceName}\n            hasToolbar={hasToolbar}\n          />\n          {!isMobile && showSideResults && (\n            <SideResults\n              storeSliceName={storeSliceName}\n              isDealDetails={isDealDetails}\n              persist={!isDealDetails && !isPublicEcalc}\n            />\n          )}\n          {!showSideRates && !isDealDetails && !isMobile && (\n            <EcalcDesktopRatesSlider />\n          )}\n          {!showSideRates && !isDealDetails && isMobile && (\n            <EcalcMobileRatesSlider />\n          )}\n        </div>\n      </Paper>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}