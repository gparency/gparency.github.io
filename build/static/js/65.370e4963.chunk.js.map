{"version":3,"sources":["components/dealDetails/PropertyDetails.js","components/dealDetails/PropertyDetailsPage.js","components/dealDetails/PropertyDetailsContainer.js"],"names":["PropertyDetails","props","className","md","style","margin","property","property_address","property_city","property_state","property_zip","property_type","onClick","openStreetView","latitude","longitude","src","alt","marginTop","number_of_buildings","number_of_floors","formatWithCommas","square_footage","no_of_units","no_of_bedroom","total_violations","href","e","preventDefault","compsClick","in_nyc","property_type_id","formatTotalComps","total_comps","total_complaints","google","window","PropertyDetailsPage","inNYC","address","city","state","zip","sessionStorage","setItem","this","setPageAndScrollPos","location","pathname","scrollY","submitCompsSearch","lat","long","maps","StreetViewService","getPanorama","parseFloat","lng","radius","data","status","Navigation","go","encodeQueryData","showToast","toast","show","Expire","closeToast","delay","message","variant","success","properties","length","map","index","key","bind","loading","Loader","React","Component","PropertyDetailsContainer","comps","previousScrollPos","scrollTo","actions","loadPropertyDetails","match","params","dealId","getParameterByName","compsActions","popPageAndScrollPos","dealDetails","propertyDetails","dealType","queryString","search","connect","missingQuotes","dispatch","bindActionCreators","dealDetailsActions","missingQuotesActions"],"mappings":"uQAsJeA,EAhJS,SAACC,GACvB,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,MACN,uBACED,UAAU,uBACVE,MAAO,CAAEC,OAAQ,gBAEhBJ,EAAMK,SAASC,iBAJlB,IAIqCN,EAAMK,SAASE,cAAe,IAChEP,EAAMK,SAASG,eALlB,IAKmCR,EAAMK,SAASI,cAElD,uBAAGR,UAAU,+BACVD,EAAMK,SAASK,cACZV,EAAMK,SAASK,cACf,KAGR,kBAAC,IAAD,CAAKR,GAAG,KACN,yBACES,QAAS,WACPX,EAAMY,eACJZ,EAAMK,SAASQ,SACfb,EAAMK,SAASS,UACfd,EAAMK,SAASC,iBACfN,EAAMK,SAASE,cACfP,EAAMK,SAASG,eACfR,EAAMK,SAASI,eAGnBM,IAAI,uCACJC,IAAI,YACJf,UAAU,qBACVE,MAAO,CAAEc,UAAW,YAI1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKf,GAAG,KACN,uBAAGD,UAAU,gCAAb,aACA,uBAAGA,UAAU,+BACVD,EAAMK,SAASa,oBACZlB,EAAMK,SAASa,oBACf,QAGR,kBAAC,IAAD,CAAKhB,GAAG,KACN,uBAAGD,UAAU,gCAAb,UACA,uBAAGA,UAAU,+BACVD,EAAMK,SAASc,iBACZnB,EAAMK,SAASc,iBACf,QAGR,kBAAC,IAAD,CAAKjB,GAAG,KACN,uBAAGD,UAAU,gCAAb,eACA,uBAAGA,UAAU,+BACVmB,YAAiBpB,EAAMK,SAASgB,eAAgB,SAGrD,kBAAC,IAAD,CAAKnB,GAAG,KACN,uBAAGD,UAAU,gCAAb,SACA,uBAAGA,UAAU,+BACVD,EAAMK,SAASiB,YACZtB,EAAMK,SAASiB,YACf,QAGR,kBAAC,IAAD,CAAKpB,GAAG,KACN,uBAAGD,UAAU,gCAAb,YACA,uBAAGA,UAAU,+BACVD,EAAMK,SAASkB,cACZvB,EAAMK,SAASkB,cACf,SAIV,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKtB,UAAU,aACb,6BACE,6BACE,yBACEA,UACsC,OAApCD,EAAMK,SAASmB,iBACX,eACA,IAGN,uBACEC,KAAK,IACLd,QAAS,SAACe,GACRA,EAAEC,iBACF3B,EAAM4B,WACJ5B,EAAMK,SAASwB,OACf7B,EAAMK,SAASC,iBACfN,EAAMK,SAASE,cACfP,EAAMK,SAASG,eACfR,EAAMK,SAASI,aACfT,EAAMK,SAASyB,oBAInB,uBAAG7B,UAAU,yBACX,8BACG8B,YAAiB/B,EAAMK,SAAS2B,aADnC,eAQV,yBACE/B,UACsC,OAApCD,EAAMK,SAASmB,iBACX,uBACA,UAGN,yBAAKvB,UAAU,wBACb,6BACE,uBAAGwB,KAAK,IAAId,QAAS,SAACe,GAAD,OAAOA,EAAEC,mBAC5B,uBAAG1B,UAAU,mBACX,8BAAOD,EAAMK,SAASmB,iBAAtB,kBAIN,6BACE,uBAAGC,KAAK,IAAId,QAAS,SAACe,GAAD,OAAOA,EAAEC,mBAC5B,uBAAG1B,UAAU,mBACX,8BAAOD,EAAMK,SAAS4B,iBAAtB,yB,0CCjIhBC,EAASC,OAAOD,OA+EPE,E,yKA5EFC,EAAOC,EAASC,EAAMC,EAAOC,EAAKX,GAC3CY,eAAeC,QAAQ,cAAeN,GACtCO,KAAK5C,MAAM6C,oBAAoBV,OAAOW,SAASC,SAAUZ,OAAOa,SAChEJ,KAAK5C,MAAMiD,kBAAX,UACKX,EADL,YACgBC,EADhB,YACwBC,EADxB,YACiCC,GAC/BX,K,qCAIWoB,EAAKC,EAAMb,EAASC,EAAMC,EAAOC,GAAM,IAAD,QAC1C,IAAIP,EAAOkB,KAAKC,mBACtBC,YACD,CACER,SAAU,CACRI,IAAKK,WAAWL,GAChBM,IAAKD,WAAWJ,IAElBM,OAAQ,KAEV,SAACC,EAAMC,GACU,OAAXA,GACF,EAAK3D,MAAM6C,sBACXe,IAAWC,GAAX,mBACcC,YAAgB,CAC1BjD,SAAUqC,EACVpC,UAAWqC,EACXb,QAAQ,GAAD,OAAKA,EAAL,YAAgBC,EAAhB,YAAwBC,EAAxB,YAAiCC,QAI5C,EAAKzC,MAAM+D,WAAU,EAAO,+C,+BAM1B,IAAD,OACHC,EAAQ,KAaZ,OAZIpB,KAAK5C,MAAMgE,OAASpB,KAAK5C,MAAMgE,MAAMC,OACvCD,EACE,kBAACE,EAAA,EAAD,CAAQC,WAAYvB,KAAK5C,MAAMmE,WAAYC,MAAO,KAChD,yBAAKnE,UAAU,mBACb,2BAAI2C,KAAK5C,MAAMgE,MAAMK,SACrB,kBAAC,IAAD,CAAQC,QAAQ,OAAO3D,QAASiC,KAAK5C,MAAMmE,YACxCvB,KAAK5C,MAAMgE,MAAMO,QAAU,OAAS,cAO7C,6BACGP,EACApB,KAAK5C,MAAMwE,WAAWC,OAAS,EAC9B7B,KAAK5C,MAAMwE,WAAWE,KAAI,SAACrE,EAAUsE,GAAX,OACxB,kBAAC,EAAD,CACEC,IAAKD,EACLtE,SAAUA,EACVuB,WAAY,EAAKA,WAAWiD,KAAK,GACjCjE,eAAgB,EAAKA,eAAeiE,KAAK,QAI7C,6BACE,yBAAK5E,UAAU,eACb,uBAAGA,UAAU,kBAAb,YAEF,wBAAIA,UAAU,cAAd,sCAGH2C,KAAK5C,MAAM8E,SAAW,kBAACC,EAAA,EAAD,W,GAvEGC,IAAMC,W,QCDlCC,E,kDACJ,WAAYlF,GAAQ,IAAD,8BACjB,cAAMA,IACDwC,MAAQ,GAFI,E,gEAMbI,KAAK5C,MAAMmF,MAAMC,mBACnBjD,OAAOkD,SACL,EACAzC,KAAK5C,MAAMmF,MAAMC,kBACfxC,KAAK5C,MAAMmF,MAAMC,kBAAkBX,OAAS,IAIlD7B,KAAK5C,MAAMsF,QAAQC,oBACjB3C,KAAK5C,MAAMwF,MAAMC,OAAOC,OACpB9C,KAAK5C,MAAMwF,MAAMC,OAAOC,OACxBC,YAAmB,WACnBA,YAAmB,WACnB,IAGJ/C,KAAK5C,MAAMmF,MAAMC,mBACjBxC,KAAK5C,MAAMmF,MAAMC,kBAAkBX,QAAU,GAE7C7B,KAAK5C,MAAM4F,aAAaC,wB,+BAK1B,OACE,6BACE,kBAAC,EAAD,CACEf,QAASlC,KAAK5C,MAAM8F,YAAYhB,QAChCN,WAAY5B,KAAK5C,MAAM8F,YAAYC,gBACnCC,SAAUpD,KAAK5C,MAAMwF,MAAMC,OAAOO,SAClCC,YAAa9D,OAAOW,SAASoD,OAC7BlC,MAAOpB,KAAK5C,MAAM8F,YAAY9B,MAC9BD,UAAWnB,KAAK5C,MAAMsF,QAAQvB,UAC9BI,WAAYvB,KAAK5C,MAAMsF,QAAQnB,WAC/BtB,oBAAqBD,KAAK5C,MAAM4F,aAAa/C,oBAC7CI,kBAAmBL,KAAK5C,MAAM4F,aAAa3C,yB,GA1Cd+B,IAAMC,WAiE9BkB,uBAhBf,SAAyB3D,GACvB,MAAO,CACLsD,YAAatD,EAAMsD,YACnBM,cAAe5D,EAAM4D,cACrBjB,MAAO3C,EAAM2C,UAIjB,SAA4BkB,GAC1B,MAAO,CACLf,QAASgB,YAAmBC,EAAoBF,GAChDG,qBAAsBF,YAAmBE,EAAsBH,GAC/DT,aAAcU,YAAmBV,EAAcS,MAIpCF,CAGbjB","file":"static/js/65.370e4963.chunk.js","sourcesContent":["import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport { formatTotalComps, formatWithCommas } from \"../../lib\";\n\nconst PropertyDetails = (props) => {\n  return (\n    <div className=\"property-details\">\n      <div className=\"panel mui-panel\">\n        <div className=\"panel-body\">\n          <Row>\n            <Col md=\"10\">\n              <p\n                className=\"bold-text large-text\"\n                style={{ margin: \"16px 24px 0\" }}\n              >\n                {props.property.property_address} {props.property.property_city}{\" \"}\n                {props.property.property_state} {props.property.property_zip}\n              </p>\n              <p className=\"small-text panel-info-value\">\n                {props.property.property_type\n                  ? props.property.property_type\n                  : \"\"}\n              </p>\n            </Col>\n            <Col md=\"2\">\n              <img\n                onClick={() => {\n                  props.openStreetView(\n                    props.property.latitude,\n                    props.property.longitude,\n                    props.property.property_address,\n                    props.property.property_city,\n                    props.property.property_state,\n                    props.property.property_zip\n                  );\n                }}\n                src=\"/images/icons/street-view-square.png\"\n                alt=\"sv-square\"\n                className=\"street-view-square\"\n                style={{ marginTop: \"16px\" }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col md=\"2\">\n              <p className=\"small-title panel-info-title\">Buildings</p>\n              <p className=\"large-text panel-info-value\">\n                {props.property.number_of_buildings\n                  ? props.property.number_of_buildings\n                  : \"N/A\"}\n              </p>\n            </Col>\n            <Col md=\"2\">\n              <p className=\"small-title panel-info-title\">Floors</p>\n              <p className=\"large-text panel-info-value\">\n                {props.property.number_of_floors\n                  ? props.property.number_of_floors\n                  : \"N/A\"}\n              </p>\n            </Col>\n            <Col md=\"2\">\n              <p className=\"small-title panel-info-title\">Square Feet</p>\n              <p className=\"large-text panel-info-value\">\n                {formatWithCommas(props.property.square_footage, \"N/A\")}\n              </p>\n            </Col>\n            <Col md=\"2\">\n              <p className=\"small-title panel-info-title\">Units</p>\n              <p className=\"large-text panel-info-value\">\n                {props.property.no_of_units\n                  ? props.property.no_of_units\n                  : \"N/A\"}\n              </p>\n            </Col>\n            <Col md=\"2\">\n              <p className=\"small-title panel-info-title\">Bedrooms</p>\n              <p className=\"large-text panel-info-value\">\n                {props.property.no_of_bedroom\n                  ? props.property.no_of_bedroom\n                  : \"N/A\"}\n              </p>\n            </Col>\n          </Row>\n          <Divider />\n          <Row className=\"comps-row\">\n            <div>\n              <div>\n                <div\n                  className={\n                    props.property.total_violations !== null\n                      ? \"border-right\"\n                      : \"\"\n                  }\n                >\n                  <a\n                    href=\"/\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      props.compsClick(\n                        props.property.in_nyc,\n                        props.property.property_address,\n                        props.property.property_city,\n                        props.property.property_state,\n                        props.property.property_zip,\n                        props.property.property_type_id\n                      );\n                    }}\n                  >\n                    <p className=\"violation-value comps\">\n                      <span>\n                        {formatTotalComps(props.property.total_comps)} Comps\n                      </span>\n                    </p>\n                  </a>\n                </div>\n              </div>\n            </div>\n            <div\n              className={\n                props.property.total_violations !== null\n                  ? \"comps-row-violations\"\n                  : \"hidden\"\n              }\n            >\n              <div className=\"comps-row-violations\">\n                <div>\n                  <a href=\"/\" onClick={(e) => e.preventDefault()}>\n                    <p className=\"violation-value\">\n                      <span>{props.property.total_violations} Violations</span>\n                    </p>\n                  </a>\n                </div>\n                <div>\n                  <a href=\"/\" onClick={(e) => e.preventDefault()}>\n                    <p className=\"violation-value\">\n                      <span>{props.property.total_complaints} Complaints</span>\n                    </p>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </Row>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PropertyDetails;\n","import React from \"react\";\nimport PropertyDetails from \"./PropertyDetails\";\nimport encodeQueryData from \"../common/encodeQueryData\";\nimport { Navigation } from \"../../lib\";\nimport Expire from \"../common/Expire\";\nimport Button from \"muicss/lib/react/button\";\nimport Loader from \"../common/Loader\";\n\nconst google = window.google;\n\nclass PropertyDetailsPage extends React.Component {\n  compsClick(inNYC, address, city, state, zip, property_type_id) {\n    sessionStorage.setItem(\"comps_inNYC\", inNYC);\n    this.props.setPageAndScrollPos(window.location.pathname, window.scrollY);\n    this.props.submitCompsSearch(\n      `${address} ${city} ${state} ${zip}`,\n      property_type_id\n    );\n  }\n\n  openStreetView(lat, long, address, city, state, zip) {\n    var sv = new google.maps.StreetViewService();\n    sv.getPanorama(\n      {\n        location: {\n          lat: parseFloat(lat),\n          lng: parseFloat(long),\n        },\n        radius: 50,\n      },\n      (data, status) => {\n        if (status === \"OK\") {\n          this.props.setPageAndScrollPos();\n          Navigation.go(\n            `/comp-sv?${encodeQueryData({\n              latitude: lat,\n              longitude: long,\n              address: `${address} ${city} ${state} ${zip}`,\n            })}`\n          );\n        } else {\n          this.props.showToast(false, \"No street view available for this deal\");\n        }\n      }\n    );\n  }\n\n  render() {\n    let toast = null;\n    if (this.props.toast && this.props.toast.show) {\n      toast = (\n        <Expire closeToast={this.props.closeToast} delay={6000}>\n          <div className=\"success-message\">\n            <p>{this.props.toast.message}</p>\n            <Button variant=\"flat\" onClick={this.props.closeToast}>\n              {this.props.toast.success ? \"Done\" : \"Dismiss\"}\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    return (\n      <div>\n        {toast}\n        {this.props.properties.length > 0 ? (\n          this.props.properties.map((property, index) => (\n            <PropertyDetails\n              key={index}\n              property={property}\n              compsClick={this.compsClick.bind(this)}\n              openStreetView={this.openStreetView.bind(this)}\n            />\n          ))\n        ) : (\n          <div>\n            <div className=\"grey-circle\">\n              <i className=\"material-icons\">warning</i>\n            </div>\n            <h2 className=\"no-results\">This deal has no property details</h2>\n          </div>\n        )}\n        {this.props.loading && <Loader />}\n      </div>\n    );\n  }\n}\n\nexport default PropertyDetailsPage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as missingQuotesActions from \"../../actions/missingQuotesActions\";\nimport * as dealDetailsActions from \"../../actions/dealDetailsActions\";\nimport * as compsActions from \"../../actions/compsActions\";\nimport PropertyDetailsPage from \"./PropertyDetailsPage\";\nimport getParameterByName from \"../common/getParameterByName\";\n\nclass PropertyDetailsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    if (this.props.comps.previousScrollPos) {\n      window.scrollTo(\n        0,\n        this.props.comps.previousScrollPos[\n          this.props.comps.previousScrollPos.length - 1\n        ]\n      );\n    }\n    this.props.actions.loadPropertyDetails(\n      this.props.match.params.dealId\n        ? this.props.match.params.dealId\n        : getParameterByName(\"deal_id\")\n        ? getParameterByName(\"deal_id\")\n        : \"\"\n    );\n    if (\n      this.props.comps.previousScrollPos &&\n      this.props.comps.previousScrollPos.length >= 2\n    ) {\n      this.props.compsActions.popPageAndScrollPos();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <PropertyDetailsPage\n          loading={this.props.dealDetails.loading}\n          properties={this.props.dealDetails.propertyDetails}\n          dealType={this.props.match.params.dealType}\n          queryString={window.location.search}\n          toast={this.props.dealDetails.toast}\n          showToast={this.props.actions.showToast}\n          closeToast={this.props.actions.closeToast}\n          setPageAndScrollPos={this.props.compsActions.setPageAndScrollPos}\n          submitCompsSearch={this.props.compsActions.submitCompsSearch}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dealDetails: state.dealDetails,\n    missingQuotes: state.missingQuotes,\n    comps: state.comps,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(dealDetailsActions, dispatch),\n    missingQuotesActions: bindActionCreators(missingQuotesActions, dispatch),\n    compsActions: bindActionCreators(compsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PropertyDetailsContainer);\n"],"sourceRoot":""}