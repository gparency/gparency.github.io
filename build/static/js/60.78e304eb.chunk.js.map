{"version":3,"sources":["components/contacts/CreateNewContactContainer.js"],"names":["CreateNewContactContainer","this","props","actions","getJobDescriptionTypesList","getContactTypeList","getContactInfoTypeList","getPrefixTypeList","getHolidayGreetingTypeList","getGiftTypeList","getStateList","contacts","jobDescriptionTypes","length","contactTypes","contactInfoTypes","prefixTypes","holidayGreetingTypes","gaveGiftTypes","stateList","jobDescriptionTypesList","contactTypesList","contactInfoTypesList","prefixTypesList","holidayGreetingTypesList","gaveGiftTypesList","contactId","loading","submitContact","page","submitContactForm","createNewContact","clearContact","className","ariaHideApp","contentLabel","isOpen","shouldCloseOnOverlayClick","src","alt","React","Component","connect","state","dispatch","bindActionCreators","contactsActions"],"mappings":"oNAOMA,E,kLAEFC,KAAKC,MAAMC,QAAQC,6BACnBH,KAAKC,MAAMC,QAAQE,qBACnBJ,KAAKC,MAAMC,QAAQG,yBACnBL,KAAKC,MAAMC,QAAQI,oBACnBN,KAAKC,MAAMC,QAAQK,6BACnBP,KAAKC,MAAMC,QAAQM,kBACnBR,KAAKC,MAAMC,QAAQO,iB,+BAInB,OACE,6BACGT,KAAKC,MAAMS,SAASC,oBAAoBC,QACzCZ,KAAKC,MAAMS,SAASG,aAAaD,QACjCZ,KAAKC,MAAMS,SAASI,iBAAiBF,QACrCZ,KAAKC,MAAMS,SAASK,YAAYH,QAChCZ,KAAKC,MAAMS,SAASM,qBAAqBJ,QACzCZ,KAAKC,MAAMS,SAASO,cAAcL,QAClCZ,KAAKC,MAAMS,SAASQ,UAAUN,OAC5B,kBAAC,IAAD,CACEO,wBAAyBnB,KAAKC,MAAMS,SAASC,oBAC7CS,iBAAkBpB,KAAKC,MAAMS,SAASG,aACtCQ,qBAAsBrB,KAAKC,MAAMS,SAASI,iBAC1CQ,gBAAiBtB,KAAKC,MAAMS,SAASK,YACrCQ,yBAA0BvB,KAAKC,MAAMS,SAASM,qBAC9CQ,kBAAmBxB,KAAKC,MAAMS,SAASO,cACvCC,UAAWlB,KAAKC,MAAMS,SAASQ,UAC/BO,UAAWzB,KAAKC,MAAMS,SAASe,UAC/BC,QAAS1B,KAAKC,MAAMS,SAASgB,QAC7BC,cAAe3B,KAAKC,MAAMS,SAASiB,cACnCC,KAAM,iBACNC,kBAAmB7B,KAAKC,MAAMC,QAAQ4B,iBACtCC,aAAc/B,KAAKC,MAAMC,QAAQ6B,eAGnC,kBAAC,IAAD,CACEC,UAAU,sBACVC,aAAa,EACbC,aAAa,QACbC,QAAQ,EACRC,2BAA2B,GAE3B,yBAAKJ,UAAU,oBACb,yBACEK,IAAI,yBACJL,UAAU,kBACVM,IAAI,2B,GAhDoBC,IAAMC,WAsE/BC,uBAZf,SAAyBC,GACvB,MAAO,CACLhC,SAAUgC,EAAMhC,aAIpB,SAA4BiC,GAC1B,MAAO,CACLzC,QAAS0C,YAAmBC,EAAiBF,MAIlCF,CAGb1C","file":"static/js/60.78e304eb.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport { bindActionCreators } from \"redux\";\nimport * as contactsActions from \"../../actions/contactsActions\";\nimport ContactForm from \"./ContactForm\";\n\nclass CreateNewContactContainer extends React.Component {\n  componentDidMount() {\n    this.props.actions.getJobDescriptionTypesList();\n    this.props.actions.getContactTypeList();\n    this.props.actions.getContactInfoTypeList();\n    this.props.actions.getPrefixTypeList();\n    this.props.actions.getHolidayGreetingTypeList();\n    this.props.actions.getGiftTypeList();\n    this.props.actions.getStateList();\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.contacts.jobDescriptionTypes.length &&\n        this.props.contacts.contactTypes.length &&\n        this.props.contacts.contactInfoTypes.length &&\n        this.props.contacts.prefixTypes.length &&\n        this.props.contacts.holidayGreetingTypes.length &&\n        this.props.contacts.gaveGiftTypes.length &&\n        this.props.contacts.stateList.length ? (\n          <ContactForm\n            jobDescriptionTypesList={this.props.contacts.jobDescriptionTypes}\n            contactTypesList={this.props.contacts.contactTypes}\n            contactInfoTypesList={this.props.contacts.contactInfoTypes}\n            prefixTypesList={this.props.contacts.prefixTypes}\n            holidayGreetingTypesList={this.props.contacts.holidayGreetingTypes}\n            gaveGiftTypesList={this.props.contacts.gaveGiftTypes}\n            stateList={this.props.contacts.stateList}\n            contactId={this.props.contacts.contactId}\n            loading={this.props.contacts.loading}\n            submitContact={this.props.contacts.submitContact}\n            page={\"contacts/today\"}\n            submitContactForm={this.props.actions.createNewContact}\n            clearContact={this.props.actions.clearContact}\n          />\n        ) : (\n          <Modal\n            className=\"comps-loading-modal\"\n            ariaHideApp={false}\n            contentLabel=\"modal\"\n            isOpen={true}\n            shouldCloseOnOverlayClick={false}\n          >\n            <div className=\"centered-spinner\">\n              <img\n                src=\"/images/icons/spin.svg\"\n                className=\"loading-spinner\"\n                alt=\"loading spinner\"\n              />\n            </div>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    contacts: state.contacts,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(contactsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateNewContactContainer);\n"],"sourceRoot":""}