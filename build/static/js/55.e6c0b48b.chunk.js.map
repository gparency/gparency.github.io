{"version":3,"sources":["actions/serviceProviderActions.js","components/ServiceProvider/ActiveInfoField.js","components/ServiceProvider/PWDeal.js","components/ServiceProvider/IPDeal.js","components/ServiceProvider/ServiceProviderPage.js","components/ServiceProvider/ServiceProviderContainer.js"],"names":["loadServiceProviderDeals","dispatch","a","type","types","ajax","url","config","BASE_URL","applyAuthHeader","response","status","tokenExpired","data","activeDeals","noViolationsFeedbackToast","closeViolationsFeedbackToast","InfoField","props","md","className","title","value","PWDeal","onClick","clickFunction","bind","violations","otherProperty","dealId","navChange","name","propertyName","address","id","expectedClosingDate","broker","bank","loan","compsClick","inNYC","property_type_id","formatTotalComps","comps","complaints","Property","ServiceProviderPage","item","propertyInfo","push","key","rate","loan_amount","yearly_amount","term","amortization","broker_of_record","dealType","additional_properties","page","e","stopPropagation","this","setPageAndScrollPos","window","scrollY","Navigation","go","encodeQueryData","city","sessionStorage","setItem","submitCompsSearch","spActiveDeals","length","map","deal_status","deal_id","deal_name","property_address","city_state_zip","expected_closing_date","bank_name","getLoanDetails","total_complaints","total_violations","TotalComps","dealClick","IPDeal","getIPLoanDetails","ariaHideApp","contentLabel","isOpen","loading","shouldCloseOnOverlayClick","src","alt","React","Component","ServiceProviderContainer","navActions","updateNavTitle","actions","previousScrollPos","scrollTo","compsActions","resetScrollPosition","successMessage","toastShowing","Expire","closeToast","delay","variant","connect","state","navTitle","bindActionCreators","serviceProviderActions","navigationTitleActions"],"mappings":"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","file":"static/js/55.e6c0b48b.chunk.js","sourcesContent":["import * as types from \"./actionTypes\";\nimport config from \"../config\";\nimport { ajax } from \"../lib\";\nimport { tokenExpired } from \"./authenticationActions\";\n\nexport function loadServiceProviderDeals() {\n  return async (dispatch) => {\n    dispatch({ type: types.LOADING_SERVICE_PROVIDER_SUCCESS });\n    let response = await ajax({\n      url: `${config.BASE_URL}service-provider`,\n      applyAuthHeader: true,\n    });\n\n    switch (response.status) {\n      case \"E403\":\n        dispatch(tokenExpired());\n        break;\n      case \"200\":\n        dispatch({\n          type: types.LOAD_SERVICE_PROVIDER_SUCCESS,\n          data: response.data.activeDeals,\n        });\n        break;\n      default:\n        dispatch({ type: types.LOAD_SERVICE_PROVIDER_SUCCESS, data: [] });\n        break;\n    }\n  };\n}\n\nexport function noViolationsFeedbackToast() {\n  return { type: types.NO_VIOLATIONS_FEEDBACK_TOAST };\n}\n\nexport function closeViolationsFeedbackToast() {\n  return { type: types.CLOSE_VIOLATIONS_FEEDBACK_TOAST };\n}\n","import React from \"react\";\nimport Col from \"muicss/lib/react/col\";\n\nconst InfoField = (props) => (\n  <div>\n    <Col md=\"2\">\n      <p className=\"small-title deal-info-title\">{props.title}</p>\n      <p className=\"panel-info-value\">{props.value ? props.value : \"N/A\"}</p>\n    </Col>\n  </div>\n);\n\nexport default InfoField;\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport { formatTotalComps } from \"../../lib\";\n\nconst PWDeal = (props) => (\n  <div className=\"active-deals-pw\">\n    <div className=\"panel mui-panel\">\n      <div>\n        <Row\n          onClick={props.clickFunction.bind(\n            this,\n            \"SP\",\n            props.violations,\n            props.otherProperty,\n            props.dealId,\n            \"property-details\"\n          )}\n        >\n          <Col\n            className=\"panel-heading\"\n            md=\"12\"\n            onClick={props.navChange.bind(null, props.violations, props.name)}\n          >\n            <div>\n              <p className=\"panel-info-value property-title\">\n                <b>{props.name ? props.name : \"N/A\"}</b>\n              </p>\n            </div>\n          </Col>\n          <Col\n            md=\"2\"\n            onClick={props.navChange.bind(null, props.violations, props.name)}\n          >\n            <p className=\"small-title deal-info-title\">Address</p>\n            <p className=\"panel-info-value\">\n              {props.propertyName ? props.propertyName : \"\"}\n            </p>\n            <p className=\"panel-info-value\">\n              {props.address ? props.address : \"\"}\n            </p>\n            <p id=\"additional-properties\" className=\"panel-info-value\">\n              <i\n                className=\"orange-text orange-text-hover pointer\"\n                onClick={props.clickFunction.bind(\n                  this,\n                  \"SP\",\n                  props.violations,\n                  props.otherProperty,\n                  props.dealId,\n                  \"property-details\"\n                )}\n              >\n                {props.otherProperty === 0\n                  ? null\n                  : props.otherProperty === 1\n                  ? \"1 other property\"\n                  : props.otherProperty + \" other properties\"}\n              </i>\n            </p>\n          </Col>\n          <Col\n            md=\"2\"\n            onClick={props.navChange.bind(null, props.violations, props.name)}\n          >\n            <p className=\"small-title deal-info-title\">Expected closing date</p>\n            <p className=\"panel-info-value\">\n              {props.expectedClosingDate ? props.expectedClosingDate : \"N/A\"}\n            </p>\n          </Col>\n          <Col\n            md=\"2\"\n            onClick={props.navChange.bind(null, props.violations, props.name)}\n          >\n            <p className=\"small-title deal-info-title\">Main broker</p>\n            <p className=\"panel-info-value\">\n              {props.broker ? props.broker : \"N/A\"}\n            </p>\n          </Col>\n          <Col\n            md=\"12\"\n            onClick={props.navChange.bind(null, props.violations, props.name)}\n          >\n            <h3 className=\"quote-section orange-text\">Loan Details</h3>\n            <Col md=\"2\">\n              <p className=\"small-title deal-info-title\">Bank</p>\n              <p className=\"panel-info-value\">\n                {props.bank ? props.bank : \"N/A\"}\n              </p>\n            </Col>\n            {props.loan}\n          </Col>\n        </Row>\n        <Divider />\n      </div>\n      <Row>\n        <Col md=\"12\">\n          <Row className=\"comps-row\">\n            <div\n              onClick={props.compsClick.bind(\n                null,\n                props.inNYC,\n                props.propertyName,\n                props.address,\n                props.property_type_id\n              )}\n            >\n              <div className={props.violations !== null ? \"border-right\" : \"\"}>\n                <p className=\"violation-value comps\">\n                  {formatTotalComps(props.comps)}\n                  <span>Comps</span>\n                </p>\n              </div>\n            </div>\n            <div\n              onClick={props.navChange.bind(null, props.violations, props.name)}\n              className={\n                props.violations !== null ? \"comps-row-violations\" : \"hidden\"\n              }\n            >\n              <div\n                onClick={props.clickFunction.bind(\n                  this,\n                  \"SP\",\n                  props.violations,\n                  props.otherProperty,\n                  props.dealId,\n                  \"violations\"\n                )}\n              >\n                <p className=\"violation-value\">\n                  {props.violations}\n                  <span>Violations</span>\n                </p>\n              </div>\n              <div\n                onClick={props.clickFunction.bind(\n                  this,\n                  \"SP\",\n                  props.violations,\n                  props.otherProperty,\n                  props.dealId,\n                  \"violations\"\n                )}\n              >\n                <p className=\"violation-value\">\n                  {props.complaints}\n                  <span>Complaints</span>\n                </p>\n              </div>\n            </div>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  </div>\n);\n\nexport default PWDeal;\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport { formatTotalComps } from \"../../lib\";\n\nconst Property = (props) => (\n  <div className=\"active-deals-ip\">\n    <div className=\"panel mui-panel\">\n      <div>\n        <Row onClick={props.navChange.bind(null, props.violations, props.name)}>\n          <Col\n            className=\"panel-heading\"\n            md=\"12\"\n            onClick={props.clickFunction.bind(\n              this,\n              \"SP\",\n              props.violations,\n              props.otherProperty,\n              props.dealId,\n              \"property-details\"\n            )}\n          >\n            <div>\n              <p className=\"panel-info-value property-title\">\n                <b>{props.name ? props.name : \"N/A\"}</b>\n              </p>\n            </div>\n          </Col>\n          <Col\n            md=\"2\"\n            onClick={props.clickFunction.bind(\n              this,\n              \"SP\",\n              props.violations,\n              props.dealId,\n              \"violations\"\n            )}\n          >\n            <p className=\"small-title deal-info-title\">Address</p>\n            <p className=\"panel-info-value\">\n              {props.propertyName ? props.propertyName : \"\"}\n            </p>\n            <p className=\"panel-info-value\">\n              {props.address ? props.address : \"N/A\"}\n            </p>\n            <p id=\"additional-properties\" className=\"panel-info-value\">\n              <i\n                className=\"orange-text orange-text-hover pointer\"\n                onClick={props.clickFunction.bind(\n                  this,\n                  \"SP\",\n                  props.violations,\n                  props.otherProperty,\n                  props.dealId,\n                  \"property-details\"\n                )}\n              >\n                {props.otherProperty === 0\n                  ? null\n                  : props.otherProperty === 1\n                  ? \"1 other property\"\n                  : props.otherProperty + \" other properties\"}\n              </i>\n            </p>\n          </Col>\n          <Col\n            onClick={props.clickFunction.bind(\n              this,\n              \"SP\",\n              props.violations,\n              props.otherProperty,\n              props.dealId,\n              \"property-details\"\n            )}\n          >\n            {props.loan}\n          </Col>\n        </Row>\n        <Divider />\n      </div>\n      <Row>\n        <Col md=\"12\">\n          <Row className=\"comps-row\">\n            <div\n              onClick={props.compsClick.bind(\n                null,\n                props.inNYC,\n                props.propertyName,\n                props.address,\n                props.property_type_id\n              )}\n            >\n              <div className={props.violations !== null ? \"border-right\" : \"\"}>\n                <p className=\"violation-value comps\">\n                  {formatTotalComps(props.comps)}\n                  <span>Comps</span>\n                </p>\n              </div>\n            </div>\n            <div\n              className={\n                props.violations !== null ? \"comps-row-violations\" : \"hidden\"\n              }\n              onClick={props.clickFunction.bind(\n                this,\n                \"SP\",\n                props.violations,\n                props.otherProperty,\n                props.dealId,\n                \"violations\"\n              )}\n            >\n              <div\n                onClick={props.navChange.bind(\n                  null,\n                  props.violations,\n                  props.name\n                )}\n              >\n                <p className=\"violation-value\">\n                  {props.violations}\n                  <span>Violations</span>\n                </p>\n              </div>\n              <div\n                onClick={props.navChange.bind(\n                  null,\n                  props.violations,\n                  props.name\n                )}\n              >\n                <p className=\"violation-value\">\n                  {props.complaints}\n                  <span>Complaints</span>\n                </p>\n              </div>\n            </div>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  </div>\n);\n\nexport default Property;\n","import React from \"react\";\nimport { Navigation } from \"../../lib\";\nimport InfoField from \"./ActiveInfoField\";\nimport Modal from \"react-modal\";\nimport PWDeal from \"./PWDeal\";\nimport IPDeal from \"./IPDeal\";\nimport encodeQueryData from \"../common/encodeQueryData\";\n\nexport default class ServiceProviderPage extends React.Component {\n  getLoanDetails(item) {\n    let propertyInfo = [];\n    propertyInfo.push(<InfoField key=\"3\" title=\"Rate\" value={item.rate} />);\n    propertyInfo.push(\n      <InfoField key=\"1\" title=\"Loan amount\" value={item.loan_amount} />\n    );\n    propertyInfo.push(\n      <InfoField key=\"4\" title=\"Annual payments\" value={item.yearly_amount} />\n    );\n    propertyInfo.push(\n      <InfoField\n        key=\"2\"\n        title=\"Term / Amortization\"\n        value={item.term + \" / \" + item.amortization}\n      />\n    );\n    return propertyInfo;\n  }\n\n  getIPLoanDetails(item) {\n    let propertyInfo = [];\n    propertyInfo.push(\n      <InfoField key=\"1\" title=\"Loan amount\" value={item.loan_amount} />\n    );\n    propertyInfo.push(\n      <InfoField key=\"2\" title=\"Main broker\" value={item.broker_of_record} />\n    );\n    return propertyInfo;\n  }\n\n  dealClick(dealType, violations, additional_properties, dealId, page, e) {\n    e.stopPropagation();\n    if (violations != null || additional_properties > 0) {\n      this.props.setPageAndScrollPos(\"/service-provider\", window.scrollY);\n      page =\n        page === \"property-details\" && additional_properties > 0\n          ? \"property-details\"\n          : \"violations\";\n      Navigation.go(\n        `${dealType}deal-details/${dealId}/${page}?${encodeQueryData({\n          violations,\n          additional_properties,\n        })}`\n      );\n    }\n  }\n\n  compsClick(inNYC, propertyName, city, property_type_id) {\n    this.props.setPageAndScrollPos(\"/service-provider\", window.scrollY);\n    sessionStorage.setItem(\"comps_inNYC\", inNYC);\n    this.props.submitCompsSearch(`${propertyName} ${city}`, property_type_id);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.activeDeals.spActiveDeals.length ? (\n          this.props.activeDeals.spActiveDeals.map((item) =>\n            item.deal_status === \"2\" ? (\n              <PWDeal\n                key={item.deal_id}\n                property_type_id={item.property_type_id}\n                dealId={item.deal_id}\n                name={item.deal_name}\n                propertyName={item.property_address}\n                address={item.city_state_zip}\n                otherProperty={item.additional_properties}\n                expectedClosingDate={item.expected_closing_date}\n                broker={item.broker_of_record}\n                navChange={this.props.navChange}\n                bank={item.bank_name}\n                inNYC={item.inNYC}\n                loan={this.getLoanDetails(item)}\n                complaints={item.total_complaints}\n                violations={item.total_violations}\n                comps={item.TotalComps}\n                compsClick={this.compsClick.bind(this)}\n                clickFunction={this.dealClick.bind(this)}\n              />\n            ) : item.deal_status === \"1\" ? (\n              <IPDeal\n                key={item.deal_id}\n                dealId={item.deal_id}\n                inNYC={item.inNYC}\n                property_type_id={item.property_type_id}\n                name={item.deal_name}\n                propertyName={item.property_address}\n                address={item.city_state_zip}\n                otherProperty={item.additional_properties}\n                loan={this.getIPLoanDetails(item)}\n                complaints={item.total_complaints}\n                violations={item.total_violations}\n                comps={item.TotalComps}\n                compsClick={this.compsClick.bind(this)}\n                navChange={this.props.navChange}\n                clickFunction={this.dealClick.bind(this)}\n              />\n            ) : (\n              \"\"\n            )\n          )\n        ) : (\n          <div>\n            <div>\n              <div className=\"grey-circle\">\n                <i className=\"material-icons\">warning</i>\n              </div>\n              <h2 className=\"no-results\">No Active Deals Now</h2>\n            </div>\n          </div>\n        )}\n        <Modal\n          className=\"loading-modal\"\n          ariaHideApp={false}\n          contentLabel=\"modal\"\n          isOpen={this.props.loading}\n          shouldCloseOnOverlayClick={false}\n        >\n          <div className={this.props.loading ? \"centered-spinner\" : \"hidden\"}>\n            <img\n              src=\"/images/icons/spin.svg\"\n              className=\"loading-spinner\"\n              alt=\"loading spinner\"\n            />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as serviceProviderActions from \"../../actions/serviceProviderActions\";\nimport ServiceProviderPage from \"./ServiceProviderPage\";\nimport * as navigationTitleActions from \"../../actions/navigationTitleActions\";\nimport * as compsActions from \"../../actions/compsActions\";\nimport Expire from \"../common/Expire\";\nimport Button from \"muicss/lib/react/button\";\n\nclass ServiceProviderContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.navChange = this.navChange.bind(this);\n  }\n\n  async componentDidMount() {\n    this.props.navActions.updateNavTitle(\"Service Provider\");\n    await this.props.actions.loadServiceProviderDeals();\n    if (\n      this.props.comps.previousScrollPos &&\n      this.props.comps.previousScrollPos.length\n    ) {\n      window.scrollTo(\n        0,\n        this.props.comps.previousScrollPos[\n          this.props.comps.previousScrollPos.length - 1\n        ]\n      );\n      this.props.compsActions.resetScrollPosition();\n    }\n  }\n\n  navChange(violations, title) {\n    if (violations >= 1) {\n      this.props.navActions.updateNavTitle(title);\n    } else {\n      this.props.actions.noViolationsFeedbackToast();\n    }\n  }\n\n  closeViolationsFeedbackToast() {\n    this.props.actions.closeViolationsFeedbackToast();\n  }\n\n  render() {\n    let successMessage = null;\n    if (this.props.spActiveDeals.toastShowing) {\n      successMessage = (\n        <Expire\n          closeToast={this.closeViolationsFeedbackToast.bind(this)}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>No violation data available for this deal</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.closeViolationsFeedbackToast.bind(this)}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    return (\n      <div>\n        {successMessage}\n        <ServiceProviderPage\n          activeDeals={this.props.spActiveDeals}\n          loading={this.props.spActiveDeals.loading}\n          navChange={this.navChange}\n          setPageAndScrollPos={this.props.compsActions.setPageAndScrollPos}\n          submitCompsSearch={this.props.compsActions.submitCompsSearch}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    spActiveDeals: state.spActiveDeals,\n    title: state.navTitle,\n    comps: state.comps,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(serviceProviderActions, dispatch),\n    navActions: bindActionCreators(navigationTitleActions, dispatch),\n    compsActions: bindActionCreators(compsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ServiceProviderContainer);\n"],"sourceRoot":""}