{"version":3,"sources":["components/common/ConfirmationModal.js","components/contacts/ContactForm.js"],"names":["ConfirmationModal","className","isOpen","this","props","ariaHideApp","contentLabel","shouldCloseOnOverlayClick","message","variant","onClick","close","confirm","confirmBtnText","React","Component","ContactForm","state","firstName","lastName","nickname","salutation","companyName","jobDescription","corporateTitle","contactBday","address","address1","address2","city","zip_code","home_address1","home_address2","home_city","home_state","home_zip_code","contactInfo","cp_id","contact_type","description","hide_from_directory","is_primary","phoneContactInfo","faxContactInfo","emailContactInfo","websiteContactInfo","contactTypes","source","holidayGreeting","gaveGift","contactNotes","fullContactTypeArray","localContactTypeArray","stateList","phoneContactInfoTypes","faxContactInfoTypes","emailContactInfoTypes","websiteContactInfoTypes","defaultPhoneType","defaultFaxType","defaultEmailType","defaultWebsiteType","defaultPhoneHide","defaultFaxHide","defaultEmailHide","defaultWebsiteHide","showCompanyAddressEdit","showHomeAddressEdit","showMoreFields","showContactTypeDropdown","showUnsavedChangesModal","errorMessage","bind","closeUnsavedChangesModal","firstNameChange","lastNameChange","nicknameChange","prefixTypeChange","companyChange","jobDescriptionChange","titleChange","birthdayChange","addressChange","companyAddressToggleView","homeAddressToggleView","validateEmail","validatePhone","validateWebsite","contactTypeToggleDropdown","contactTypeCheckboxChange","sourceChange","holidayGreetingChange","gaveGiftChange","noteChange","toggleMoreFields","save","contactId","contact","setState","first_name","last_name","nick_name","company_name","job_description","corporate_title","contact_birthday","phone_contact_info","fax_contact_info","email_contact_info","website_contact_info","contact_types","holiday","gave_gift","contact_notes","phoneTypes","faxTypes","emailTypes","websiteTypes","contactTypesList","contactInfoTypesList","filter","t","includes","list_type_id","forEach","item","push","id","parseInt","type_id","value","type_title","isChecked","itemFromIsCheckedList","itemFromFullArray","nextProps","loading","submitting","submitContact","success","Navigation","go","encodeURIComponent","page","searchType","encodeQueryData","type","clearContact","goBack","e","target","name","currentTarget","contains","relatedTarget","test","contactType","contactInfoChange","isValid","attributes","splice","concat","checked","i","length","j","lendingToggleDropdown","invalidFields","join","replace","c","valid","contactTypeArray","map","submitContactForm","moment","trim","contactTypeCounter","contactTypeValue","index","key","onChange","label","abb","hint","prefixTypesList","jobDescriptionTypesList","onBlur","autoFocus","formatAddress","onFocus","addContactInfo","autoComplete","defaultValue","changeDefaultContactType","defaultChecked","changeDefaultIsHidden","htmlFor","updateContactInfo","validateContactInfo","deleteContactInfo","substring","disabled","required","placeholder","holidayGreetingTypesList","gaveGiftTypesList","allowClear","dateValue","update","src","alt"],"mappings":"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","file":"static/js/7.95e2b3f2.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-modal\";\nimport Button from \"muicss/lib/react/button\";\n\nclass ConfirmationModal extends React.Component {\n  render() {\n    return (\n      <Modal\n        className=\"delete-modal\"\n        isOpen={this.props.isOpen}\n        ariaHideApp={false}\n        contentLabel=\"Modal\"\n        shouldCloseOnOverlayClick={true}\n      >\n        <p className=\"bold-text\">{this.props.message}</p>\n        <div className=\"modal-btns\">\n          <Button variant=\"flat\" onClick={this.props.close}>\n            CANCEL\n          </Button>\n          <Button variant=\"flat\" onClick={this.props.confirm}>\n            {this.props.confirmBtnText ? this.props.confirmBtnText : \"YES\"}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default ConfirmationModal;\n","import React from \"react\";\nimport { Navigation } from \"../../lib\";\nimport Row from \"muicss/lib/react/row\";\nimport Button from \"muicss/lib/react/button\";\nimport Input from \"muicss/lib/react/input\";\nimport Select from \"muicss/lib/react/select\";\nimport Option from \"muicss/lib/react/option\";\nimport ConfirmationModal from \"../common/ConfirmationModal\";\nimport MultiSelectCheckbox from \"../common/MultiSelectCheckbox\";\nimport moment from \"moment\";\nimport { formatAddress } from \"../../lib\";\nimport encodeQueryData from \"../common/encodeQueryData\";\nimport FormattedDatePicker from \"../common/FormattedDatePicker\";\nimport Modal from \"react-modal\";\n\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      nickname: \"\",\n      salutation: \"\",\n      companyName: \"\",\n      jobDescription: 0,\n      corporateTitle: \"\",\n      contactBday: null,\n      address: {\n        address1: \"\",\n        address2: \"\",\n        city: \"\",\n        state: \"\",\n        zip_code: \"\",\n        home_address1: \"\",\n        home_address2: \"\",\n        home_city: \"\",\n        home_state: \"\",\n        home_zip_code: \"\",\n      },\n      contactInfo: {\n        cp_id: null,\n        contact_type: null,\n        description: \"\",\n        hide_from_directory: 0,\n        is_primary: 0,\n      },\n      phoneContactInfo: [],\n      faxContactInfo: [],\n      emailContactInfo: [],\n      websiteContactInfo: [],\n      contactTypes: [],\n      source: \"\",\n      holidayGreeting: 0,\n      gaveGift: 0,\n      contactNotes: \"\",\n      fullContactTypeArray: [],\n      localContactTypeArray: [],\n      stateList: [],\n      phoneContactInfoTypes: [],\n      faxContactInfoTypes: [],\n      emailContactInfoTypes: [],\n      websiteContactInfoTypes: [],\n      defaultPhoneType: null,\n      defaultFaxType: null,\n      defaultEmailType: null,\n      defaultWebsiteType: null,\n      defaultPhoneHide: false,\n      defaultFaxHide: false,\n      defaultEmailHide: false,\n      defaultWebsiteHide: false,\n      showCompanyAddressEdit: false,\n      showHomeAddressEdit: false,\n      showMoreFields: false,\n      showContactTypeDropdown: false,\n      showUnsavedChangesModal: false,\n      errorMessage: \"\",\n    };\n\n    this.close = this.close.bind(this);\n    this.closeUnsavedChangesModal = this.closeUnsavedChangesModal.bind(this);\n    this.firstNameChange = this.firstNameChange.bind(this);\n    this.lastNameChange = this.lastNameChange.bind(this);\n    this.nicknameChange = this.nicknameChange.bind(this);\n    this.prefixTypeChange = this.prefixTypeChange.bind(this);\n    this.companyChange = this.companyChange.bind(this);\n    this.jobDescriptionChange = this.jobDescriptionChange.bind(this);\n    this.titleChange = this.titleChange.bind(this);\n    this.birthdayChange = this.birthdayChange.bind(this);\n    this.addressChange = this.addressChange.bind(this);\n    this.companyAddressToggleView = this.companyAddressToggleView.bind(this);\n    this.homeAddressToggleView = this.homeAddressToggleView.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.validatePhone = this.validatePhone.bind(this);\n    this.validateWebsite = this.validateWebsite.bind(this);\n    this.contactTypeToggleDropdown = this.contactTypeToggleDropdown.bind(this);\n    this.contactTypeCheckboxChange = this.contactTypeCheckboxChange.bind(this);\n    this.sourceChange = this.sourceChange.bind(this);\n    this.holidayGreetingChange = this.holidayGreetingChange.bind(this);\n    this.gaveGiftChange = this.gaveGiftChange.bind(this);\n    this.noteChange = this.noteChange.bind(this);\n    this.toggleMoreFields = this.toggleMoreFields.bind(this);\n    this.save = this.save.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.contactId && this.props.contact) {\n      let contact = this.props.contact;\n      this.setState({\n        firstName: contact.first_name,\n        lastName: contact.last_name,\n        nickname: contact.nick_name,\n        salutation: contact.salutation,\n        companyName: contact.company_name,\n        jobDescription: contact.job_description,\n        corporateTitle: contact.corporate_title,\n        contactBday: contact.contact_birthday ? contact.contact_birthday : null,\n        address: contact.address\n          ? {\n              address1: contact.address.address1\n                ? contact.address.address1\n                : \"\",\n              address2: contact.address.address2\n                ? contact.address.address2\n                : \"\",\n              city: contact.address.city ? contact.address.city : \"\",\n              state: contact.address.state ? contact.address.state : \"\",\n              zip_code: contact.address.zip_code\n                ? contact.address.zip_code\n                : \"\",\n              home_address1: contact.address.home_address1\n                ? contact.address.home_address1\n                : \"\",\n              home_address2: contact.address.home_address2\n                ? contact.address.home_address2\n                : \"\",\n              home_city: contact.address.home_city\n                ? contact.address.home_city\n                : \"\",\n              home_state: contact.address.home_state\n                ? contact.address.home_state\n                : \"\",\n              home_zip_code: contact.address.home_zip_code\n                ? contact.address.home_zip_code\n                : \"\",\n            }\n          : this.state.address,\n        phoneContactInfo: contact.phone_contact_info\n          ? contact.phone_contact_info\n          : [],\n        faxContactInfo: contact.fax_contact_info\n          ? contact.fax_contact_info\n          : [],\n        emailContactInfo: contact.email_contact_info\n          ? contact.email_contact_info\n          : [],\n        websiteContactInfo: contact.website_contact_info\n          ? contact.website_contact_info\n          : [],\n        contactTypes: contact.contact_types ? contact.contact_types : [],\n        source: contact.source,\n        holidayGreeting: contact.holiday,\n        gaveGift: contact.gave_gift || 0,\n        contactNotes: contact.contact_notes,\n      });\n    }\n\n    let phoneTypes = [1, 7, 8, 10];\n    let faxTypes = [4, 9];\n    let emailTypes = [13, 15];\n    let websiteTypes = [14];\n    this.setState(\n      {\n        fullContactTypeArray: this.props.contactTypesList,\n        phoneContactInfoTypes: this.props.contactInfoTypesList.filter((t) =>\n          phoneTypes.includes(t.list_type_id)\n        ),\n        faxContactInfoTypes: this.props.contactInfoTypesList.filter((t) =>\n          faxTypes.includes(t.list_type_id)\n        ),\n        emailContactInfoTypes: this.props.contactInfoTypesList.filter((t) =>\n          emailTypes.includes(t.list_type_id)\n        ),\n        websiteContactInfoTypes: this.props.contactInfoTypesList.filter((t) =>\n          websiteTypes.includes(t.list_type_id)\n        ),\n        stateList: this.props.stateList,\n      },\n      function () {\n        this.setState({\n          defaultPhoneType: this.state.phoneContactInfoTypes[0].list_type_id,\n          defaultFaxType: this.state.faxContactInfoTypes[0].list_type_id,\n          defaultEmailType: this.state.emailContactInfoTypes[0].list_type_id,\n          defaultWebsiteType: this.state.websiteContactInfoTypes[0]\n            .list_type_id,\n        });\n\n        this.state.fullContactTypeArray.forEach((item) => {\n          this.state.localContactTypeArray.push({\n            id: parseInt(item.type_id, 10),\n            value: item.type_title,\n            isChecked: false,\n          });\n        });\n\n        this.state.contactTypes.forEach((itemFromIsCheckedList) => {\n          this.state.localContactTypeArray.forEach((itemFromFullArray) => {\n            if (parseInt(itemFromIsCheckedList, 10) === itemFromFullArray.id) {\n              itemFromFullArray.isChecked = true;\n            }\n          });\n        });\n      }\n    );\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!nextProps.loading && this.state.submitting) {\n      if (nextProps.submitContact.success) {\n        Navigation.go(\n          `/contacts/details/${nextProps.contactId}/${encodeURIComponent(\n            this.props.page\n          )}` +\n            (this.props.searchType\n              ? `?${encodeQueryData({ type: this.props.searchType })}`\n              : \"\")\n        );\n      } else {\n        this.setState({ errorMessage: nextProps.submitContact.message });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.clearContact();\n  }\n\n  close() {\n    if (!this.state.showUnsavedChangesModal) {\n      return this.setState({ showUnsavedChangesModal: true });\n    }\n    Navigation.goBack();\n  }\n\n  closeUnsavedChangesModal() {\n    this.setState({ showUnsavedChangesModal: false });\n  }\n\n  firstNameChange(e) {\n    this.setState({ firstName: e.target.value });\n  }\n\n  lastNameChange(e) {\n    this.setState({ lastName: e.target.value });\n  }\n\n  nicknameChange(e) {\n    this.setState({ nickname: e.target.value });\n  }\n\n  prefixTypeChange(e) {\n    this.setState({ salutation: e.target.value });\n  }\n\n  companyChange(e) {\n    this.setState({ companyName: e.target.value });\n  }\n\n  jobDescriptionChange(e) {\n    this.setState({\n      jobDescription: e.target.value === \"\" ? 0 : parseInt(e.target.value, 10),\n    });\n  }\n\n  titleChange(e) {\n    this.setState({ corporateTitle: e.target.value });\n  }\n\n  birthdayChange(e) {\n    this.setState({ contactBday: e });\n  }\n\n  addressChange(e) {\n    this.setState({\n      address: {\n        ...this.state.address,\n        [e.target.name]: e.target.value === \"null\" ? \"\" : e.target.value,\n      },\n    });\n  }\n\n  companyAddressToggleView(e) {\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      this.setState({\n        showCompanyAddressEdit: !this.state.showCompanyAddressEdit,\n      });\n    }\n  }\n\n  homeAddressToggleView(e) {\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      this.setState({ showHomeAddressEdit: !this.state.showHomeAddressEdit });\n    }\n  }\n\n  validatePhone(value) {\n    var re = /^(?:(?:\\+?1\\s*(?:[.-]\\s*)?)?(?:\\(\\s*([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9])\\s*\\)|([2-9]1[02-9]|[2-9][02-8]1|[2-9][02-8][02-9]))\\s*(?:[.-]\\s*)?)?([2-9]1[02-9]|[2-9][02-9]1|[2-9][02-9]{2})\\s*(?:[.-]\\s*)?([0-9]{4})(?:\\s*(?:#|x\\.?|ext\\.?|extension)\\s*(\\d+))?$/;\n    return re.test(value);\n  }\n\n  validateEmail(value) {\n    var re = /[^@]+@[^@]+\\.[^@]+/;\n    return re.test(value);\n  }\n\n  validateWebsite(value) {\n    var re = /^^(https:|)(www.)?([^]+)\\.(\\w{2}|(com|net|org|edu|int|mil|gov|arpa|biz|aero|name|coop|info|pro|museum))$/;\n    return re.test(value);\n  }\n\n  updateContactInfo(contactType, id, e) {\n    let contactInfo;\n    switch (contactType) {\n      case \"Phone\":\n        contactInfo = [...this.state.phoneContactInfo];\n        this.contactInfoChange(contactInfo, id, e);\n        this.setState({ phoneContactInfo: contactInfo });\n        break;\n      case \"Fax\":\n        contactInfo = [...this.state.faxContactInfo];\n        this.contactInfoChange(contactInfo, id, e);\n        this.setState({ faxContactInfo: contactInfo });\n        break;\n      case \"Email\":\n        contactInfo = [...this.state.emailContactInfo];\n        this.contactInfoChange(contactInfo, id, e);\n        this.setState({ emailContactInfo: contactInfo });\n        break;\n      case \"Website\":\n        contactInfo = [...this.state.websiteContactInfo];\n        this.contactInfoChange(contactInfo, id, e);\n        this.setState({ websiteContactInfo: contactInfo });\n        break;\n      default:\n        break;\n    }\n  }\n\n  validateContactInfo(contactType, id, e) {\n    let contactInfo;\n    let isValid;\n    switch (contactType) {\n      case \"Phone\":\n        contactInfo = [...this.state.phoneContactInfo];\n        isValid = this.validatePhone(e.target.value);\n        if (!isValid) {\n          contactInfo[id][\"errorMessage\"] = \"Not a valid phone number\";\n        } else {\n          contactInfo[id][\"errorMessage\"] = \"\";\n        }\n        this.setState({ phoneContactInfo: contactInfo });\n        break;\n      case \"Fax\":\n        contactInfo = [...this.state.faxContactInfo];\n        isValid = this.validatePhone(e.target.value);\n        if (!isValid) {\n          contactInfo[id][\"errorMessage\"] = \"Not a valid fax number\";\n        } else {\n          contactInfo[id][\"errorMessage\"] = \"\";\n        }\n        this.setState({ faxContactInfo: contactInfo });\n        break;\n      case \"Email\":\n        contactInfo = [...this.state.emailContactInfo];\n        isValid = this.validateEmail(e.target.value);\n        if (!isValid) {\n          contactInfo[id][\"errorMessage\"] = \"Not a valid email\";\n        } else {\n          contactInfo[id][\"errorMessage\"] = \"\";\n        }\n        this.setState({ emailContactInfo: contactInfo });\n        break;\n      case \"Website\":\n        contactInfo = [...this.state.websiteContactInfo];\n        isValid = this.validateWebsite(e.target.value);\n        if (!isValid) {\n          contactInfo[id][\"errorMessage\"] = \"Not a valid website\";\n        } else {\n          contactInfo[id][\"errorMessage\"] = \"\";\n        }\n        this.setState({ websiteContactInfo: contactInfo });\n        break;\n      default:\n        break;\n    }\n  }\n\n  contactInfoChange(contactInfo, id, e) {\n    let name = e.target.attributes.name.value;\n\n    name === \"hide_from_directory\"\n      ? (contactInfo[id][name] = !contactInfo[id][name] === true ? 1 : 0)\n      : (contactInfo[id][name] = e.target.value);\n    return contactInfo;\n  }\n\n  deleteContactInfo(contactType, e) {\n    switch (contactType) {\n      case \"Phone\":\n        let phoneContactInfo = [...this.state.phoneContactInfo];\n        phoneContactInfo.splice(e.target.id, 1);\n        this.setState({ phoneContactInfo });\n        break;\n      case \"Fax\":\n        let faxContactInfo = [...this.state.faxContactInfo];\n        faxContactInfo.splice(e.target.id, 1);\n        this.setState({ faxContactInfo });\n        break;\n      case \"Email\":\n        let emailContactInfo = [...this.state.emailContactInfo];\n        emailContactInfo.splice(e.target.id, 1);\n        this.setState({ emailContactInfo });\n        break;\n      case \"Website\":\n        let websiteContactInfo = [...this.state.websiteContactInfo];\n        websiteContactInfo.splice(e.target.id, 1);\n        this.setState({ websiteContactInfo });\n        break;\n      default:\n        break;\n    }\n  }\n\n  addContactInfo(contactType) {\n    switch (contactType) {\n      case \"Phone\":\n        let phoneContactInfo = this.state.phoneContactInfo.concat({\n          cp_id: null,\n          contact_type: this.state.defaultPhoneType,\n          description: \"\",\n          hide_from_directory: this.state.defaultPhoneHide,\n          is_primary: 0,\n        });\n        return this.setState({ phoneContactInfo });\n      case \"Fax\":\n        let faxContactInfo = this.state.faxContactInfo.concat({\n          cp_id: null,\n          contact_type: this.state.defaultFaxType,\n          description: \"\",\n          hide_from_directory: this.state.defaultFaxHide,\n          is_primary: 0,\n        });\n        return this.setState({ faxContactInfo });\n      case \"Email\":\n        let emailContactInfo = this.state.emailContactInfo.concat({\n          cp_id: null,\n          contact_type: this.state.defaultEmailType,\n          description: \"\",\n          hide_from_directory: this.state.defaultEmailHide,\n          is_primary: 0,\n        });\n        return this.setState({ emailContactInfo });\n      case \"Website\":\n        let websiteContactInfo = this.state.websiteContactInfo.concat({\n          cp_id: null,\n          contact_type: this.state.defaultWebsiteType,\n          description: \"\",\n          hide_from_directory: this.state.defaultWebsiteHide,\n          is_primary: 0,\n        });\n        return this.setState({ websiteContactInfo });\n      default:\n        break;\n    }\n  }\n\n  changeDefaultContactType(contactType, e) {\n    switch (contactType) {\n      case \"Phone\":\n        return this.setState({ defaultPhoneType: e.target.value });\n      case \"Fax\":\n        return this.setState({ defaultFaxType: e.target.value });\n      case \"Email\":\n        return this.setState({ defaultEmailType: e.target.value });\n      case \"Website\":\n        return this.setState({ defaultWebsiteType: e.target.value });\n      default:\n        break;\n    }\n  }\n\n  changeDefaultIsHidden(contactType, e) {\n    switch (contactType) {\n      case \"Phone\":\n        return this.setState({ defaultPhoneHide: e.target.checked });\n      case \"Fax\":\n        return this.setState({ defaultFaxHide: e.target.checked });\n      case \"Email\":\n        return this.setState({ defaultEmailHide: e.target.checked });\n      case \"Website\":\n        return this.setState({ defaultWebsiteHide: e.target.checked });\n      default:\n        break;\n    }\n  }\n\n  contactTypeToggleDropdown() {\n    this.setState({\n      showContactTypeDropdown: !this.state.showContactTypeDropdown,\n    });\n  }\n\n  contactTypeCheckboxChange(id, isChecked) {\n    if (isChecked && id !== 0) {\n      for (var i = 0; i < this.state.localContactTypeArray.length; i++) {\n        if (this.state.localContactTypeArray[i].id === id) {\n          let localContactTypeArray = this.state.localContactTypeArray;\n          localContactTypeArray[i].isChecked = true;\n          this.setState({ localContactTypeArray: localContactTypeArray });\n          break;\n        }\n      }\n    }\n\n    if (!isChecked && id !== 0) {\n      for (var j = 0; j < this.state.localContactTypeArray.length; j++) {\n        if (this.state.localContactTypeArray[j].id === id) {\n          let localContactTypeArray = this.state.localContactTypeArray;\n          localContactTypeArray[j].isChecked = false;\n          this.setState({ localContactTypeArray: localContactTypeArray });\n          break;\n        }\n      }\n    }\n\n    this.setState({ lendingToggleDropdown: true });\n  }\n\n  sourceChange(e) {\n    this.setState({ source: e.target.value });\n  }\n\n  holidayGreetingChange(e) {\n    this.setState({\n      holidayGreeting: e.target.value === \"\" ? 0 : parseInt(e.target.value, 10),\n    });\n  }\n\n  gaveGiftChange(e) {\n    this.setState({\n      gaveGift: e.target.value === \"\" ? 0 : parseInt(e.target.value, 10),\n    });\n  }\n\n  noteChange(e) {\n    this.setState({ contactNotes: e.target.value });\n  }\n\n  toggleMoreFields() {\n    this.setState({ showMoreFields: !this.state.showMoreFields });\n  }\n\n  valid() {\n    let invalidFields = [];\n    if (this.state.firstName === \"\") {\n      invalidFields.push(\"First Name\");\n    }\n    if (this.state.lastName === \"\") {\n      invalidFields.push(\"Last Name\");\n    }\n    if (\n      !this.state.phoneContactInfo.length &&\n      !this.state.faxContactInfo.length &&\n      !this.state.emailContactInfo.length &&\n      !this.state.websiteContactInfo.length\n    ) {\n      invalidFields.push(\"at least one Contact Info\");\n    }\n\n    if (invalidFields.length) {\n      //separate each invalid field with comma. last field should have 'and' instead\n      let errorMessage = invalidFields\n        .join(\", \")\n        .replace(/,(?!.*,)/gim, \" and\");\n      errorMessage += \" is required!\";\n      this.setState({ errorMessage });\n      return false;\n    } else if (\n      this.state.phoneContactInfo.filter(\n        (c) => c.errorMessage && c.errorMessage !== \"\"\n      ).length > 0 ||\n      this.state.faxContactInfo.filter(\n        (c) => c.errorMessage && c.errorMessage !== \"\"\n      ).length > 0 ||\n      this.state.emailContactInfo.filter(\n        (c) => c.errorMessage && c.errorMessage !== \"\"\n      ).length > 0 ||\n      this.state.websiteContactInfo.filter(\n        (c) => c.errorMessage && c.errorMessage !== \"\"\n      ).length > 0\n    ) {\n      this.setState({ errorMessage: \"\" });\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  save() {\n    if (this.valid()) {\n      var contactTypeArray = [];\n      this.state.localContactTypeArray.forEach((item) => {\n        if (item.isChecked === true) {\n          contactTypeArray.push(item.id);\n        }\n      });\n\n      let phoneContactInfo = this.state.phoneContactInfo;\n      phoneContactInfo.map((c) => delete c.errorMessage);\n      if (\n        phoneContactInfo.length > 0 &&\n        phoneContactInfo.filter((contactInfo) => contactInfo.is_primary === 1)\n          .length === 0\n      ) {\n        phoneContactInfo[0].is_primary = 1;\n      }\n\n      let faxContactInfo = this.state.faxContactInfo;\n      faxContactInfo.map((c) => delete c.errorMessage);\n      if (\n        faxContactInfo.length > 0 &&\n        faxContactInfo.filter((contactInfo) => contactInfo.is_primary === 1)\n          .length === 0\n      ) {\n        faxContactInfo[0].is_primary = 1;\n      }\n\n      let emailContactInfo = this.state.emailContactInfo;\n      emailContactInfo.map((c) => delete c.errorMessage);\n      if (\n        emailContactInfo.length > 0 &&\n        emailContactInfo.filter((contactInfo) => contactInfo.is_primary === 1)\n          .length === 0\n      ) {\n        emailContactInfo[0].is_primary = 1;\n      }\n\n      let websiteContactInfo = this.state.websiteContactInfo;\n      websiteContactInfo.map((c) => delete c.errorMessage);\n      if (\n        websiteContactInfo.length > 0 &&\n        websiteContactInfo.filter((contactInfo) => contactInfo.is_primary === 1)\n          .length === 0\n      ) {\n        websiteContactInfo[0].is_primary = 1;\n      }\n\n      this.props.submitContactForm(\n        this.state.firstName,\n        this.state.lastName,\n        this.state.nickname,\n        this.state.salutation,\n        this.state.companyName,\n        this.state.jobDescription,\n        this.state.corporateTitle,\n        moment(this.state.contactBday).isValid()\n          ? this.state.contactBday\n          : null,\n        this.state.address,\n        phoneContactInfo,\n        faxContactInfo,\n        emailContactInfo,\n        websiteContactInfo,\n        contactTypeArray,\n        this.state.source.trim(),\n        this.state.holidayGreeting || 0,\n        this.state.gaveGift,\n        this.state.contactNotes,\n        this.props.contactId ? this.props.contactId : null\n      );\n\n      this.setState({ submitting: true });\n    }\n  }\n\n  render() {\n    let address = this.state.address;\n    var contactTypeCounter = 0;\n    var contactTypeValue = \"\";\n    this.state.localContactTypeArray &&\n      this.state.localContactTypeArray.forEach((item) => {\n        if (item.isChecked) {\n          if (contactTypeCounter >= 1) {\n            contactTypeValue += \", \";\n          }\n          contactTypeValue += item.value;\n          contactTypeCounter++;\n        }\n      });\n\n    let contactTypeArray = this.state.localContactTypeArray.map(\n      (item, index) => (\n        <MultiSelectCheckbox\n          key={index}\n          onChange={this.contactTypeCheckboxChange}\n          isChecked={item.isChecked}\n          id={item.id}\n          label={item.value}\n        />\n      )\n    );\n\n    let stateList = this.state.stateList.map((item, index) => (\n      <Option key={index} label={item.state} value={item.abb} />\n    ));\n\n    let phoneContactInfoTypes = this.state.phoneContactInfoTypes.map(\n      (item, index) => (\n        <Option key={index} label={item.value} value={item.list_type_id} />\n      )\n    );\n\n    let faxContactInfoTypes = this.state.faxContactInfoTypes.map(\n      (item, index) => (\n        <Option key={index} label={item.value} value={item.list_type_id} />\n      )\n    );\n\n    let emailContactInfoTypes = this.state.emailContactInfoTypes.map(\n      (item, index) => (\n        <Option key={index} label={item.value} value={item.list_type_id} />\n      )\n    );\n\n    let websiteContactInfoTypes = this.state.websiteContactInfoTypes.map(\n      (item, index) => (\n        <Option key={index} label={item.value} value={item.list_type_id} />\n      )\n    );\n\n    return (\n      <div>\n        <Row className=\"sub-header\">\n          <div className=\"float-left\">\n            <div className=\"sub-header-close\">\n              <i className=\"material-icons\" onClick={this.close}>\n                close\n              </i>\n            </div>\n            <p className=\"white page-title\">\n              {this.props.contactId > 0 ? \"Edit\" : \"New\"} Contact\n            </p>\n          </div>\n          <div>\n            <Button\n              variant=\"flat\"\n              className=\"contact-save-btn\"\n              onClick={this.save}\n            >\n              Save\n            </Button>\n          </div>\n        </Row>\n        <div className=\"create-contact sub-header-padding\">\n          <div className=\"create-contact-row\">\n            <i className=\"material-icons accent-text\">person</i>\n            <Input\n              hint=\"First Name\"\n              className=\"input-left\"\n              value={this.state.firstName}\n              onChange={this.firstNameChange}\n            />\n            <Input\n              hint=\"Last Name\"\n              value={this.state.lastName}\n              onChange={this.lastNameChange}\n            />\n          </div>\n          <div\n            className={\n              this.state.showMoreFields\n                ? \"create-contact-row no-icon-row\"\n                : \"hidden\"\n            }\n          >\n            <Select\n              className={\n                this.state.salutation === \"\"\n                  ? \"input-left placeholder\"\n                  : \"input-left\"\n              }\n              value={this.state.salutation}\n              onChange={this.prefixTypeChange}\n            >\n              <Option className=\"hidden\" label=\"Prefix\" value=\"\" />\n              <Option label=\"Please Select...\" value=\"\" />\n              {this.props.prefixTypesList.map((type, index) => {\n                return (\n                  <Option key={index} label={type.value} value={type.value} />\n                );\n              })}\n            </Select>\n            <Input\n              hint=\"Nickname\"\n              value={this.state.nickname}\n              onChange={this.nicknameChange}\n            />\n          </div>\n          <div className=\"create-contact-row\">\n            <i className=\"material-icons accent-text\">business</i>\n            <Input\n              hint=\"Company\"\n              className=\"input-left\"\n              value={this.state.companyName}\n              onChange={this.companyChange}\n            />\n            <Input\n              hint=\"Title\"\n              value={this.state.corporateTitle}\n              onChange={this.titleChange}\n            />\n          </div>\n          <div\n            className={\n              this.state.showMoreFields ? \"create-contact-row\" : \"hidden\"\n            }\n          >\n            <Select\n              className={\n                this.state.jobDescription === 0\n                  ? \"input-left flex-half no-icon-row placeholder\"\n                  : \"input-left flex-half no-icon-row\"\n              }\n              value={this.state.jobDescription}\n              onChange={this.jobDescriptionChange}\n            >\n              <Option className=\"hidden\" label=\"Job Description\" value={0} />\n              <Option label=\"Please Select...\" value=\"\" />\n              {this.props.jobDescriptionTypesList.map((type, index) => {\n                return (\n                  <Option\n                    key={index}\n                    label={type.value}\n                    value={type.list_type_id}\n                  />\n                );\n              })}\n            </Select>\n          </div>\n          {this.state.showCompanyAddressEdit ? (\n            <div onBlur={this.companyAddressToggleView}>\n              <div className=\"create-contact-row\">\n                <Input\n                  autoFocus\n                  name=\"address1\"\n                  hint=\"Address 1\"\n                  className=\"input-left no-icon-row\"\n                  value={address.address1}\n                  onChange={this.addressChange}\n                />\n                <Input\n                  name=\"address2\"\n                  hint=\"Address 2\"\n                  value={address.address2}\n                  onChange={this.addressChange}\n                />\n              </div>\n              <div className=\"create-contact-row\">\n                <div className=\"flex\">\n                  <Input\n                    name=\"city\"\n                    hint=\"City\"\n                    className=\"input-left no-icon-row\"\n                    value={address.city}\n                    onChange={this.addressChange}\n                  />\n                  <Select\n                    name=\"state\"\n                    value={address.state}\n                    onChange={this.addressChange}\n                    className={address.state === \"\" ? \"placeholder\" : \"\"}\n                  >\n                    <Option className=\"hidden\" label=\"State\" value=\"\" />\n                    <Option label=\"Please Select...\" value=\"null\" />\n                    {stateList}\n                  </Select>\n                </div>\n                <Input\n                  name=\"zip_code\"\n                  hint=\"Zip\"\n                  className=\"input-zip\"\n                  value={address.zip_code}\n                  onChange={this.addressChange}\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"create-contact-row\">\n              <Input\n                hint=\"Company Address\"\n                className=\"no-icon-row\"\n                value={formatAddress(\n                  address.address1,\n                  address.address2,\n                  address.city,\n                  address.state,\n                  address.zip_code\n                )}\n                onFocus={this.companyAddressToggleView}\n              />\n            </div>\n          )}\n\n          <div className=\"create-contact-row\">\n            <i className=\"material-icons accent-text\">phone</i>\n            <Input\n              hint=\"Phone\"\n              className=\"input-left\"\n              onFocus={this.addContactInfo.bind(this, \"Phone\")}\n              autoComplete=\"disabled\"\n            />\n            <div className=\"flex-justify-center\">\n              <Select\n                className=\"input-left full-width\"\n                defaultValue={this.state.defaultPhoneType}\n                onChange={this.changeDefaultContactType.bind(this, \"Phone\")}\n              >\n                {phoneContactInfoTypes}\n              </Select>\n              <div className=\"toggle-group\">\n                <p>Hide</p>\n                <div className=\"toggle-switch\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"phoneTemplate\"\n                    className=\"cbx hidden\"\n                    defaultChecked={this.state.defaultPhoneHide}\n                    onChange={this.changeDefaultIsHidden.bind(this, \"Phone\")}\n                  />\n                  <label\n                    id=\"phoneTemplate\"\n                    htmlFor=\"phoneTemplate\"\n                    className=\"lbl\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.phoneContactInfo &&\n            this.state.phoneContactInfo.map((item, index) => {\n              let type = \"Phone\";\n              return (\n                <div key={index}>\n                  <div className=\"create-contact-row\">\n                    <i className=\"material-icons accent-text\">phone</i>\n                    <Input\n                      autoFocus\n                      hint={type}\n                      name=\"description\"\n                      className=\"input-left\"\n                      value={item.description}\n                      onChange={this.updateContactInfo.bind(this, type, index)}\n                      onBlur={this.validateContactInfo.bind(this, type, index)}\n                    />\n                    <div className=\"flex-justify-center\">\n                      <Select\n                        name=\"contact_type\"\n                        className=\"input-left full-width\"\n                        value={item.contact_type}\n                        onChange={this.updateContactInfo.bind(\n                          this,\n                          type,\n                          index\n                        )}\n                      >\n                        {phoneContactInfoTypes}\n                      </Select>\n                      <div className=\"toggle-group\">\n                        <p>Hide</p>\n                        <div className=\"toggle-switch\">\n                          <input\n                            id={type + \"_\" + index}\n                            type=\"checkbox\"\n                            className=\"cbx hidden\"\n                            defaultChecked={item.hide_from_directory}\n                          />\n                          <label\n                            name=\"hide_from_directory\"\n                            htmlFor={type + \"_\" + index}\n                            className=\"lbl\"\n                            onClick={this.updateContactInfo.bind(\n                              this,\n                              type,\n                              index\n                            )}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <i\n                      id={index}\n                      className=\"material-icons delete-contact-info\"\n                      onClick={this.deleteContactInfo.bind(this, type)}\n                    >\n                      close\n                    </i>\n                  </div>\n                  <div className=\"create-contact-row no-icon-row\">\n                    <span className=\"help-block\">{item.errorMessage}</span>\n                  </div>\n                </div>\n              );\n            })}\n\n          <div className=\"create-contact-row\">\n            <i className=\"material-icons accent-text\">print</i>\n            <Input\n              hint=\"Fax\"\n              className=\"input-left\"\n              onFocus={this.addContactInfo.bind(this, \"Fax\")}\n              autoComplete=\"disabled\"\n            />\n            <div className=\"flex-justify-center\">\n              <Select\n                className=\"input-left full-width\"\n                defaultValue={this.state.defaultFaxType}\n                onChange={this.changeDefaultContactType.bind(this, \"Fax\")}\n              >\n                {faxContactInfoTypes}\n              </Select>\n              <div className=\"toggle-group\">\n                <p>Hide</p>\n                <div className=\"toggle-switch\">\n                  <input\n                    id=\"faxTemplate\"\n                    type=\"checkbox\"\n                    className=\"cbx hidden\"\n                    defaultChecked={this.state.defaultFaxHide}\n                    onChange={this.changeDefaultIsHidden.bind(this, \"Fax\")}\n                  />\n                  <label\n                    id=\"faxTemplate\"\n                    htmlFor=\"faxTemplate\"\n                    className=\"lbl\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.faxContactInfo &&\n            this.state.faxContactInfo.map((item, index) => {\n              let type = \"Fax\";\n              return (\n                <div key={index}>\n                  <div className=\"create-contact-row\">\n                    <i className=\"material-icons accent-text\">print</i>\n                    <Input\n                      autoFocus\n                      hint={type}\n                      name=\"description\"\n                      className=\"input-left\"\n                      value={item.description}\n                      onChange={this.updateContactInfo.bind(this, type, index)}\n                      onBlur={this.validateContactInfo.bind(this, type, index)}\n                    />\n                    <div className=\"flex-justify-center\">\n                      <Select\n                        name=\"contact_type\"\n                        className=\"input-left full-width\"\n                        defaultValue={item.contact_type}\n                        onChange={this.updateContactInfo.bind(\n                          this,\n                          type,\n                          index\n                        )}\n                      >\n                        {faxContactInfoTypes}\n                      </Select>\n                      <div className=\"toggle-group\">\n                        <p>Hide</p>\n                        <div className=\"toggle-switch\">\n                          <input\n                            id={type + \"_\" + index}\n                            type=\"checkbox\"\n                            className=\"cbx hidden\"\n                            defaultChecked={item.hide_from_directory}\n                          />\n                          <label\n                            name=\"hide_from_directory\"\n                            htmlFor={type + \"_\" + index}\n                            className=\"lbl\"\n                            onClick={this.updateContactInfo.bind(\n                              this,\n                              type,\n                              index\n                            )}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <i\n                      id={index}\n                      className=\"material-icons delete-contact-info\"\n                      onClick={this.deleteContactInfo.bind(this, type)}\n                    >\n                      close\n                    </i>\n                  </div>\n                  <div className=\"create-contact-row no-icon-row\">\n                    <span className=\"help-block\">{item.errorMessage}</span>\n                  </div>\n                </div>\n              );\n            })}\n\n          <div className=\"create-contact-row\">\n            <i className=\"material-icons accent-text\">email</i>\n            <Input\n              hint=\"Email\"\n              className=\"input-left\"\n              onFocus={this.addContactInfo.bind(this, \"Email\")}\n              autoComplete=\"disabled\"\n            />\n            <div className=\"flex-justify-center\">\n              <Select\n                className=\"input-left full-width\"\n                defaultValue={this.state.defaultEmailType}\n                onChange={this.changeDefaultContactType.bind(this, \"Email\")}\n              >\n                {emailContactInfoTypes}\n              </Select>\n              <div className=\"toggle-group\">\n                <p>Hide</p>\n                <div className=\"toggle-switch\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"emailTemplate\"\n                    className=\"cbx hidden\"\n                    defaultChecked={this.state.defaultEmailHide}\n                    onChange={this.changeDefaultIsHidden.bind(this, \"Email\")}\n                  />\n                  <label\n                    id=\"emailTemplate\"\n                    htmlFor=\"emailTemplate\"\n                    className=\"lbl\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {this.state.emailContactInfo &&\n            this.state.emailContactInfo.map((item, index) => {\n              let type = \"Email\";\n              return (\n                <div key={index}>\n                  <div className=\"create-contact-row\">\n                    <i className=\"material-icons accent-text\">email</i>\n                    <Input\n                      autoFocus\n                      hint={type}\n                      name=\"description\"\n                      className=\"input-left\"\n                      value={item.description}\n                      onChange={this.updateContactInfo.bind(this, type, index)}\n                      onBlur={this.validateContactInfo.bind(this, type, index)}\n                    />\n                    <div className=\"flex-justify-center\">\n                      <Select\n                        name=\"contact_type\"\n                        className=\"input-left full-width\"\n                        value={item.contact_type}\n                        onChange={this.updateContactInfo.bind(\n                          this,\n                          type,\n                          index\n                        )}\n                      >\n                        {emailContactInfoTypes}\n                      </Select>\n                      <div className=\"toggle-group\">\n                        <p>Hide</p>\n                        <div className=\"toggle-switch\">\n                          <input\n                            id={type + \"_\" + index}\n                            type=\"checkbox\"\n                            className=\"cbx hidden\"\n                            defaultChecked={item.hide_from_directory}\n                          />\n                          <label\n                            name=\"hide_from_directory\"\n                            htmlFor={type + \"_\" + index}\n                            className=\"lbl\"\n                            onClick={this.updateContactInfo.bind(\n                              this,\n                              type,\n                              index\n                            )}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <i\n                      id={index}\n                      className=\"material-icons delete-contact-info\"\n                      onClick={this.deleteContactInfo.bind(this, type)}\n                    >\n                      close\n                    </i>\n                  </div>\n\n                  <div className=\"create-contact-row no-icon-row\">\n                    <span className=\"help-block\">{item.errorMessage}</span>\n                  </div>\n                </div>\n              );\n            })}\n\n          <div className=\"create-contact-row\">\n            <i className=\"material-icons accent-text\">language</i>\n            <Input\n              hint=\"Website\"\n              className=\"input-left\"\n              onFocus={this.addContactInfo.bind(this, \"Website\")}\n              autoComplete=\"disabled\"\n            />\n            <div className=\"flex-justify-center\">\n              <Select\n                className=\"input-left full-width\"\n                defaultValue={this.state.defaultWebsiteType}\n                onChange={this.changeDefaultContactType.bind(this, \"Website\")}\n              >\n                {websiteContactInfoTypes}\n              </Select>\n              <div className=\"toggle-group\">\n                <p>Hide</p>\n                <div className=\"toggle-switch\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"websiteTemplate\"\n                    className=\"cbx hidden\"\n                    defaultChecked={this.state.defaultEmailHide}\n                    onChange={this.changeDefaultIsHidden.bind(this, \"Website\")}\n                  />\n                  <label\n                    id=\"websiteTemplate\"\n                    htmlFor=\"websiteTemplate\"\n                    className=\"lbl\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {this.state.websiteContactInfo &&\n            this.state.websiteContactInfo.map((item, index) => {\n              let type = \"Website\";\n              return (\n                <div key={index}>\n                  <div className=\"create-contact-row\">\n                    <i className=\"material-icons accent-text\">language</i>\n                    <Input\n                      autoFocus\n                      hint={type}\n                      name=\"description\"\n                      className=\"input-left\"\n                      value={item.description}\n                      onChange={this.updateContactInfo.bind(this, type, index)}\n                      onBlur={this.validateContactInfo.bind(this, type, index)}\n                    />\n                    <div className=\"flex-justify-center\">\n                      <Select\n                        name=\"contact_type\"\n                        className=\"input-left full-width\"\n                        value={item.contact_type}\n                        onChange={this.updateContactInfo.bind(\n                          this,\n                          type,\n                          index\n                        )}\n                      >\n                        {websiteContactInfoTypes}\n                      </Select>\n                      <div className=\"toggle-group\">\n                        <p>Hide</p>\n                        <div className=\"toggle-switch\">\n                          <input\n                            id={type + \"_\" + index}\n                            type=\"checkbox\"\n                            className=\"cbx hidden\"\n                            defaultChecked={item.hide_from_directory}\n                          />\n                          <label\n                            name=\"hide_from_directory\"\n                            htmlFor={type + \"_\" + index}\n                            className=\"lbl\"\n                            onClick={this.updateContactInfo.bind(\n                              this,\n                              type,\n                              index\n                            )}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <i\n                      id={index}\n                      className=\"material-icons delete-contact-info\"\n                      onClick={this.deleteContactInfo.bind(this, type)}\n                    >\n                      close\n                    </i>\n                  </div>\n\n                  <div className=\"create-contact-row no-icon-row\">\n                    <span className=\"help-block\">{item.errorMessage}</span>\n                  </div>\n                </div>\n              );\n            })}\n\n          <div\n            className={\n              this.state.showMoreFields ? \"create-contact-row\" : \"hidden\"\n            }\n          >\n            <i className=\"material-icons accent-text\">label</i>\n            <div\n              onClick={this.contactTypeToggleDropdown.bind(this)}\n              className=\"contact-fake-select input-left\"\n            >\n              <Input\n                onChange={() => ({})}\n                hint=\"Contact Types\"\n                value={\n                  contactTypeValue.length > 120\n                    ? contactTypeValue.substring(0, 120) + \"...\"\n                    : contactTypeValue\n                }\n                disabled\n                required={true}\n              />\n              <i\n                onClick={this.contactTypeToggleDropdown.bind(this)}\n                className=\"material-icons\"\n              >\n                arrow_drop_down\n              </i>\n              <div\n                className={\n                  this.state.showContactTypeDropdown\n                    ? \"lc-dropdown-box mui--z1\"\n                    : \"hidden\"\n                }\n              >\n                {contactTypeArray}\n              </div>\n            </div>\n            <Input\n              placeholder=\"Source\"\n              onChange={this.sourceChange}\n              value={this.state.source}\n            />\n          </div>\n          <div\n            className={\n              this.state.showMoreFields\n                ? \"create-contact-row no-icon-row\"\n                : \"hidden\"\n            }\n          >\n            <Select\n              className={\n                this.state.holidayGreeting === 0\n                  ? \"input-left placeholder\"\n                  : \"input-left\"\n              }\n              value={this.state.holidayGreeting}\n              onChange={this.holidayGreetingChange}\n            >\n              <Option className=\"hidden\" label=\"Holiday (Greeting)\" value={0} />\n              <Option label=\"Please Select...\" value=\"\" />\n              {this.props.holidayGreetingTypesList.map((type, index) => {\n                return (\n                  <Option\n                    key={index}\n                    label={type.value}\n                    value={type.list_type_id}\n                  />\n                );\n              })}\n            </Select>\n            <Select\n              className={this.state.gaveGift === 0 ? \"placeholder\" : \"\"}\n              value={this.state.gaveGift}\n              onChange={this.gaveGiftChange}\n            >\n              <Option className=\"hidden\" label=\"Gift\" value={0} />\n              <Option label=\"Please Select...\" value=\"\" />\n              {this.props.gaveGiftTypesList.map((type, index) => {\n                return (\n                  <Option\n                    key={index}\n                    label={type.value}\n                    value={type.list_type_id}\n                  />\n                );\n              })}\n            </Select>\n          </div>\n          <div\n            className={\n              this.state.showMoreFields\n                ? \"create-contact-row no-icon-row birthday-row\"\n                : \"hidden\"\n            }\n          >\n            <FormattedDatePicker\n              allowClear={false}\n              dateValue={this.state.contactBday}\n              update={this.birthdayChange}\n              className=\"input-left flex-half\"\n            />\n          </div>\n          {this.state.showMoreFields ? (\n            this.state.showHomeAddressEdit ? (\n              <div onBlur={this.homeAddressToggleView}>\n                <div className=\"create-contact-row\">\n                  <i className=\"material-icons accent-text\">location_on</i>\n                  <Input\n                    autoFocus\n                    name=\"home_address1\"\n                    hint=\"Address 1\"\n                    className=\"input-left\"\n                    value={address.home_address1}\n                    onChange={this.addressChange}\n                  />\n                  <Input\n                    name=\"home_address2\"\n                    hint=\"Address 2\"\n                    value={address.home_address2}\n                    onChange={this.addressChange}\n                  />\n                </div>\n                <div className=\"create-contact-row\">\n                  <div className=\"flex\">\n                    <Input\n                      name=\"home_city\"\n                      hint=\"City\"\n                      className=\"input-left no-icon-row\"\n                      value={address.home_city}\n                      onChange={this.addressChange}\n                    />\n                    <Select\n                      name=\"home_state\"\n                      value={address.home_state}\n                      onChange={this.addressChange}\n                      className={address.home_state === \"\" ? \"placeholder\" : \"\"}\n                    >\n                      <Option className=\"hidden\" label=\"State\" value=\"\" />\n                      <Option label=\"Please Select...\" value=\"null\" />\n                      {stateList}\n                    </Select>\n                  </div>\n                  <Input\n                    name=\"home_zip_code\"\n                    hint=\"Zip\"\n                    className=\"input-zip\"\n                    value={address.home_zip_code}\n                    onChange={this.addressChange}\n                  />\n                </div>\n              </div>\n            ) : (\n              <div className=\"create-contact-row\">\n                <i className=\"material-icons accent-text\">location_on</i>\n                <Input\n                  hint=\"Home Address\"\n                  value={formatAddress(\n                    address.home_address1,\n                    address.home_address2,\n                    address.home_city,\n                    address.home_state,\n                    address.home_zip_code\n                  )}\n                  onFocus={this.homeAddressToggleView}\n                />\n              </div>\n            )\n          ) : (\n            \"\"\n          )}\n          <div className=\"create-contact-row\">\n            <i className=\"material-icons accent-text\">description</i>\n            <Input\n              hint=\"Notes\"\n              className=\"input-left flex-half\"\n              onChange={this.noteChange}\n              value={this.state.contactNotes}\n            />\n          </div>\n          <p className=\"error-block\">{this.state.errorMessage}</p>\n          <div className=\"create-contact-row more-fields\">\n            <p\n              className=\"orange-text bold-text uppercase-text pointer\"\n              onClick={this.toggleMoreFields}\n            >\n              {this.state.showMoreFields ? \"Less Fields\" : \"More Fields\"}\n            </p>\n          </div>\n        </div>\n\n        <ConfirmationModal\n          isOpen={this.state.showUnsavedChangesModal}\n          message=\"Changes you may have made may not be saved. Are you sure you would like to leave the page?\"\n          close={this.closeUnsavedChangesModal}\n          confirm={this.close}\n        />\n\n        <Modal\n          className=\"comps-loading-modal\"\n          ariaHideApp={false}\n          contentLabel=\"modal\"\n          isOpen={this.state.submitting && this.props.loading}\n          shouldCloseOnOverlayClick={false}\n        >\n          <div className=\"centered-spinner\">\n            <img\n              src=\"/images/icons/spin.svg\"\n              className=\"loading-spinner\"\n              alt=\"loading spinner\"\n            />\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n"],"sourceRoot":""}