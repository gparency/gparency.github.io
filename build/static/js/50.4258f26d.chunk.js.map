{"version":3,"sources":["components/common/ConfirmationModal.js","components/dealDetails/DealNote.js","components/dealDetails/DealNotesPage.js","components/dealDetails/DealNotesContainer.js"],"names":["ConfirmationModal","className","isOpen","this","props","ariaHideApp","contentLabel","shouldCloseOnOverlayClick","message","variant","onClick","close","confirm","confirmBtnText","React","Component","DealNote","state","showDeleteModal","showMarkDoneModal","openConfirmDeleteModal","bind","closeConfirmDeleteModal","openConfirmMarkDoneModal","closeConfirmMarkDoneModal","markNoteDone","deleteNote","updateNoteReview","setState","note","notes_id","dealId","qtsPlacer","updateNoteReviewed","md","notes","moment","due_date","isValid","note_is_mine","assignee","src","alt","format","viewOnly","isNoteDone","Navigation","go","window","location","pathname","last_edit","note_by","DealNotesPage","loading","Loader","reminderNotes","length","map","item","index","key","doneNotes","noDealNotes","DealNotesContainer","dealDetailsActions","loadAllDealNotes","match","params","getDealById","deal","dealDetails","toast","showSuccessToast","Expire","closeToast","closeDealNoteSuccessToast","delay","showErrorToast","closeDealNoteErrorToast","reminderDealNotes","dealNotes","doneDealNotes","parseInt","qts_placer","deal_status","DealStatusType","CL","deleteDealNote","markNoteAsDone","connect","dispatch","bindActionCreators"],"mappings":"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","file":"static/js/50.4258f26d.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-modal\";\nimport Button from \"muicss/lib/react/button\";\n\nclass ConfirmationModal extends React.Component {\n  render() {\n    return (\n      <Modal\n        className=\"delete-modal\"\n        isOpen={this.props.isOpen}\n        ariaHideApp={false}\n        contentLabel=\"Modal\"\n        shouldCloseOnOverlayClick={true}\n      >\n        <p className=\"bold-text\">{this.props.message}</p>\n        <div className=\"modal-btns\">\n          <Button variant=\"flat\" onClick={this.props.close}>\n            CANCEL\n          </Button>\n          <Button variant=\"flat\" onClick={this.props.confirm}>\n            {this.props.confirmBtnText ? this.props.confirmBtnText : \"YES\"}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default ConfirmationModal;\n","import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\nimport moment from \"moment\";\nimport { Navigation } from \"../../lib\";\nimport ConfirmationModal from \"../common/ConfirmationModal\";\n\nclass DealNote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showDeleteModal: false,\n      showMarkDoneModal: false,\n    };\n\n    this.openConfirmDeleteModal = this.openConfirmDeleteModal.bind(this);\n    this.closeConfirmDeleteModal = this.closeConfirmDeleteModal.bind(this);\n    this.openConfirmMarkDoneModal = this.openConfirmMarkDoneModal.bind(this);\n    this.closeConfirmMarkDoneModal = this.closeConfirmMarkDoneModal.bind(this);\n    this.markNoteDone = this.markNoteDone.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n    this.updateNoteReview = this.updateNoteReview.bind(this);\n  }\n\n  openConfirmMarkDoneModal() {\n    this.setState({ showMarkDoneModal: true });\n  }\n\n  closeConfirmMarkDoneModal() {\n    this.setState({ showMarkDoneModal: false });\n  }\n\n  markNoteDone() {\n    this.setState({ showMarkDoneModal: false });\n    this.props.markNoteDone(this.props.note.notes_id, this.props.dealId);\n    this.updateNoteReview();\n  }\n\n  closeConfirmDeleteModal() {\n    this.setState({ showDeleteModal: false });\n  }\n\n  openConfirmDeleteModal() {\n    this.setState({ showDeleteModal: true });\n  }\n\n  deleteNote() {\n    this.setState({ showDeleteModal: false });\n    this.props.deleteNote(this.props.note.notes_id, this.props.dealId);\n    this.updateNoteReview();\n  }\n\n  updateNoteReview() {\n    if (this.props.qtsPlacer) {\n      this.props.updateNoteReviewed(this.props.dealId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"deal-details-note\">\n        <Row>\n          <Col md=\"9\">\n            <p className=\"deal-details-note-text\">{this.props.note.notes}</p>\n            {moment(this.props.note.due_date).isValid() &&\n            (this.props.note.note_is_mine === 1 || this.props.note.assignee) ? (\n              <p className=\"accent-text xs-text\">\n                <img src=\"/images/icons/reminder.png\" alt=\"reminder\" />\n                Remind {this.props.note.assignee || \"me\"} on{\" \"}\n                {moment(this.props.note.due_date).format(\"L\")} at{\" \"}\n                {moment(this.props.note.due_date).format(\"LT\")}\n              </p>\n            ) : (\n              \"\"\n            )}\n          </Col>\n          {!this.props.viewOnly &&\n            this.props.note.note_is_mine === 1 &&\n            !this.props.isNoteDone && (\n              <Col md=\"3\">\n                <div className=\"deal-details-note-actions\">\n                  <i\n                    className=\"material-icons\"\n                    onClick={() =>\n                      Navigation.go(\n                        `${window.location.pathname}/edit/${this.props.note.notes_id}`\n                      )\n                    }\n                  >\n                    mode_edit\n                  </i>\n                  <i\n                    className=\"material-icons\"\n                    onClick={this.openConfirmDeleteModal}\n                  >\n                    delete\n                  </i>\n                  <i\n                    className=\"material-icons\"\n                    onClick={this.openConfirmMarkDoneModal}\n                  >\n                    check\n                  </i>\n                </div>\n              </Col>\n            )}\n        </Row>\n        <Row>\n          <Col md=\"9\">\n            {moment(this.props.note.last_edit).isValid() && (\n              <p className=\"accent-text-light xxs-text\">\n                last edited by {this.props.note.note_by} on{\" \"}\n                {moment(this.props.note.last_edit).format(\"L\")}\n              </p>\n            )}\n          </Col>\n        </Row>\n        <Divider />\n\n        <ConfirmationModal\n          isOpen={this.state.showDeleteModal}\n          message=\"Are you sure you want to delete?\"\n          close={this.closeConfirmDeleteModal}\n          confirm={this.deleteNote}\n        />\n\n        <ConfirmationModal\n          isOpen={this.state.showMarkDoneModal}\n          message=\"Are you sure you want to mark this note as done?\"\n          close={this.closeConfirmMarkDoneModal}\n          confirm={this.markNoteDone}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DealNote;\n","import React from \"react\";\nimport DealNote from \"./DealNote\";\nimport Loader from \"../common/Loader\";\nimport { Navigation } from \"../../lib\";\n\nclass DealNotesPage extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.loading ? (\n          <Loader />\n        ) : (\n          <div className=\"deal-details-notes\">\n            {this.props.reminderNotes.length >= 1 ? (\n              <div>\n                <p className=\"accent-text small-text\">Reminders</p>\n                <div className=\"panel mui-panel\">\n                  <div className=\"panel-body\">\n                    {this.props.reminderNotes.map((item, index) => (\n                      <DealNote\n                        key={index}\n                        note={item}\n                        dealId={this.props.dealId}\n                        viewOnly={this.props.viewOnly}\n                        qtsPlacer={this.props.qtsPlacer}\n                        isNoteDone={false}\n                        deleteNote={this.props.deleteNote}\n                        markNoteDone={this.props.markNoteDone}\n                        updateNoteReviewed={this.props.updateNoteReviewed}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {this.props.notes.length >= 1 ? (\n              <div>\n                <p className=\"accent-text small-text\">Notes</p>\n                <div className=\"panel mui-panel\">\n                  <div className=\"panel-body\">\n                    {this.props.notes.map((item, index) => (\n                      <DealNote\n                        key={index}\n                        note={item}\n                        dealId={this.props.dealId}\n                        viewOnly={this.props.viewOnly}\n                        qtsPlacer={this.props.qtsPlacer}\n                        isNoteDone={false}\n                        deleteNote={this.props.deleteNote}\n                        markNoteDone={this.props.markNoteDone}\n                        updateNoteReviewed={this.props.updateNoteReviewed}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {this.props.doneNotes.length >= 1 ? (\n              <div>\n                <p className=\"accent-text small-text\">Done</p>\n                <div className=\"panel mui-panel\">\n                  <div className=\"panel-body\">\n                    {this.props.doneNotes.map((item, index) => (\n                      <DealNote\n                        key={index}\n                        note={item}\n                        dealId={this.props.dealId}\n                        viewOnly={this.props.viewOnly}\n                        qtsPlacer={this.props.qtsPlacer}\n                        isNoteDone={true}\n                        deleteNote={this.props.deleteNote}\n                        markNoteDone={this.props.markNoteDone}\n                        updateNoteReviewed={this.props.updateNoteReviewed}\n                      />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n            {!this.props.viewOnly && (\n              <button\n                className=\"new-note\"\n                onClick={() => Navigation.go(`${window.location.pathname}/add`)}\n              >\n                <i className=\"material-icons\">add</i>\n              </button>\n            )}\n\n            <div\n              className={\n                this.props.noDealNotes && !this.props.loading ? \"\" : \"hidden\"\n              }\n            >\n              <div className=\"grey-circle\">\n                <img src=\"/images/icons/note-multiple.png\" alt=\"notes\" />\n              </div>\n              <h2 className=\"no-results\">No Notes</h2>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DealNotesPage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport DealNotesPage from \"./DealNotesPage\";\nimport Expire from \"../common/Expire\";\nimport Button from \"muicss/lib/react/button\";\nimport * as dealDetailsActions from \"../../actions/dealDetailsActions\";\nimport { DealStatusType } from \"../../lib\";\n\nclass DealNotesContainer extends React.Component {\n  componentDidMount() {\n    this.props.dealDetailsActions.loadAllDealNotes(\n      this.props.match.params.dealId\n    );\n    this.props.dealDetailsActions.getDealById(this.props.match.params.dealId);\n  }\n\n  render() {\n    let deal = this.props.dealDetails.deal ? this.props.dealDetails.deal : null;\n    let toast = null;\n    if (this.props.dealDetails.showSuccessToast) {\n      toast = (\n        <Expire\n          closeToast={this.props.dealDetailsActions.closeDealNoteSuccessToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.dealDetails.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.dealDetailsActions.closeDealNoteSuccessToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    if (this.props.dealDetails.showErrorToast) {\n      toast = (\n        <Expire\n          closeToast={this.props.dealDetailsActions.closeDealNoteErrorToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.dealDetails.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.dealDetailsActions.closeDealNoteErrorToast}\n            >\n              Dismiss\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    return (\n      <div>\n        <DealNotesPage\n          loading={this.props.dealDetails.loading}\n          reminderNotes={this.props.dealDetails.reminderDealNotes}\n          notes={this.props.dealDetails.dealNotes}\n          doneNotes={this.props.dealDetails.doneDealNotes}\n          dealId={parseInt(this.props.match.params.dealId, 10)}\n          qtsPlacer={deal ? deal.qts_placer : false}\n          viewOnly={\n            this.props.dealDetails.deal.deal_status === DealStatusType.CL\n          }\n          noDealNotes={this.props.dealDetails.noDealNotes}\n          deleteNote={this.props.dealDetailsActions.deleteDealNote}\n          markNoteDone={this.props.dealDetailsActions.markNoteAsDone}\n          updateNoteReviewed={this.props.dealDetailsActions.updateNoteReviewed}\n        />\n        {toast}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dealDetails: state.dealDetails,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    dealDetailsActions: bindActionCreators(dealDetailsActions, dispatch),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DealNotesContainer);\n"],"sourceRoot":""}