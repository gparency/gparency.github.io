{"version":3,"sources":["components/missingQuotesBroker/missingQuotesBrokerContainer.js"],"names":["missingQuotesBrokerContainer","props","toggleToggle","setState","toggle","state","this","sessionStorage","setItem","isSearchActive","search","searchWords","match","searchURL","forEach","elem","i","length","actions","loadDeals","searchChange","e","value","target","onSubmitSearch","preventDefault","getItem","routeToMissingQuotesByBroker","bind","navActions","updateNavTitle","comps","previousScrollPos","window","scrollTo","compsActions","resetScrollPosition","nextProps","missingQuotes","loading","localScrollPos","setTimeout","scrollToContainer","loadMissingQuotesbyBank","deal_id","setPageAndScrollPos","scrollY","Navigation","go","banker_id","broker_id","broker_name","open","isMobile","isNativeApp","matchMedia","matches","innerWidth","successMessage","quotePassSuccessToast","closeToast","closeMQDealPassSuccessToast","delay","className","variant","onClick","quoteSnoozeSuccessToast","closeMQSnoozeSuccessToast","message","quoteIrrelevantSuccessToast","closeMQIrrelevantSuccessToast","mq","toast","show","missingQuotesActions","success","errorMQBToast","closeUpdateMQBToast","updateNoteModalSuccess","closeUpdateNoteMQModalToast","updateQTSStarModal","closeQTSStarModalToast","xs","onSubmit","id","src","alt","onChange","type","placeholder","undefined","lg","checked","htmlFor","style","width","ref","isOpen","ariaHideApp","contentLabel","shouldCloseOnOverlayClick","noQuotes","noSearchQuotes","isSearchDeal","quotes","authentication","JSON","parse","localStorage","passDeal","snoozeDeal","irrelevantDeal","submitNoteModal","updateNote","submitDealNoteModal","updateDealNote","noAdminViewData","localAdminBankId","bank_id","loadingAdminData","getAdminViewData","removeAdminViewData","getContactFullInfo","getFullContactInfo","updateDealQTSStar","updateBankQTSStar","contact","loadingContact","noContact","openBankDD","openDealDD","React","Component","connect","missingQuotesBroker","title","navTitle","dispatch","bindActionCreators","missingQuotesBrokerActions","navigationTitleActions"],"mappings":"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","file":"static/js/81.821e8853.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as missingQuotesBrokerActions from \"../../actions/missingQuotesBrokerActions\";\nimport * as missingQuotesActions from \"../../actions/missingQuotesActions\";\nimport * as navigationTitleActions from \"../../actions/navigationTitleActions\";\nimport * as compsActions from \"../../actions/compsActions\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport MissingQuotesBrokerPage from \"./missingQuotesBrokerPage\";\nimport Modal from \"react-modal\";\nimport Button from \"muicss/lib/react/button\";\nimport Expire from \"../common/Expire\";\nimport { Navigation } from \"../../lib\";\n\nclass missingQuotesBrokerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSearchActive: false,\n      toggle:\n        sessionStorage.getItem(\"MQB_toggle\") === false ||\n        sessionStorage.getItem(\"MQB_toggle\") === \"false\"\n          ? false\n          : true,\n      search: sessionStorage.getItem(\"mq_broker_search\")\n        ? sessionStorage.getItem(\"mq_broker_search\")\n        : \"\",\n    };\n    this.routeToMissingQuotesByBroker = this.routeToMissingQuotesByBroker.bind(\n      this\n    );\n  }\n\n  toggleToggle = () => {\n    this.setState({ toggle: !this.state.toggle }, function () {\n      if (!this.state.toggle) {\n        sessionStorage.setItem(\"mq_broker_active_banker_id\", 0);\n      }\n      sessionStorage.setItem(\"MQB_toggle\", this.state.toggle);\n      if (this.state.isSearchActive || this.state.search) {\n        let searchWords = this.state.search.match(/\\w+/g);\n        let searchURL = \"\";\n        searchWords.forEach((elem, i) => {\n          if (searchWords.length - 1 === i) {\n            searchURL += elem;\n          } else {\n            searchURL += elem + \"+\";\n          }\n        });\n        this.props.actions.search(\n          searchURL,\n          this.state.toggle ? \"bank\" : \"deal\"\n        );\n      } else {\n        this.loadDeals();\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.props.navActions.updateNavTitle(\"Missing Quotes\");\n    if (!sessionStorage.getItem(\"MQB_toggle\")) {\n      sessionStorage.setItem(\"MQB_toggle\", this.state.toggle);\n    }\n    if (this.state.search && this.state.search.length) {\n      let searchWords = this.state.search.match(/\\w+/g);\n      let searchURL = \"\";\n      searchWords.forEach((elem, i) => {\n        if (searchWords.length - 1 === i) {\n          searchURL += elem;\n        } else {\n          searchURL += elem + \"+\";\n        }\n      });\n      this.props.actions.search(\n        searchURL,\n        sessionStorage.getItem(\"MQB_toggle\") === \"true\" ? \"bank\" : \"deal\"\n      );\n    } else if (!this.state.search.length) {\n      this.loadDeals();\n    } else if (sessionStorage.getItem(\"MQB_toggle\") === false) {\n      this.setState({ toggle: false }, function () {\n        this.loadDeals();\n      });\n    }\n  }\n\n  scrollToContainer() {\n    if (\n      this.props.comps.previousScrollPos &&\n      this.props.comps.previousScrollPos.length\n    ) {\n      window.scrollTo(\n        0,\n        this.props.comps.previousScrollPos[\n          this.props.comps.previousScrollPos.length - 1\n        ]\n      );\n      this.props.compsActions.resetScrollPosition();\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.missingQuotes.loading && !nextProps.missingQuotes.loading) {\n      if (!nextProps.missingQuotes.loading) {\n        if (\n          this.props.comps.previousScrollPos &&\n          this.props.comps.previousScrollPos.length\n        ) {\n          var localScrollPos = this.props.comps.previousScrollPos;\n          window.scrollTo(0, localScrollPos[localScrollPos.length - 1]);\n        }\n        setTimeout(() => {\n          this.props.compsActions.resetScrollPosition();\n        }, 600);\n      }\n      setTimeout(() => this.scrollToContainer(), 0);\n    }\n  }\n\n  loadDeals() {\n    this.props.actions.loadMissingQuotesbyBank(\n      this.state.toggle ? \"bank\" : \"deal\"\n    );\n  }\n\n  searchChange = (e) => {\n    const { value } = e.target;\n    this.setState((state) => ({\n      ...state,\n      search: value,\n      isSearchActive: !!value.length,\n    }));\n  };\n\n  onSubmitSearch = (e) => {\n    e.preventDefault();\n    const { search, toggle } = this.state;\n    sessionStorage.setItem(\"mq_broker_search\", search);\n    if (search.length) {\n      let searchWords = search.match(/\\w+/g);\n      let searchURL = \"\";\n      searchWords.forEach((elem, i) => {\n        if (searchWords.length - 1 === i) {\n          searchURL += elem;\n        } else {\n          searchURL += elem + \"+\";\n        }\n      });\n      this.props.actions.search(searchURL, toggle ? \"bank\" : \"deal\");\n    } else {\n      this.loadDeals();\n    }\n  };\n\n  openDealDD(deal_id) {\n    this.props.compsActions.setPageAndScrollPos(\n      \"/missingQuotesbroker\",\n      window.scrollY\n    );\n    Navigation.go(`/MQB-deal-details/${deal_id}/bank-quotes`);\n  }\n\n  openBankDD(deal_id, banker_id) {\n    sessionStorage.setItem(\"mq_broker_active_banker_id\", banker_id);\n    this.props.compsActions.setPageAndScrollPos(\n      \"/missingQuotesbroker\",\n      window.scrollY\n    );\n    Navigation.go(`/MQB-deal-details/${deal_id}/bank-quotes`);\n  }\n\n  routeToMissingQuotesByBroker(broker_id, broker_name) {\n    window.open(`/missingQuotesBrokerByBroker/${broker_name}/${broker_id}`);\n  }\n\n  render() {\n    const isMobile =\n      window.isNativeApp ||\n      window.matchMedia(\"(display-mode: standalone)\").matches ||\n      window.innerWidth < 901;\n    let successMessage = null;\n    if (this.props.missingQuotes.quotePassSuccessToast) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeMQDealPassSuccessToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>The deal has successfully been passed</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeMQDealPassSuccessToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.quoteSnoozeSuccessToast) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeMQSnoozeSuccessToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.missingQuotes.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeMQSnoozeSuccessToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.quoteIrrelevantSuccessToast) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeMQIrrelevantSuccessToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>The deal has successfully been marked irrelevant</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeMQIrrelevantSuccessToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.mq.toast && this.props.mq.toast.show) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.missingQuotesActions.closeToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.mq.toast.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.missingQuotesActions.closeToast}\n            >\n              {this.props.mq.toast.success ? \"Done\" : \"Dismiss\"}\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.errorMQBToast) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeUpdateMQBToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.missingQuotes.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeUpdateMQBToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.updateNoteModalSuccess) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeUpdateNoteMQModalToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.missingQuotes.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeUpdateNoteMQModalToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n\n    if (this.props.missingQuotes.updateQTSStarModal) {\n      successMessage = (\n        <Expire\n          closeToast={this.props.actions.closeQTSStarModalToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.missingQuotes.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeQTSStarModalToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    return (\n      <div className=\"mq-broker-page\">\n        {isMobile ? (\n          <>\n            <Row className=\"mq-search-bar\">\n              <Col xs=\"12\">\n                <div className=\"search-container\">\n                  <form className=\"search-form\" onSubmit={this.onSubmitSearch}>\n                    <img\n                      id=\"search-icon-small\"\n                      src=\"/images/icons/search.png\"\n                      alt=\"search\"\n                    />\n                    <input\n                      onChange={this.searchChange}\n                      value={this.state.search}\n                      className=\"input\"\n                      type=\"text\"\n                      placeholder=\"Search by bank, banker, broker, client, deal name or address\"\n                    />\n                  </form>\n                </div>\n              </Col>\n            </Row>\n            <Row className=\"mq-tab-bar sub-header\">\n              <Col xs=\"12\">\n                <ul className=\"mq-nav\">\n                  <li>\n                    <span\n                      className={\n                        !this.state.toggle ? \"header-active-link\" : undefined\n                      }\n                      onClick={this.toggleToggle}\n                    >\n                      Deal\n                    </span>\n                  </li>\n                  <li>\n                    <span\n                      className={\n                        this.state.toggle ? \"header-active-link\" : undefined\n                      }\n                      onClick={this.toggleToggle}\n                    >\n                      Bank\n                    </span>\n                  </li>\n                </ul>\n              </Col>\n            </Row>\n          </>\n        ) : (\n          <Row className=\"sub-header\">\n            <div className=\"mq-broker-subheader nav-search-sub-header\">\n              <Row>\n                <Col lg=\"6\">\n                  <div className=\"mq-broker-toggle\">\n                    <p className={this.state.toggle ? \"\" : \"active\"}>Deal</p>\n                    <div className=\"toggle\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"toggle\"\n                        checked={this.state.toggle}\n                        className=\"cbx hidden\"\n                        onChange={this.toggleToggle}\n                      />\n                      <label htmlFor=\"toggle\" className=\"lbl\"></label>\n                    </div>\n                    <p className={this.state.toggle ? \"active\" : \"\"}>Bank</p>\n                  </div>\n                </Col>\n                <Col lg=\"6\">\n                  <form\n                    className=\"search-container\"\n                    onSubmit={this.onSubmitSearch}\n                  >\n                    <div className=\"search-form\">\n                      <img\n                        id=\"search-icon-small\"\n                        src=\"/images/icons/search.png\"\n                        alt=\"search\"\n                      />\n                      <input\n                        placeholder=\"Search by bank, banker, broker, client, deal name or address\"\n                        className=\"input contact-input\"\n                        type=\"text\"\n                        value={this.state.search}\n                        onChange={this.searchChange}\n                        style={{ width: \"100%\" }}\n                        ref=\"searchBox\"\n                      />\n                    </div>\n                  </form>\n                </Col>\n              </Row>\n            </div>\n          </Row>\n        )}\n        {this.props.missingQuotes.loading ? (\n          <Modal\n            className=\"loading-modal\"\n            isOpen={this.props.missingQuotes.loading}\n            ariaHideApp={false}\n            contentLabel=\"Modal\"\n            shouldCloseOnOverlayClick={false}\n          >\n            <div\n              className={\n                this.props.missingQuotes.loading ? \"centered-spinner\" : \"hidden\"\n              }\n            >\n              <img\n                src=\"/images/icons/spin.svg\"\n                alt=\"spin\"\n                className=\"loading-spinner\"\n              />\n            </div>\n          </Modal>\n        ) : (\n          <MissingQuotesBrokerPage\n            toggle={this.state.toggle}\n            noQuotes={this.props.missingQuotes.noQuotes}\n            noSearchQuotes={this.props.missingQuotes.noSearchQuotes}\n            isSearchDeal={this.props.missingQuotes.isSearchDeal}\n            quotes={this.props.missingQuotes.missingQuotes}\n            authentication={JSON.parse(localStorage.getItem(\"data\"))}\n            isSearchActive={this.state.isSearchActive}\n            passDeal={this.props.actions.passDeal}\n            snoozeDeal={this.props.actions.snoozeDeal}\n            irrelevantDeal={this.props.actions.irrelevantDeal}\n            submitNoteModal={this.props.actions.updateNote}\n            submitDealNoteModal={this.props.actions.updateDealNote}\n            noAdminViewData={this.props.missingQuotes.noAdminViewData}\n            localAdminBankId={this.props.missingQuotes.bank_id}\n            loadingAdminData={this.props.missingQuotes.loadingAdminData}\n            getAdminViewData={this.props.actions.getAdminViewData}\n            removeAdminViewData={this.props.actions.removeAdminViewData}\n            getContactFullInfo={this.props.actions.getFullContactInfo}\n            updateDealQTSStar={this.props.actions.updateDealQTSStar}\n            updateBankQTSStar={this.props.actions.updateBankQTSStar}\n            setPageAndScrollPos={this.props.compsActions.setPageAndScrollPos}\n            contact={this.props.missingQuotes.contact}\n            loadingContact={this.props.missingQuotes.loadingContact}\n            noContact={this.props.missingQuotes.noContact}\n            routeToMissingQuotesByBroker={this.routeToMissingQuotesByBroker}\n            openBankDD={this.openBankDD.bind(this)}\n            openDealDD={this.openDealDD.bind(this)}\n          />\n        )}\n        {successMessage}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    missingQuotes: state.missingQuotesBroker,\n    mq: state.missingQuotes,\n    title: state.navTitle,\n    comps: state.comps,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(missingQuotesBrokerActions, dispatch),\n    missingQuotesActions: bindActionCreators(missingQuotesActions, dispatch),\n    navActions: bindActionCreators(navigationTitleActions, dispatch),\n    compsActions: bindActionCreators(compsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(missingQuotesBrokerContainer);\n"],"sourceRoot":""}