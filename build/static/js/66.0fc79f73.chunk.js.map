{"version":3,"sources":["components/dealDetails/StatusSummaryStatus.js","components/dealDetails/StatusSummaryThirdParty.js","components/dealDetails/StatusSummaryContact.js","components/dealDetails/StatusSummaryPage.js","components/dealDetails/StatusSummaryContainer.js"],"names":["Status","props","className","statusSummary","date","time","md","brokerName","StatusSummaryThirdParty","title","info","bottomCard","StatusSummaryContact","onClick","openContactModal","value","contactId","contactName","primaryPhone","href","primaryEmail","target","rel","StatusSummaryPage","state","showContactModal","getFullContactInfo","setState","moment","Date","format","item","dealInfo","status","push","key","message","contactInfo","length","contacts","map","i","index","inspectStatus","inspectDate","inspectionTime","this","statusInfo","contact","loadingContact","statusUpdate","thirdPartyScheduling","bankMessage","getDate","ipDateTime","getTime","getTopOfCardInspection","getBottomofCardInspection","getBankInpection","tprBank","ClientModal","isOpen","onRequestClose","closeContactModal","bind","onAfterOpen","loading","noContact","isEmpty","React","Component","statusSummaryContainer","actions","loadStatusSummary","match","params","dealId","getParameterByName","dealDetails","noStatus","Loader","connect","dispatch","bindActionCreators","dealDetailsActions"],"mappings":"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","file":"static/js/66.0fc79f73.chunk.js","sourcesContent":["import React from \"react\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Divider from \"muicss/lib/react/divider\";\n\nconst Status = (props) => (\n  <div className=\"panel mui-panel\">\n    <Row className=\"status-update-header\">\n      <h2 className={props.statusSummary ? \"\" : \"hidden\"}>Status Update</h2>\n      <div className=\"timing\">\n        <div className=\"status-date\">{props.date}</div>\n        <p>|</p>\n        <div className=\"status-time\">{props.time}</div>\n      </div>\n    </Row>\n    <Row>\n      <Divider />\n      <Col md=\"12\" className=\"status-summary\">\n        <p>{props.statusSummary}</p>\n        <p className=\"status-summary-broker\">{props.brokerName}</p>\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default Status;\n","import React from \"react\";\nimport Divider from \"muicss/lib/react/divider\";\n\nconst StatusSummaryThirdParty = (props) => (\n  <div>\n    <Divider />\n    <div className=\"third-party-section\">\n      <div className=\"third-party-section-header clearfix\">\n        <p className=\"third-party-title\">{props.title}</p>\n        {props.info}\n      </div>\n      <div>{props.bottomCard}</div>\n    </div>\n  </div>\n);\n\nexport default StatusSummaryThirdParty;\n","import React from \"react\";\n\nconst StatusSummaryContact = (props) => (\n  <div className=\"phase-inspection-contact\">\n    <label className=\"xs-text accent-text\">Name</label>\n    <p onClick={() => props.openContactModal(props.value.contactId)}>\n      {props.value.contactName}\n    </p>\n    {props.value.primaryPhone ? (\n      <div>\n        <label className=\"xs-text accent-text\">Phone</label>\n        <p>\n          <a href={`tel:${props.value.primaryPhone}`}>\n            {props.value.primaryPhone}\n          </a>\n        </p>\n      </div>\n    ) : (\n      \"\"\n    )}\n    {props.value.primaryEmail ? (\n      <div>\n        <label className=\"xs-text accent-text\">Email</label>\n        <p>\n          <a\n            href={`mailto:${props.value.primaryEmail}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"orange-hover\"\n          >\n            {props.value.primaryEmail}\n          </a>\n        </p>\n      </div>\n    ) : (\n      \"\"\n    )}\n  </div>\n);\nexport default StatusSummaryContact;\n","import React from \"react\";\nimport moment from \"moment\";\nimport Status from \"./StatusSummaryStatus\";\nimport ThirdParty from \"./StatusSummaryThirdParty\";\nimport Contact from \"./StatusSummaryContact\";\nimport ClientModal from \"../common/ClientModal\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport { isEmpty } from \"../../lib/utils\";\n\nclass StatusSummaryPage extends React.Component {\n  state = {\n    showContactModal: false,\n    contactId: null,\n  };\n\n  getDate(date) {\n    return moment(new Date(date)).format(\"l\");\n  }\n\n  getTime(date) {\n    return moment(new Date(date)).format(\"LT\");\n  }\n\n  getTopOfCardInspection(item) {\n    let dealInfo = [];\n    if (item.status !== 2 && item.date) {\n      dealInfo.push(\n        <p key={6} className=\"waiting\">\n          {item.time} {item.date}\n        </p>\n      );\n    } else if (item.status === 2) {\n      dealInfo.push(\n        <p key={7} className=\"waiting\">\n          Not Required\n        </p>\n      );\n    } else {\n      dealInfo.push(\n        <p key={8} className=\"waiting\">\n          Waiting on Date\n        </p>\n      );\n    }\n    return dealInfo;\n  }\n\n  getBottomofCardInspection(item, message) {\n    let dealInfo = [];\n    if (item.contactInfo.length) {\n      const contacts = item.contactInfo.map((i, index) => (\n        <Contact\n          key={index}\n          value={i}\n          openContactModal={this.openContactModal}\n        />\n      ));\n      dealInfo.push(contacts);\n    } else if (!item.status) {\n      dealInfo.push(\n        <div key=\"6\">\n          <div className=\"third-party-label\">{message}</div>\n        </div>\n      );\n    }\n    return dealInfo;\n  }\n\n  getBankInpection(item) {\n    let dealInfo = [];\n    if (item.inspectStatus !== 2 && item.inspectDate) {\n      dealInfo.push(\n        <p key={8} className=\"waiting\">\n          {item.inspectDate} {item.inspectionTime}\n        </p>\n      );\n    } else if (item.inspectStatus === 2) {\n      dealInfo.push(\n        <p key={9} className=\"waiting\">\n          Not Required\n        </p>\n      );\n    } else {\n      dealInfo.push(\n        <p key={10} className=\"waiting\">\n          Waiting on Date\n        </p>\n      );\n    }\n    return dealInfo;\n  }\n\n  openContactModal = (contactId) => {\n    this.props.getFullContactInfo(contactId);\n    this.setState({\n      showContactModal: true,\n      contactId,\n    });\n  };\n\n  closeContactModal() {\n    this.setState({ showContactModal: false });\n  }\n\n  render() {\n    const { statusInfo, contact, loadingContact } = this.props;\n    let statusUpdate = null;\n    let thirdPartyScheduling = null;\n    let bankMessage = null;\n    if (statusInfo.length) {\n      statusUpdate = statusInfo[0].statusSummary && (\n        <Status\n          date={this.getDate(statusInfo[0].ipDateTime)}\n          time={this.getTime(statusInfo[0].ipDateTime)}\n          brokerName={statusInfo[0].brokerName}\n          statusSummary={statusInfo[0].statusSummary}\n        />\n      );\n      thirdPartyScheduling = (\n        <div>\n          <ThirdParty\n            key={0}\n            title=\"Appraisal\"\n            className=\"Appraisal\"\n            info={this.getTopOfCardInspection(statusInfo[1])}\n            bottomCard={this.getBottomofCardInspection(\n              statusInfo[1],\n              \"Appraiser waiting to be assigned\"\n            )}\n          />\n\n          <ThirdParty\n            key={1}\n            title=\"Enviromental Inspection\"\n            info={this.getTopOfCardInspection(statusInfo[2])}\n            bottomCard={this.getBottomofCardInspection(\n              statusInfo[2],\n              \"Enviromental Inspector waiting to be assigned\"\n            )}\n          />\n\n          <ThirdParty\n            key={2}\n            title=\"Phase 2 Inspection\"\n            info={this.getTopOfCardInspection(statusInfo[3])}\n            bottomCard={this.getBottomofCardInspection(\n              statusInfo[3],\n              \"Phase 2 Inspector waiting to be assigned\"\n            )}\n          />\n\n          <ThirdParty\n            key={3}\n            title=\"PCA Inspection\"\n            info={this.getTopOfCardInspection(statusInfo[4])}\n            bottomCard={this.getBottomofCardInspection(\n              statusInfo[4],\n              \"PCA Inspector waiting to be assigned\"\n            )}\n          />\n\n          <ThirdParty\n            title=\"Bank Inspection\"\n            info={this.getBankInpection(statusInfo[5])}\n          />\n        </div>\n      );\n    }\n\n    if (statusInfo[0] && statusInfo[0].tprBank === 1) {\n      bankMessage = (\n        <div className=\"bank-running-third-party-banner\">\n          <p>\n            <i className=\"material-icons info-icon\">info</i>The bank is running\n            all third party scheduling on this deal. Please contact them for an\n            update\n          </p>\n        </div>\n      );\n    }\n    return (\n      <div className=\"status-summary-page\">\n        {bankMessage}\n        <Row>\n          <Col md=\"6\">\n            <div className=\"status-update\">{statusUpdate}</div>\n            <div className=\"status-questions\">\n              Questions? Please call your broker or contact our main office at{\" \"}\n              <a href=\"tel:732-301-3900\">732-301-3900</a>.\n            </div>\n          </Col>\n          <Col md=\"6\">\n            <div className=\"third-party\">\n              <div className=\"panel mui-panel\">\n                <h2 className={statusInfo.length < 1 ? \"hidden\" : \"\"}>\n                  Third Party Scheduling\n                </h2>\n                {thirdPartyScheduling}\n              </div>\n            </div>\n          </Col>\n        </Row>\n\n        {this.state.showContactModal && (\n          <ClientModal\n            key={this.state.contactId}\n            isOpen={this.state.showContactModal}\n            onRequestClose={this.closeContactModal.bind(this)}\n            onAfterOpen={() => {}}\n            loading={loadingContact}\n            contact={contact}\n            noContact={isEmpty(contact)}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default StatusSummaryPage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport Loader from \"../common/Loader\";\nimport * as dealDetailsActions from \"../../actions/dealDetailsActions\";\nimport StatusSummaryPage from \"./StatusSummaryPage\";\nimport getParameterByName from \"../common/getParameterByName\";\n\nclass statusSummaryContainer extends React.Component {\n  componentDidMount() {\n    this.props.actions.loadStatusSummary(\n      this.props.match.params.dealId\n        ? this.props.match.params.dealId\n        : getParameterByName(\"deal_id\")\n        ? getParameterByName(\"deal_id\")\n        : \"\"\n    );\n  }\n\n  render() {\n    const {\n      loading,\n      statusInfo,\n      noStatus,\n      contact,\n      loadingContact,\n    } = this.props.dealDetails;\n    return (\n      <div>\n        {loading ? (\n          <Loader />\n        ) : (\n          <StatusSummaryPage\n            statusInfo={statusInfo}\n            noStatus={noStatus}\n            contact={contact}\n            loadingContact={loadingContact}\n            getFullContactInfo={this.props.actions.getFullContactInfo}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dealDetails: state.dealDetails,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(dealDetailsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(statusSummaryContainer);\n"],"sourceRoot":""}