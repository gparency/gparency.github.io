{"version":3,"sources":["components/common/CurrencyInput.js","components/common/PercentageInput.js","../node_modules/muicss/lib/react/container.js","components/common/ConfirmationModal.js","actions/lendingCriteriaActions.js","actions/investingCriteriaActions.js","components/investingCriteria/MultiSelectCheckbox.js","components/investingCriteria/MultiSelect.js","components/investingCriteria/InvestingCriteriaForm.js"],"names":["CurrencyInput","props","state","formattedValue","this","value","formatValue","parseFloat","toFixed","decimalPlaces","setState","validate","minValue","maxValue","required","nextProps","toString","regexExp","RegExp","match","slice","formatWithCommas","replace","FormattedInput","PercentageInput","babelHelpers","require","Object","defineProperty","exports","default","_react","interopRequireDefault","Container","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","_this$props","children","className","fluid","reactProps","objectWithoutProperties","cls","createElement","extends","Component","_default","module","ConfirmationModal","isOpen","ariaHideApp","contentLabel","shouldCloseOnOverlayClick","message","variant","onClick","close","confirm","confirmBtnText","React","getParameterList","dispatch","type","types","ajax","url","config","BASE_URL","applyAuthHeader","success","response","status","tokenExpired","lendingList","data","getParameterListByBank","bank_id","getParameterListByContact","contact_id","getState","currentBanker","lendingCriteria","getParameterById","id","lendingItem","getLendingTypes","isResponse","lendingTypes","getLendingCriteriaLists","Promise","all","fetch","then","responses","map","json","maxTerm","minDscr","maxInterestOnly","prePaymentPenalty","maxInitialTerm","maxPermAfterConstruction","maxAmortization","simpleRateSheet","maxTermTypes","minDscrTypes","maxInterestOnlyTypes","prePaymentPenaltyTypes","maxInitialTermTypes","maxPermAfterConstructionTypes","maxAmortizationTypes","simpleRateSheetTypes","catch","error","console","log","getPropertyTypes","propTypesList","getStateList","stateList","getRecourseTypes","a","getListByType","TypesList","Recourse","recourseTypes","addLendingCriteria","postData","formatRequestBodyParams","XMLHttpRequest","textStatus","errorThrown","updateLendingCriteria","Navigation","go","deleteLendingCriteria","contactId","searchCityOrZip","city_or_zip","searchResults","getBanksBankers","bankId","banksBankers","label","item","contact_name","handleAPIError","closeSuccessToast","setCurrentBank","currentBank","setCurrentBanker","getInvestingCriteriaList","page","err","getInvestingCriteria","getFundTypes","InvestingCriteriaFundType","getReturnTypes","InvestingCriteriaReturnType","getInvestmentTypes","InvestmentType","getConstructionTypes","ConstructionType","addInvestingCriteria","ltv_max","min_irr","investment_min","investment_max","holding_period_min","holding_period_max","rate_min","rate_max","cash_flow_needed","nationwide","states","return_types","construction_types","property_types","fund_types","investment_types","editInvestingCriteria","criteria_id","deleteInvestingCriteria","closeToast","MultiSelectCheckbox","checked","onChange","onChangeHandler","bind","htmlFor","MultiSelect","localOptionsSelected","checkboxChange","toggleDropdown","getMultiSelectTextValue","selectedOptions","isChecked","options","p","list_type_id","applySelected","filter","disabled","textValue","index","find","t","showDropdown","length","o","InvestingCriteriaForm","fundTypes","fundTypeToggleDropdown","returnTypes","returnTypeToggleDropdown","investmentTypes","investmentTypeToggleDropdown","maxLTV","minIRR","minInvestment","maxInvestment","minHoldingPeriod","maxHoldingPeriod","minRate","maxRate","propertyTypes","propertyToggleDropdown","constructionTypes","constructionTypeToggleDropdown","localStatesList","stateToggleDropdown","cashFlowNeeded","showDeleteModal","applySelectedFundTypes","applySelectedReturnTypes","applySelectedInvestmentTypes","maxLTVChange","minIRRChange","minInvestmentChange","maxInvestmentChange","minHoldingPeriodChange","maxHoldingPeriodChange","minRateChange","maxRateChange","propTypeToggleDropdown","applySelectedPropTypes","applySelectedConstructionTypes","applySelectedStates","nationwideCheckboxChange","needCashFlowCheckboxChange","statesList","s","push","show","e","invalidFields","errorMessage","join","valid","submit","parseInt","getParameterByName","decodeURIComponent","delete","to","md","fundTypesList","returnTypesList","investmentTypesList","update","NumberInput","constructionTypesList"],"mappings":"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","file":"static/js/4.cc5dd7d0.chunk.js","sourcesContent":["import FormattedInput from \"./FormattedInput\";\nimport { formatWithCommas } from \"../../lib\";\n\nclass CurrencyInput extends FormattedInput {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formattedValue: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let formattedValue = this.props.value\n      ? this.formatValue(\n          +parseFloat(this.props.value).toFixed(this.props.decimalPlaces || 2)\n        )\n      : \"\";\n    this.setState({ formattedValue: formattedValue });\n    this.validate(\n      this.props.value,\n      this.props.minValue,\n      this.props.maxValue,\n      this.props.required\n    );\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.value !== nextProps.value ||\n      this.props.minValue !== nextProps.minValue ||\n      this.props.maxValue !== nextProps.maxValue\n    ) {\n      this.validate(\n        nextProps.value,\n        nextProps.minValue,\n        nextProps.maxValue,\n        nextProps.required\n      );\n    }\n  }\n\n  formatValue(value) {\n    value = value.toString();\n    let regexExp =\n      this.props.decimalPlaces === 0\n        ? new RegExp(\"^\\\\d*?$\")\n        : new RegExp(\n            \"^\\\\d*(\\\\.\\\\d{0,\" + (this.props.decimalPlaces || 2) + \"})?$\"\n          );\n    if (!value.match(regexExp)) {\n      value = value.slice(0, -1);\n    }\n    return value ? \"$\" + formatWithCommas(value) : \"\";\n  }\n\n  stripFormat(value) {\n    return value ? value.replace(/[^0-9.]/g, \"\") : \"\";\n  }\n}\n\nexport default CurrencyInput;\n","import FormattedInput from \"./FormattedInput\";\nimport { formatWithCommas } from \"../../lib\";\n\nclass PercentageInput extends FormattedInput {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formattedValue: \"\",\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    let formattedValue = this.props.value\n      ? this.formatValue(\n          +parseFloat(this.props.value * 100).toFixed(\n            this.props.decimalPlaces || 2\n          )\n        )\n      : \"\";\n    this.setState({ formattedValue: formattedValue });\n    this.validate(\n      this.props.value ? this.props.value * 100 : null,\n      this.props.minValue ? this.props.minValue * 100 : null,\n      this.props.maxValue ? this.props.maxValue * 100 : null,\n      this.props.required\n    );\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      this.props.value !== nextProps.value ||\n      this.props.minValue !== nextProps.minValue ||\n      this.props.maxValue !== nextProps.maxValue\n    ) {\n      let formattedValue = nextProps.value\n        ? this.formatValue(\n            +parseFloat(nextProps.value * 100).toFixed(\n              nextProps.decimalPlaces || 2\n            )\n          )\n        : \"\";\n      this.setState({ formattedValue: formattedValue });\n      this.validate(\n        nextProps.value ? nextProps.value * 100 : null,\n        nextProps.minValue ? nextProps.minValue * 100 : null,\n        nextProps.maxValue ? nextProps.maxValue * 100 : null,\n        nextProps.required\n      );\n    }\n  }\n\n  formatValue(value) {\n    value = value.toString();\n    let regexExp =\n      this.props.decimalPlaces === 0\n        ? new RegExp(\"^\\\\d*?$\")\n        : new RegExp(\n            \"^\\\\d*(\\\\.\\\\d{0,\" + (this.props.decimalPlaces || 2) + \"})?$\"\n          );\n    if (!value.match(regexExp)) {\n      value = value.slice(0, -1);\n    }\n    return value ? formatWithCommas(value) + \"%\" : \"\";\n  }\n\n  stripFormat(value) {\n    return value ? value.replace(/[^0-9.]/g, \"\") : \"\";\n  }\n}\n\nexport default PercentageInput;\n","var babelHelpers = require('./babel-helpers.js');\n/**\n * MUI React container module\n * @module react/container\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = babelHelpers.interopRequireDefault(require(\"react\"));\n\n/**\n * Container constructor\n * @class\n */\nvar Container =\n/*#__PURE__*/\nfunction (_React$Component) {\n  babelHelpers.inherits(Container, _React$Component);\n\n  function Container() {\n    babelHelpers.classCallCheck(this, Container);\n    return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(Container).apply(this, arguments));\n  }\n\n  babelHelpers.createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          fluid = _this$props.fluid,\n          reactProps = babelHelpers.objectWithoutProperties(_this$props, [\"children\", \"className\", \"fluid\"]);\n      var cls = 'mui-container'; // fluid containers\n\n      if (fluid) cls += '-fluid';\n      return _react.default.createElement(\"div\", babelHelpers.extends({}, reactProps, {\n        className: cls + ' ' + className\n      }), children);\n    }\n  }]);\n  return Container;\n}(_react.default.Component);\n/** Define module API */\n\n\nbabelHelpers.defineProperty(Container, \"defaultProps\", {\n  className: '',\n  fluid: false\n});\nvar _default = Container;\nexports.default = _default;\nmodule.exports = exports.default;","import React from \"react\";\nimport Modal from \"react-modal\";\nimport Button from \"muicss/lib/react/button\";\n\nclass ConfirmationModal extends React.Component {\n  render() {\n    return (\n      <Modal\n        className=\"delete-modal\"\n        isOpen={this.props.isOpen}\n        ariaHideApp={false}\n        contentLabel=\"Modal\"\n        shouldCloseOnOverlayClick={true}\n      >\n        <p className=\"bold-text\">{this.props.message}</p>\n        <div className=\"modal-btns\">\n          <Button variant=\"flat\" onClick={this.props.close}>\n            CANCEL\n          </Button>\n          <Button variant=\"flat\" onClick={this.props.confirm}>\n            {this.props.confirmBtnText ? this.props.confirmBtnText : \"YES\"}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default ConfirmationModal;\n","import * as types from \"./actionTypes\";\nimport config from \"../config\";\nimport { ajax,handleAPIError } from \"../lib\";\nimport { tokenExpired } from \"./authenticationActions\";\nimport { formatRequestBodyParams, getListByType, Navigation } from \"../lib\";\nimport { TypesList } from \"../lib\";\n\nexport function getParameterList() {\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_PARAM_LIST });\n    ajax({\n      url: `${config.BASE_URL}get-lending`,\n      applyAuthHeader: true,\n      success: function (response) {\n        if (response.status === \"E404\") {\n          dispatch(tokenExpired());\n        }\n        if (response.status === \"204\") {\n          dispatch({ type: types.NO_PARAM_LIST });\n        }\n        if (response.status === \"E413\") {\n          dispatch({ type: types.NO_PARAM_LIST });\n        } else {\n          dispatch({ type: types.LOAD_PARAM_LIST, lendingList: response.data });\n        }\n      },\n    });\n  };\n}\n\nexport function getParameterListByBank(bank_id) {\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_PARAM_LIST });\n    ajax({\n      url: `${config.BASE_URL}get-lending`,\n      applyAuthHeader: true,\n      data: { bank_id },\n      success: function (response) {\n        if (response.status === \"E404\") {\n          dispatch(tokenExpired());\n        }\n        if (response.status === \"204\") {\n          dispatch({ type: types.NO_PARAM_LIST });\n        }\n        if (response.status === \"E413\") {\n          dispatch({ type: types.NO_PARAM_LIST });\n        } else {\n          dispatch({ type: types.LOAD_PARAM_LIST, lendingList: response.data });\n        }\n      },\n    });\n  };\n}\n\nexport function getParameterListByContact(contact_id) {\n  return (dispatch, getState) => {\n    const currentBanker = contact_id ? contact_id :  getState().lendingCriteria.currentBanker.value;\n    dispatch({ type: types.LOADING_PARAM_LIST });\n    ajax({\n      url: `${config.BASE_URL}contact-lending`,\n      data: { contact_id : currentBanker },\n      success: function (response) {\n        if (response.status === \"E404\") {\n          dispatch(tokenExpired());\n        }\n        if (response.status === \"204\") {\n          dispatch({ type: types.NO_PARAM_LIST });\n        }\n        if (response.status === \"E413\") {\n          dispatch({ type: types.NO_PARAM_LIST });\n        } else {\n          dispatch({ type: types.LOAD_PARAM_LIST, lendingList: response.data });\n        }\n      },\n    });\n  };\n}\n\nexport function getParameterById(id) {\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_PARAM_BY_ID });\n    ajax({\n      url: `${config.BASE_URL}get-lending`,\n      applyAuthHeader: true,\n      data: { id },\n      success: function (response) {\n        if (response.status === `E404`) {\n          dispatch(tokenExpired());\n        }\n        if (response.status === \"204\") {\n          dispatch({ type: types.NO_PARAM_BY_ID });\n        } else {\n          dispatch({\n            type: types.LOAD_PARAM_BY_ID,\n            lendingItem: response.data,\n          });\n        }\n      },\n    });\n  };\n}\n\nexport function getLendingTypes() {\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}lending-types`,\n      success: function (response) {\n        if (!response.isResponse) {\n          dispatch(tokenExpired());\n        } else {\n          dispatch({\n            type: types.LOAD_LENDING_TYPES,\n            lendingTypes: response.data,\n          });\n        }\n      },\n    });\n  };\n}\nexport function getLendingCriteriaLists() {\n  return (dispatch) => {\n    Promise.all([\n      fetch(`${config.BASE_URL}lists/maxTerm`),\n      fetch(`${config.BASE_URL}lists/minDscr`),\n      fetch(`${config.BASE_URL}lists/maxInterestOnly`),\n      fetch(`${config.BASE_URL}lists/prePaymentPenalty`),\n      fetch(`${config.BASE_URL}lists/maxInitialTerm`),\n      fetch(`${config.BASE_URL}lists/maxPermAfterConstruction`),\n      fetch(`${config.BASE_URL}lists/maxAmortization`),\n      fetch(`${config.BASE_URL}simple-rate-sheet`),\n      fetch(`${config.BASE_URL}lending-types`),\n    ]).then(function (responses) {\n      return Promise.all(responses.map(function (response) {\n        return response.json();\n      }));\n    }).then(function (data) {\n      const  [\n        maxTerm,\n        minDscr,\n        maxInterestOnly,\n        prePaymentPenalty,\n        maxInitialTerm,\n        maxPermAfterConstruction,\n        maxAmortization,\n        simpleRateSheet,\n        lendingTypes\n      ] = data;\n      dispatch({type: types.LOAD_MAX_TERM_TYPES, maxTermTypes: maxTerm.data, });\n      dispatch({type: types.LOAD_MIN_DSCR_TYPES, minDscrTypes: minDscr.data, });\n      dispatch({type: types.LOAD_MAX_INTEREST_ONLY_TYPES, maxInterestOnlyTypes: maxInterestOnly.data, });\n      dispatch({type: types.LOAD_PREPAYMENT_PENALTY_TYPES, prePaymentPenaltyTypes: prePaymentPenalty.data, });\n      dispatch({type: types.LOAD_MAX_INITIAL_TERM_TYPES, maxInitialTermTypes: maxInitialTerm.data, });\n      dispatch({type: types.LOAD_MAX_PERM_AFTER_CONSTRUCTION_TYPES, maxPermAfterConstructionTypes: maxPermAfterConstruction.data, });\n      dispatch({type: types.LOAD_MAX_AMORTIZATION_TYPES, maxAmortizationTypes: maxAmortization.data, });\n      dispatch({type: types.LOAD_SIMPLE_RATE_SHEET_TYPES, simpleRateSheetTypes: simpleRateSheet.data, });\n      dispatch({type: types.LOAD_LENDING_TYPES,lendingTypes: lendingTypes.data,});\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n}\n\nexport function getPropertyTypes() {\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}prop-types`,\n      success: function (response) {\n        if (!response.isResponse) {\n          dispatch(tokenExpired());\n        } else {\n          dispatch({\n            type: types.LOAD_PROP_TYPES,\n            propTypesList: response.data,\n          });\n        }\n      },\n    });\n  };\n}\n\nexport function getStateList() {\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}get-states`,\n      success: function (response) {\n        if (!response.isResponse) {\n          dispatch(tokenExpired());\n        } else {\n          dispatch({ type: types.LOAD_STATE_LIST, stateList: response.data });\n        }\n      },\n    });\n  };\n}\n\nexport function getRecourseTypes() {\n  return async (dispatch) => {\n    let data = await getListByType(TypesList.Recourse);\n    dispatch({ type: types.LOAD_RECOURSE_TYPES, recourseTypes: data });\n  };\n}\n\nexport function addLendingCriteria( postData) {\n  console.log(postData);\n  return (dispatch) => {\n    dispatch({\n      type: types.LOADING_SPINNER,  message: true,\n    });\n    ajax({\n      url: `${config.BASE_URL}add-lending`,\n      applyAuthHeader: true,\n      data: formatRequestBodyParams(postData),\n      type: \"POST\",\n      success: function (response) {\n        dispatch({\n          type: types.ADD_LENDING_CRITERIA_SUCCESS,\n          message: response.message,\n        });\n        dispatch({\n          type: types.LOADING_SPINNER,  message: false,\n        });\n      },\n      error: function(XMLHttpRequest, textStatus, errorThrown) {\n        console.log(\"Status: \" + textStatus, \" - Error: \" + errorThrown);\n        dispatch({\n          type: types.LOADING_SPINNER,  message: false,\n        });\n      }\n    });\n  };\n}\n\nexport function updateLendingCriteria(postData) {\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}edit-lending`,\n      applyAuthHeader: true,\n      data: formatRequestBodyParams(postData),\n      type: \"POST\",\n      success: function (response) {\n        dispatch({\n          type: types.UPDATE_LENDING_CRITERIA_SUCCESS,\n          message: response.message,\n        });\n        Navigation.go(\"/lending-criteria\");\n      },\n    });\n  };\n}\nexport function deleteLendingCriteria(postData, contactId) {\n  return (dispatch, getState) => {\n    dispatch({type: types.LOADING_SPINNER,  message: true});\n    ajax({\n      url: `${config.BASE_URL}delete-lending`,\n      applyAuthHeader: true,\n      data: formatRequestBodyParams(postData),\n      type: \"POST\",\n      success: function (response) {\n        dispatch({\n          type: types.UPDATE_LENDING_CRITERIA_SUCCESS,\n          message: response.message,\n        });\n        const currentBanker = getState().lendingCriteria.currentBanker.value;\n        ajax({\n          url: `${config.BASE_URL}contact-lending`,\n          data: {contact_id: currentBanker},\n          success: function (response) {\n            dispatch({type: types.LOAD_PARAM_LIST, lendingList: response.data});\n          }\n        })\n      }\n    });\n  };\n}\n\nexport function searchCityOrZip(city_or_zip) {\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}get-cities`,\n      data: { city_or_zip },\n      success: function (response) {\n        if (response.isResponse) {\n          dispatch({\n            type: types.GET_CITY_STATES_LIST,\n            searchResults: response.data,\n          });\n        }\n        if (response.status === \"E403\") {\n          dispatch(tokenExpired());\n        }\n      },\n    });\n  };\n}\n\nexport function getBanksBankers(bankId) {\n  return async (dispatch) => {\n    dispatch({\n      type: types.LOADING_SPINNER,  message: true,\n    });\n    dispatch({type: types.LOADING_PARAM_LIST });\n    dispatch({\n      type : types.SET_BANKS_BANKERS,\n      banksBankers : {value: 0,label : \"Select a Lenders Contact\"}\n    });\n    await ajax({\n      url: `${config.BASE_URL}get-banks-bankers/${bankId}`,\n      applyAuthHeader: true,\n      success: function (response) {\n        dispatch({\n          type: types.LOADING_SPINNER,  message: false,\n        });\n        if(!response.isResponse){\n          dispatch({\n            type: types.SHOW_TOAST_ERROR,\n            success: false,\n            message : response.message,\n          });\n        } else {\n          dispatch({\n            type : types.SET_BANKS_BANKERS,\n            banksBankers : response.data.map((item) => ({\n              value: item.contact_id,\n              label : item.contact_name\n            }))\n          })\n        }\n      },\n    }).catch(() => handleAPIError(dispatch, types.GET_BANKS_BANKERS_FAILED));\n  };\n}\nexport function closeSuccessToast() {\n  return { type: types.CLOSE_LENDING_CRITERIA_SUCCESS };\n}\n\nexport function setCurrentBank(currentBank){\n  return { type: types.SET_CURRENT_BANK,currentBank : currentBank  };\n}\n\nexport function setCurrentBanker(currentBanker){\n  return { type: types.SET_CURRENT_BANKER,currentBanker : currentBanker  };\n}\n","import * as types from \"./actionTypes\";\nimport config from \"../config\";\nimport { ajax } from \"../lib\";\nimport { handleAPIError } from \"../lib\";\nimport { TypesList } from \"../lib\";\n\nexport function getInvestingCriteriaList(page = 1) {\n  return async (dispatch) => {\n    dispatch({ type: types.LOADING_INVESTING_CRITERIA });\n    await ajax({\n      url: `${config.BASE_URL}funds/criteria`,\n      applyAuthHeader: true,\n      data: { page },\n      success: function (response) {\n        dispatch({ type: types.GET_INVESTING_CRITERIA_LIST, data: response });\n      },\n      error: handleAPIError(dispatch, {\n        default: { type: types.GET_INVESTING_CRITERIA_LIST, data: {} },\n      }),\n    }).catch((err) => {});\n  };\n}\n\nexport function getInvestingCriteria(id) {\n  return (dispatch) => {\n    dispatch({ type: types.LOADING_INVESTING_CRITERIA });\n    ajax({\n      url: `${config.BASE_URL}funds/criteria/${id}?justOne=1`,\n      applyAuthHeader: true,\n      success: function (response) {\n        dispatch({\n          type: types.GET_INVESTING_CRITERIA,\n          data: response.data || {},\n        });\n      },\n      error: handleAPIError(dispatch, {\n        default: { type: types.GET_INVESTING_CRITERIA, data: {} },\n      }),\n    });\n  };\n}\n\nexport function getFundTypes() {\n  let type = TypesList.InvestingCriteriaFundType;\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}lists/${type}`,\n      success: function (response) {\n        dispatch({ type: types.GET_FUND_TYPES, data: response.data || [] });\n      },\n    });\n  };\n}\n\nexport function getReturnTypes() {\n  let type = TypesList.InvestingCriteriaReturnType;\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}lists/${type}`,\n      success: function (response) {\n        dispatch({\n          type: types.GET_INVESTING_CRITERIA_RETURN_TYPES,\n          data: response.data || [],\n        });\n      },\n    });\n  };\n}\n\nexport function getInvestmentTypes() {\n  let type = TypesList.InvestmentType;\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}lists/${type}`,\n      success: function (response) {\n        dispatch({\n          type: types.GET_INVESTMENT_TYPES,\n          data: response.data || [],\n        });\n      },\n    });\n  };\n}\n\nexport function getConstructionTypes() {\n  let type = TypesList.ConstructionType;\n  return (dispatch) => {\n    ajax({\n      url: `${config.BASE_URL}lists/${type}`,\n      success: function (response) {\n        dispatch({\n          type: types.GET_CONSTRUCTION_TYPES,\n          data: response.data || [],\n        });\n      },\n    });\n  };\n}\n\nexport function addInvestingCriteria(\n  ltv_max,\n  min_irr,\n  investment_min,\n  investment_max,\n  holding_period_min,\n  holding_period_max,\n  rate_min,\n  rate_max,\n  cash_flow_needed,\n  nationwide,\n  states,\n  return_types,\n  construction_types,\n  property_types,\n  fund_types,\n  investment_types\n) {\n  return async (dispatch) => {\n    return await ajax({\n      url: `${config.BASE_URL}funds/criteria`,\n      applyAuthHeader: true,\n      data: {\n        ltv_max,\n        min_irr,\n        investment_min,\n        investment_max,\n        holding_period_min,\n        holding_period_max,\n        rate_min,\n        rate_max,\n        cash_flow_needed,\n        nationwide,\n        states,\n        return_types,\n        construction_types,\n        property_types,\n        fund_types,\n        investment_types,\n      },\n      type: \"POST\",\n      success: function (response) {\n        dispatch({\n          type: types.ADD_INVESTING_CRITERIA,\n          success: true,\n          message: response.message || \"Investing Criteria Added Successfully!\",\n        });\n      },\n      error: handleAPIError(dispatch, types.ADD_INVESTING_CRITERIA),\n    }).catch((err) => {\n      return undefined;\n    });\n  };\n}\n\nexport function editInvestingCriteria(\n  ltv_max,\n  min_irr,\n  investment_min,\n  investment_max,\n  holding_period_min,\n  holding_period_max,\n  rate_min,\n  rate_max,\n  cash_flow_needed,\n  nationwide,\n  states,\n  return_types,\n  construction_types,\n  property_types,\n  fund_types,\n  investment_types,\n  criteria_id\n) {\n  return async (dispatch) => {\n    return await ajax({\n      url: `${config.BASE_URL}funds/criteria/${criteria_id}`,\n      applyAuthHeader: true,\n      data: {\n        ltv_max,\n        min_irr,\n        investment_min,\n        investment_max,\n        holding_period_min,\n        holding_period_max,\n        rate_min,\n        rate_max,\n        cash_flow_needed,\n        nationwide,\n        states,\n        return_types,\n        construction_types,\n        property_types,\n        fund_types,\n        investment_types,\n      },\n      type: \"PUT\",\n      success: function (response) {\n        dispatch({\n          type: types.EDIT_INVESTING_CRITERIA,\n          success: true,\n          message: response.message || \"Updated Successfully!\",\n        });\n      },\n      error: handleAPIError(dispatch, types.EDIT_INVESTING_CRITERIA),\n    }).catch((err) => {\n      return undefined;\n    });\n  };\n}\n\nexport function deleteInvestingCriteria(criteria_id, page) {\n  return async (dispatch) => {\n    return await ajax({\n      url: `${config.BASE_URL}funds/criteria/${criteria_id}`,\n      applyAuthHeader: true,\n      type: \"DELETE\",\n      success: function (response) {\n        dispatch({\n          type: types.DELETE_INVESTING_CRITERIA,\n          success: true,\n          message: \"Deleted successfully!\",\n        });\n        dispatch(getInvestingCriteriaList(page));\n      },\n      error: handleAPIError(dispatch, types.DELETE_INVESTING_CRITERIA),\n    }).catch((err) => {\n      return undefined;\n    });\n  };\n}\n\nexport function closeToast() {\n  return { type: types.CLOSE_IC_TOAST };\n}\n","import React from \"react\";\n\nclass MultiSelectCheckbox extends React.Component {\n  render() {\n    let item = this.props.item;\n    return (\n      <div className=\"rkmd-checkbox checkbox-ripple\">\n        <label className=\"input-checkbox checkbox-lightBlue\">\n          <input\n            type=\"checkbox\"\n            id={this.props.id}\n            checked={this.props.checked || false}\n            onChange={this.props.onChangeHandler.bind(\n              null,\n              this.props.id,\n              !this.props.checked\n            )}\n          />\n          <span className=\"checkbox\"></span>\n          <span className=\"ripple\"></span>\n        </label>\n        <p\n          htmlFor={this.props.id}\n          className=\"label\"\n          onClick={this.props.onChangeHandler.bind(\n            null,\n            this.props.id,\n            !this.props.checked\n          )}\n        >\n          {item.value}\n        </p>\n      </div>\n    );\n  }\n}\nexport default MultiSelectCheckbox;\n","import React from \"react\";\nimport MultiSelectCheckbox from \"./MultiSelectCheckbox\";\n\nclass MultiSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      localOptionsSelected: [],\n    };\n\n    this.checkboxChange = this.checkboxChange.bind(this);\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.getMultiSelectTextValue = this.getMultiSelectTextValue.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.selectedOptions &&\n      nextProps.selectedOptions !== this.state.localOptionsSelected\n    ) {\n      this.setState({ localOptionsSelected: nextProps.selectedOptions });\n    }\n  }\n\n  checkboxChange(id, isChecked) {\n    if (id === 0 && isChecked) {\n      this.setState(\n        {\n          localOptionsSelected: this.props.options\n            .slice(1)\n            .map((p) => p.list_type_id),\n        },\n        () => this.props.applySelected(this.state.localOptionsSelected)\n      );\n    } else if (id === 0 && !isChecked) {\n      this.setState({ localOptionsSelected: [] }, () =>\n        this.props.applySelected(this.state.localOptionsSelected)\n      );\n    } else if (isChecked) {\n      this.setState(\n        { localOptionsSelected: [...this.state.localOptionsSelected, id] },\n        () => this.props.applySelected(this.state.localOptionsSelected)\n      );\n    } else if (!isChecked) {\n      this.setState(\n        {\n          localOptionsSelected: this.state.localOptionsSelected.filter(\n            (type) => type !== id\n          ),\n        },\n        () => this.props.applySelected(this.state.localOptionsSelected)\n      );\n    }\n  }\n\n  toggleDropdown() {\n    if (!this.props.disabled) {\n      this.props.toggleDropdown();\n    }\n  }\n\n  getMultiSelectTextValue() {\n    let textValue = \"\";\n    this.props.selectedOptions &&\n      this.props.selectedOptions.map((value, index) => {\n        let type = this.props.options.find((t) => t.list_type_id === value);\n        if (type) {\n          if (index >= 1) {\n            textValue += \", \";\n          }\n          textValue += type.value;\n        }\n        return textValue;\n      });\n    return textValue;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ic-dropdown-select\" onClick={this.toggleDropdown}>\n          <p className=\"ic-dropdown-value\">{this.getMultiSelectTextValue()}</p>\n          <i className=\"material-icons\">arrow_drop_down</i>\n        </div>\n        <div className={this.props.showDropdown ? \"ic-dropdown\" : \"hidden\"}>\n          <div className=\"ic-dropdown-content\">\n            {this.props.options &&\n              this.props.options.map((item, index) => (\n                <MultiSelectCheckbox\n                  key={index}\n                  id={item.list_type_id}\n                  item={item}\n                  checked={\n                    item.list_type_id === 0\n                      ? this.state.localOptionsSelected.length ===\n                        this.props.options.filter((o) => o.list_type_id !== 0)\n                          .length\n                      : this.state.localOptionsSelected.find(\n                          (t) => t === item.list_type_id\n                        )\n                  }\n                  onChangeHandler={this.checkboxChange}\n                />\n              ))}\n          </div>\n          <div className=\"ic-dropdown-footer\">\n            <p\n              className=\"accent-text small-text\"\n              onClick={this.props.applySelected.bind(null, [])}\n            >\n              Clear All\n            </p>\n            <p className=\"orange-text small-text\" onClick={this.toggleDropdown}>\n              Close\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MultiSelect;\n","import React from \"react\";\nimport { Navigation } from \"../../lib\";\nimport Container from \"muicss/lib/react/container\";\nimport Row from \"muicss/lib/react/row\";\nimport Col from \"muicss/lib/react/col\";\nimport Button from \"muicss/lib/react/button\";\nimport { Link } from \"react-router-dom\";\nimport MultiSelect from \"./MultiSelect\";\nimport CurrencyInput from \"../common/CurrencyInput\";\nimport PercentageInput from \"../common/PercentageInput\";\nimport ConfirmationModal from \"../common/ConfirmationModal\";\nimport getParameterByName from \"../common/getParameterByName\";\nimport NumberInput from \"../common/NumberInput\";\n\nclass InvestingCriteriaForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fundTypes: [],\n      fundTypeToggleDropdown: false,\n      returnTypes: [],\n      returnTypeToggleDropdown: false,\n      investmentTypes: [],\n      investmentTypeToggleDropdown: false,\n      maxLTV: null,\n      minIRR: null,\n      minInvestment: null,\n      maxInvestment: null,\n      minHoldingPeriod: null,\n      maxHoldingPeriod: null,\n      minRate: null,\n      maxRate: null,\n      propertyTypes: [],\n      propertyToggleDropdown: false,\n      constructionTypes: [],\n      constructionTypeToggleDropdown: false,\n      nationwide: false,\n      states: [],\n      localStatesList: [],\n      stateToggleDropdown: false,\n      cashFlowNeeded: false,\n      showDeleteModal: false,\n    };\n\n    this.fundTypeToggleDropdown = this.fundTypeToggleDropdown.bind(this);\n    this.applySelectedFundTypes = this.applySelectedFundTypes.bind(this);\n    this.returnTypeToggleDropdown = this.returnTypeToggleDropdown.bind(this);\n    this.applySelectedReturnTypes = this.applySelectedReturnTypes.bind(this);\n    this.investmentTypeToggleDropdown = this.investmentTypeToggleDropdown.bind(\n      this\n    );\n    this.applySelectedInvestmentTypes = this.applySelectedInvestmentTypes.bind(\n      this\n    );\n    this.maxLTVChange = this.maxLTVChange.bind(this);\n    this.minIRRChange = this.minIRRChange.bind(this);\n    this.minInvestmentChange = this.minInvestmentChange.bind(this);\n    this.maxInvestmentChange = this.maxInvestmentChange.bind(this);\n    this.minHoldingPeriodChange = this.minHoldingPeriodChange.bind(this);\n    this.maxHoldingPeriodChange = this.maxHoldingPeriodChange.bind(this);\n    this.minRateChange = this.minRateChange.bind(this);\n    this.maxRateChange = this.maxRateChange.bind(this);\n    this.propTypeToggleDropdown = this.propTypeToggleDropdown.bind(this);\n    this.applySelectedPropTypes = this.applySelectedPropTypes.bind(this);\n    this.constructionTypeToggleDropdown = this.constructionTypeToggleDropdown.bind(\n      this\n    );\n    this.applySelectedConstructionTypes = this.applySelectedConstructionTypes.bind(\n      this\n    );\n    this.stateToggleDropdown = this.stateToggleDropdown.bind(this);\n    this.applySelectedStates = this.applySelectedStates.bind(this);\n    this.nationwideCheckboxChange = this.nationwideCheckboxChange.bind(this);\n    this.needCashFlowCheckboxChange = this.needCashFlowCheckboxChange.bind(\n      this\n    );\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.id && this.props.item) {\n      this.setState({\n        fundTypes: this.props.item.fund_types\n          ? this.props.item.fund_types.map((t) => t.value)\n          : [],\n        returnTypes: this.props.item.return_types\n          ? this.props.item.return_types.map((t) => t.value)\n          : [],\n        investmentTypes: this.props.item.investment_types\n          ? this.props.item.investment_types.map((t) => t.value)\n          : [],\n        maxLTV: this.props.item.ltv_max,\n        minIRR: this.props.item.min_irr,\n        minInvestment: this.props.item.investment_min,\n        maxInvestment: this.props.item.investment_max,\n        minHoldingPeriod: this.props.item.holding_period_min,\n        maxHoldingPeriod: this.props.item.holding_period_max,\n        minRate: this.props.item.rate_min,\n        maxRate: this.props.item.rate_max,\n        propertyTypes: this.props.item.property_types\n          ? this.props.item.property_types.map((p) => p.value)\n          : [],\n        constructionTypes: this.props.item.construction_types\n          ? this.props.item.construction_types.map((p) => p.value)\n          : [],\n        states: this.props.item.states\n          ? this.props.item.states.map((p) => p.value)\n          : [],\n        nationwide: this.props.item.nationwide\n          ? this.props.item.nationwide\n          : false,\n        cashFlowNeeded: this.props.item.cash_flow_needed\n          ? this.props.item.cash_flow_needed\n          : false,\n      });\n    }\n\n    let statesList = [];\n    this.props.statesList\n      .slice(1)\n      .map((s) => statesList.push({ list_type_id: s.id, value: s.state }));\n    this.setState({ localStatesList: statesList });\n  }\n\n  fundTypeToggleDropdown() {\n    let show = !this.state.fundTypeToggleDropdown;\n    this.setState({ fundTypeToggleDropdown: show }, function () {\n      if (show) {\n        if (this.state.returnTypeToggleDropdown) {\n          this.setState({ returnTypeToggleDropdown: false });\n        } else if (this.state.investmentTypeToggleDropdown) {\n          this.setState({ investmentTypeToggleDropdown: false });\n        } else if (this.state.propertyToggleDropdown) {\n          this.setState({ propertyToggleDropdown: false });\n        } else if (this.state.constructionTypeToggleDropdown) {\n          this.setState({ constructionTypeToggleDropdown: false });\n        } else if (this.state.stateToggleDropdown) {\n          this.setState({ stateToggleDropdown: false });\n        }\n      }\n    });\n  }\n\n  applySelectedFundTypes(selectedOptions) {\n    this.setState({ fundTypes: selectedOptions });\n  }\n\n  returnTypeToggleDropdown() {\n    let show = !this.state.returnTypeToggleDropdown;\n    this.setState({ returnTypeToggleDropdown: show }, function () {\n      if (show) {\n        if (this.state.fundTypeToggleDropdown) {\n          this.setState({ fundTypeToggleDropdown: false });\n        } else if (this.state.investmentTypeToggleDropdown) {\n          this.setState({ investmentTypeToggleDropdown: false });\n        } else if (this.state.propertyToggleDropdown) {\n          this.setState({ propertyToggleDropdown: false });\n        } else if (this.state.constructionTypeToggleDropdown) {\n          this.setState({ constructionTypeToggleDropdown: false });\n        } else if (this.state.stateToggleDropdown) {\n          this.setState({ stateToggleDropdown: false });\n        }\n      }\n    });\n  }\n\n  applySelectedReturnTypes(selectedOptions) {\n    this.setState({ returnTypes: selectedOptions });\n  }\n\n  investmentTypeToggleDropdown() {\n    let show = !this.state.investmentTypeToggleDropdown;\n    this.setState({ investmentTypeToggleDropdown: show }, function () {\n      if (show) {\n        if (this.state.fundTypeToggleDropdown) {\n          this.setState({ fundTypeToggleDropdown: false });\n        } else if (this.state.returnTypeToggleDropdown) {\n          this.setState({ returnTypeToggleDropdown: false });\n        } else if (this.state.propertyToggleDropdown) {\n          this.setState({ propertyToggleDropdown: false });\n        } else if (this.state.constructionTypeToggleDropdown) {\n          this.setState({ constructionTypeToggleDropdown: false });\n        } else if (this.state.stateToggleDropdown) {\n          this.setState({ stateToggleDropdown: false });\n        }\n      }\n    });\n  }\n\n  applySelectedInvestmentTypes(selectedOptions) {\n    this.setState({ investmentTypes: selectedOptions });\n  }\n\n  maxLTVChange(value) {\n    this.setState({ maxLTV: value ? value / 100 : null });\n  }\n\n  minIRRChange(value) {\n    this.setState({ minIRR: value ? value / 100 : null });\n  }\n\n  minInvestmentChange(e) {\n    this.setState({ minInvestment: e });\n  }\n\n  maxInvestmentChange(e) {\n    this.setState({ maxInvestment: e });\n  }\n\n  minHoldingPeriodChange(value) {\n    this.setState({ minHoldingPeriod: value });\n  }\n\n  maxHoldingPeriodChange(value) {\n    this.setState({ maxHoldingPeriod: value });\n  }\n\n  minRateChange(value) {\n    this.setState({ minRate: value ? value / 100 : null });\n  }\n\n  maxRateChange(value) {\n    this.setState({ maxRate: value ? value / 100 : null });\n  }\n\n  propTypeToggleDropdown() {\n    let show = !this.state.propertyToggleDropdown;\n    this.setState({ propertyToggleDropdown: show }, function () {\n      if (show) {\n        if (this.state.fundTypeToggleDropdown) {\n          this.setState({ fundTypeToggleDropdown: false });\n        } else if (this.state.returnTypeToggleDropdown) {\n          this.setState({ returnTypeToggleDropdown: false });\n        } else if (this.state.investmentTypeToggleDropdown) {\n          this.setState({ investmentTypeToggleDropdown: false });\n        } else if (this.state.constructionTypeToggleDropdown) {\n          this.setState({ constructionTypeToggleDropdown: false });\n        } else if (this.state.stateToggleDropdown) {\n          this.setState({ stateToggleDropdown: false });\n        }\n      }\n    });\n  }\n\n  applySelectedPropTypes(selectedOptions) {\n    this.setState({ propertyTypes: selectedOptions });\n  }\n\n  constructionTypeToggleDropdown() {\n    let show = !this.state.constructionTypeToggleDropdown;\n    this.setState({ constructionTypeToggleDropdown: show }, function () {\n      if (show) {\n        if (this.state.fundTypeToggleDropdown) {\n          this.setState({ fundTypeToggleDropdown: false });\n        } else if (this.state.returnTypeToggleDropdown) {\n          this.setState({ returnTypeToggleDropdown: false });\n        } else if (this.state.investmentTypeToggleDropdown) {\n          this.setState({ investmentTypeToggleDropdown: false });\n        } else if (this.state.propertyToggleDropdown) {\n          this.setState({ propertyToggleDropdown: false });\n        } else if (this.state.stateToggleDropdown) {\n          this.setState({ stateToggleDropdown: false });\n        }\n      }\n    });\n  }\n\n  applySelectedConstructionTypes(selectedOptions) {\n    this.setState({ constructionTypes: selectedOptions });\n  }\n\n  stateToggleDropdown() {\n    let show = !this.state.stateToggleDropdown;\n    this.setState({ stateToggleDropdown: show }, function () {\n      if (show) {\n        if (this.state.fundTypeToggleDropdown) {\n          this.setState({ fundTypeToggleDropdown: false });\n        } else if (this.state.returnTypeToggleDropdown) {\n          this.setState({ returnTypeToggleDropdown: false });\n        } else if (this.state.investmentTypeToggleDropdown) {\n          this.setState({ investmentTypeToggleDropdown: false });\n        } else if (this.state.propertyToggleDropdown) {\n          this.setState({ propertyToggleDropdown: false });\n        } else if (this.state.constructionTypeToggleDropdown) {\n          this.setState({ constructionTypeToggleDropdown: false });\n        }\n      }\n    });\n  }\n\n  applySelectedStates(selectedOptions) {\n    this.setState({ states: selectedOptions });\n  }\n\n  nationwideCheckboxChange() {\n    this.setState({\n      nationwide: !this.state.nationwide,\n      stateToggleDropdown: false,\n    });\n  }\n\n  needCashFlowCheckboxChange() {\n    this.setState({ cashFlowNeeded: !this.state.cashFlowNeeded });\n  }\n\n  valid() {\n    let invalidFields = [];\n    if (this.state.fundTypes.length === 0) {\n      invalidFields.push(\"Fund Types\");\n    }\n    if (\n      !this.state.minInvestment ||\n      +parseFloat(this.state.minInvestment) === 0\n    ) {\n      invalidFields.push(\"Min Investment\");\n    }\n    if (\n      !this.state.maxInvestment ||\n      +parseFloat(this.state.maxInvestment) === 0\n    ) {\n      invalidFields.push(\"Max Investment\");\n    }\n    if (this.state.propertyTypes.length === 0) {\n      invalidFields.push(\"Property Types\");\n    }\n    if (\n      this.state.propertyTypes.find((t) => t === 7) &&\n      this.state.constructionTypes.length === 0\n    ) {\n      invalidFields.push(\"Construction Types\");\n    }\n    if (this.state.states.length === 0 && !this.state.nationwide) {\n      invalidFields.push(\"Location\");\n    }\n\n    if (invalidFields.length) {\n      //separate each invalid field with comma. last field should have 'and' instead\n      let errorMessage = invalidFields\n        .join(\", \")\n        .replace(/,(?!.*,)/gim, \" and\");\n      errorMessage += \" is required!\";\n      this.setState({ errorMessage });\n      return false;\n    } else if (\n      this.state.minInvestment > this.state.maxInvestment ||\n      this.state.minHoldingPeriod > this.state.maxHoldingPeriod ||\n      this.state.minRate > this.state.maxRate\n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async submit() {\n    if (this.valid()) {\n      let constructionTypes = this.state.propertyTypes.find((t) => t === 7)\n        ? this.state.constructionTypes\n        : [];\n\n      let response = await this.props.submit(\n        this.state.maxLTV,\n        this.state.minIRR,\n        parseInt(this.state.minInvestment, 10),\n        parseInt(this.state.maxInvestment, 10),\n        this.state.minHoldingPeriod,\n        this.state.maxHoldingPeriod,\n        this.state.minRate,\n        this.state.maxRate,\n        this.state.cashFlowNeeded ? 1 : 0,\n        this.state.nationwide ? 1 : 0,\n        this.state.states,\n        this.state.returnTypes,\n        constructionTypes,\n        this.state.propertyTypes,\n        this.state.fundTypes,\n        this.state.investmentTypes,\n        this.props.id\n      );\n\n      if (response) {\n        Navigation.go(\n          getParameterByName(\"previous_page\")\n            ? decodeURIComponent(getParameterByName(\"previous_page\"))\n            : `/investing-criteria`\n        );\n      } else {\n        this.setState({ errorMessage: this.props.message });\n      }\n    }\n  }\n\n  async delete() {\n    let response = await this.props.delete(this.props.id);\n\n    if (response) {\n      Navigation.go(\n        getParameterByName(\"previous_page\")\n          ? decodeURIComponent(getParameterByName(\"previous_page\"))\n          : `/investing-criteria`\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"lc-header\">\n          <Container>\n            <h2>{this.props.id ? \"Edit\" : \"Add\"}</h2>\n            <Link\n              to={\n                getParameterByName(\"previous_page\")\n                  ? decodeURIComponent(getParameterByName(\"previous_page\"))\n                  : `/investing-criteria`\n              }\n            >\n              <div className=\"close-circle\">\n                <i className=\"material-icons\">close</i>\n              </div>\n            </Link>\n          </Container>\n        </div>\n        <div className=\"ic-panel ic-edit-panel mui-panel panel\">\n          <div className=\"panel-heading\">\n            <p className=\"large-text bold-text\">\n              {this.props.id ? \"Edit Profile\" : \"Add New Profile\"}\n            </p>\n            <i\n              className={this.props.id ? \"material-icons\" : \"hidden\"}\n              onClick={() => this.setState({ showDeleteModal: true })}\n            >\n              delete\n            </i>\n          </div>\n          <div className=\"panel-body\">\n            <Row>\n              <Col md=\"3\">\n                <div className=\"ic-dropdown-container ic-dropdown-right\">\n                  <p className=\"small-title\">Fund Type *</p>\n                  <MultiSelect\n                    options={this.props.fundTypesList}\n                    selectedOptions={this.state.fundTypes}\n                    showDropdown={this.state.fundTypeToggleDropdown}\n                    toggleDropdown={this.fundTypeToggleDropdown}\n                    applySelected={this.applySelectedFundTypes}\n                  />\n                </div>\n              </Col>\n              <Col md=\"3\">\n                <div className=\"ic-dropdown-container ic-dropdown-right\">\n                  <p className=\"small-title\">Return Type</p>\n                  <MultiSelect\n                    options={this.props.returnTypesList}\n                    selectedOptions={this.state.returnTypes}\n                    showDropdown={this.state.returnTypeToggleDropdown}\n                    toggleDropdown={this.returnTypeToggleDropdown}\n                    applySelected={this.applySelectedReturnTypes}\n                  />\n                </div>\n              </Col>\n              <Col md=\"3\">\n                <div className=\"ic-dropdown-container ic-dropdown-right\">\n                  <p className=\"small-title\">Investment Types</p>\n                  <MultiSelect\n                    options={this.props.investmentTypesList}\n                    selectedOptions={this.state.investmentTypes}\n                    showDropdown={this.state.investmentTypeToggleDropdown}\n                    toggleDropdown={this.investmentTypeToggleDropdown}\n                    applySelected={this.applySelectedInvestmentTypes}\n                  />\n                </div>\n              </Col>\n            </Row>\n            <div className=\"ic-panel-grid\">\n              <div>\n                <p className=\"small-title\">Max LTV / LTC</p>\n                <PercentageInput\n                  value={this.state.maxLTV}\n                  update={this.maxLTVChange}\n                />\n              </div>\n              <div>\n                <p className=\"small-title\">Min IRR</p>\n                <PercentageInput\n                  value={this.state.minIRR}\n                  update={this.minIRRChange}\n                />\n              </div>\n              <div>\n                <p className=\"small-title\">Min Investment *</p>\n                <CurrencyInput\n                  value={this.state.minInvestment}\n                  update={this.minInvestmentChange}\n                  maxValue={this.state.maxInvestment}\n                />\n              </div>\n              <div>\n                <p className=\"small-title\">Max Investment *</p>\n                <CurrencyInput\n                  value={this.state.maxInvestment}\n                  update={this.maxInvestmentChange}\n                  minValue={this.state.minInvestment}\n                />\n              </div>\n              <div>\n                <p className=\"small-title\">Min Hold Period</p>\n                <NumberInput\n                  value={this.state.minHoldingPeriod}\n                  update={this.minHoldingPeriodChange}\n                  decimalPlaces={1}\n                  maxValue={this.state.maxHoldingPeriod}\n                />\n              </div>\n              <div>\n                <p className=\"small-title\">Max Hold Period</p>\n                <NumberInput\n                  value={this.state.maxHoldingPeriod}\n                  update={this.maxHoldingPeriodChange}\n                  decimalPlaces={1}\n                  minValue={this.state.minHoldingPeriod}\n                />\n              </div>\n              <div>\n                <p className=\"small-title\">Min Rate</p>\n                <PercentageInput\n                  value={this.state.minRate}\n                  update={this.minRateChange}\n                  maxValue={this.state.maxRate}\n                />\n              </div>\n              <div>\n                <p className=\"small-title\">Max Rate</p>\n                <PercentageInput\n                  value={this.state.maxRate}\n                  update={this.maxRateChange}\n                  minValue={this.state.minRate}\n                />\n              </div>\n            </div>\n            <Row className=\"flex-end-row\">\n              <Col md=\"6\">\n                <div className=\"ic-dropdown-container ic-dropdown-right\">\n                  <p className=\"small-title\">Property Types *</p>\n                  <MultiSelect\n                    options={this.props.propTypesList}\n                    selectedOptions={this.state.propertyTypes}\n                    showDropdown={this.state.propertyToggleDropdown}\n                    toggleDropdown={this.propTypeToggleDropdown}\n                    applySelected={this.applySelectedPropTypes}\n                  />\n                </div>\n              </Col>\n              <Col md=\"4\">\n                <div className=\"ic-dropdown-container ic-dropdown-right\">\n                  <p className=\"small-title\">Location *</p>\n                  <MultiSelect\n                    options={this.state.localStatesList}\n                    selectedOptions={this.state.states}\n                    showDropdown={this.state.stateToggleDropdown}\n                    disabled={this.state.nationwide}\n                    toggleDropdown={this.stateToggleDropdown}\n                    applySelected={this.applySelectedStates}\n                  />\n                </div>\n              </Col>\n              <Col md=\"2\" className=\"ic-cash-flow\">\n                <div className=\"rkmd-checkbox checkbox-ripple\">\n                  <label className=\"input-checkbox checkbox-lightBlue\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"checkbox-1\"\n                      checked={this.state.nationwide}\n                      onChange={this.nationwideCheckboxChange}\n                    />\n                    <span className=\"checkbox\"></span>\n                    <span className=\"ripple\"></span>\n                  </label>\n                  <p htmlFor=\"checkbox-1\" className=\"label\">\n                    Nationwide\n                  </p>\n                </div>\n              </Col>\n            </Row>\n            <Row\n              className={\n                this.state.propertyTypes.find((t) => t === 7) ? \"\" : \"hidden\"\n              }\n            >\n              <Col md=\"6\">\n                <div className=\"ic-dropdown-container ic-dropdown-right\">\n                  <p className=\"small-title\">Construction *</p>\n                  <MultiSelect\n                    options={this.props.constructionTypesList}\n                    selectedOptions={this.state.constructionTypes}\n                    showDropdown={this.state.constructionTypeToggleDropdown}\n                    toggleDropdown={this.constructionTypeToggleDropdown}\n                    applySelected={this.applySelectedConstructionTypes}\n                  />\n                </div>\n              </Col>\n            </Row>\n            <Row className=\"ic-cash-flow\">\n              <div className=\"small-title bold-text\">\n                Does Investor Need Cash Flow\n              </div>\n              <div className=\"rkmd-checkbox checkbox-ripple\">\n                <label className=\"input-checkbox checkbox-lightBlue\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"checkbox-1\"\n                    checked={this.state.cashFlowNeeded}\n                    onChange={this.needCashFlowCheckboxChange}\n                  />\n                  <span className=\"checkbox\"></span>\n                  <span className=\"ripple\"></span>\n                </label>\n                <p htmlFor=\"checkbox-1\" className=\"label\">\n                  Cash Flowing Deal\n                </p>\n              </div>\n            </Row>\n            {/*<Row>*/}\n            {/*<p className=\"small-title bold-text\">Notes</p>*/}\n            {/*<textarea className=\"ic-notes\" onChange={this.noteChange} value={this.state.note}/>*/}\n            {/*</Row>*/}\n            <div className=\"ic-btns\">\n              <Button\n                variant=\"flat\"\n                className=\"cancel-lc-btn mui--z1\"\n                onClick={() =>\n                  Navigation.go(\n                    decodeURIComponent(\n                      getParameterByName(\"previous_page\") ||\n                        `/investing-criteria`\n                    )\n                  )\n                }\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"flat\"\n                className=\"save-lc-btn mui--z1\"\n                onClick={() => this.submit()}\n              >\n                Save\n              </Button>\n            </div>\n            <p className=\"error-block text-right\">{this.state.errorMessage}</p>\n          </div>\n        </div>\n\n        <ConfirmationModal\n          isOpen={this.state.showDeleteModal}\n          message=\"Are you sure you would like to delete this investing criteria?\"\n          close={() => this.setState({ showDeleteModal: false })}\n          confirm={() => this.delete()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default InvestingCriteriaForm;\n"],"sourceRoot":""}