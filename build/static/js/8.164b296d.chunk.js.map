{"version":3,"sources":["components/dealDetails/AddEditDealNote.js","components/dealDetails/AddEditNoteContainer.js","components/common/ConfirmationModal.js"],"names":["AddEditDealNote","props","state","note","dueDate","assignee","assignToMe","dueDateModalOpen","showAssignModal","showDeleteModal","showMarkDoneModal","showUnsavedChangesModal","close","bind","closeDueDateModal","openAssignModal","closeAssignModal","openConfirmDeleteModal","closeConfirmDeleteModal","deleteDueDate","deleteNote","markNoteDone","openDueDateModal","saveNote","saveNoteAndMarkDone","submitDealNote","submitDueDate","noteInputChange","confirmMarkNoteDone","closeUnsavedChangesModal","openConfirmMarkDoneModal","closeConfirmMarkDoneModal","updateNoteReview","datePickerChange","nextProps","this","setState","notes","addOrUpdateNote","dealId","noteId","moment","isValid","clearNote","Navigation","goBack","e","target","value","assignNote","date","format","toString","addOrUpdateDueDate","qtsPlacer","updateNoteReviewed","loading","className","isOpen","ariaHideApp","contentLabel","shouldCloseOnOverlayClick","src","alt","onClick","variant","placeholder","onChange","Date","inputProps","ConfirmationModal","message","confirm","onAfterOpen","type","id","checked","assignToMeChange","htmlFor","assigneeChange","label","brokers","filter","b","member_id","user_data","map","broker","index","key","full_name","React","Component","AddEditNoteContainer","match","params","actions","getNoteById","getDealById","getBrokersByDeal","dealDetails","deal","toast","showSuccessToast","Expire","closeToast","closeDealNoteSuccessToast","delay","showErrorToast","closeDealNoteErrorToast","show","success","parseInt","due_date","qts_placer","JSON","parse","localStorage","getItem","markNoteAsDone","deleteDealNote","addOrUpdateNoteDueDate","connect","dispatch","bindActionCreators","dealDetailsActions","confirmBtnText"],"mappings":"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","file":"static/js/8.164b296d.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-modal\";\nimport Row from \"muicss/lib/react/row\";\nimport Select from \"muicss/lib/react/select\";\nimport Option from \"muicss/lib/react/option\";\nimport { Navigation } from \"../../lib\";\nimport Button from \"muicss/lib/react/button\";\nimport moment from \"moment\";\nimport \"react-datetime/css/react-datetime.css\";\nimport Datetime from \"react-datetime\";\nimport ConfirmationModal from \"../common/ConfirmationModal\";\n\nclass AddEditDealNote extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      note: \"\",\n      dueDate: null,\n      assignee: 0,\n      assignToMe: true,\n      dueDateModalOpen: false,\n      showAssignModal: false,\n      showDeleteModal: false,\n      showMarkDoneModal: false,\n      showUnsavedChangesModal: false,\n    };\n\n    this.close = this.close.bind(this);\n    this.closeDueDateModal = this.closeDueDateModal.bind(this);\n    this.openAssignModal = this.openAssignModal.bind(this);\n    this.closeAssignModal = this.closeAssignModal.bind(this);\n    this.openConfirmDeleteModal = this.openConfirmDeleteModal.bind(this);\n    this.closeConfirmDeleteModal = this.closeConfirmDeleteModal.bind(this);\n    this.deleteDueDate = this.deleteDueDate.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n    this.markNoteDone = this.markNoteDone.bind(this);\n    this.openDueDateModal = this.openDueDateModal.bind(this);\n    this.saveNote = this.saveNote.bind(this);\n    this.saveNoteAndMarkDone = this.saveNoteAndMarkDone.bind(this);\n    this.submitDealNote = this.submitDealNote.bind(this);\n    this.submitDueDate = this.submitDueDate.bind(this);\n    this.noteInputChange = this.noteInputChange.bind(this);\n    this.confirmMarkNoteDone = this.confirmMarkNoteDone.bind(this);\n    this.closeUnsavedChangesModal = this.closeUnsavedChangesModal.bind(this);\n    this.openConfirmMarkDoneModal = this.openConfirmMarkDoneModal.bind(this);\n    this.closeConfirmMarkDoneModal = this.closeConfirmMarkDoneModal.bind(this);\n    this.updateNoteReview = this.updateNoteReview.bind(this);\n    this.datePickerChange = this.datePickerChange.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!this.state.note && !this.state.dueDate) {\n      this.setState({\n        note: nextProps.notes ? nextProps.notes : \"\",\n        dueDate: nextProps.dueDate ? nextProps.dueDate : null,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      note: \"\",\n      assignee: 0,\n      assignToMe: true,\n      dueDate: null,\n      dueDateModalOpen: false,\n      showDeleteModal: false,\n      showMarkDoneModal: false,\n      showUnsavedChangesModal: false,\n    });\n  }\n\n  saveNote() {\n    this.props.addOrUpdateNote(\n      this.props.dealId,\n      this.props.noteId,\n      this.state.note,\n      moment(this.state.dueDate).isValid() ? this.state.dueDate : null\n    );\n  }\n\n  submitDealNote() {\n    this.saveNote();\n    this.updateNoteReview();\n    this.close();\n  }\n\n  close() {\n    this.props.clearNote();\n    Navigation.goBack();\n  }\n\n  openConfirmMarkDoneModal() {\n    this.setState({ showMarkDoneModal: true });\n  }\n\n  closeConfirmMarkDoneModal() {\n    this.setState({ showMarkDoneModal: false });\n  }\n\n  confirmMarkNoteDone() {\n    let unsavedChanges = this.state.note !== this.props.notes;\n    if (unsavedChanges) {\n      this.setState({\n        showMarkDoneModal: false,\n        showUnsavedChangesModal: true,\n      });\n    } else {\n      this.markNoteDone();\n    }\n  }\n\n  closeUnsavedChangesModal() {\n    this.setState({ showUnsavedChangesModal: false });\n  }\n\n  saveNoteAndMarkDone() {\n    this.saveNote();\n    this.markNoteDone();\n  }\n\n  markNoteDone() {\n    this.setState({ showMarkDoneModal: false });\n    this.props.markNoteDone(this.props.noteId, this.props.dealId);\n    this.updateNoteReview();\n    this.close();\n  }\n\n  assignToMeChange() {\n    if (this.state.assignee > 0 && !this.state.assignToMe) {\n      this.setState({ assignee: 0 });\n    }\n    this.setState({ assignToMe: !this.state.assignToMe });\n  }\n\n  openAssignModal() {\n    this.setState({ showAssignModal: true });\n  }\n\n  assigneeChange(e) {\n    if (e.target.value > 0) {\n      this.setState({ assignToMe: false });\n    } else {\n      this.setState({ assignToMe: true });\n    }\n    this.setState({ assignee: e.target.value === \"\" ? 0 : e.target.value });\n  }\n\n  assignNote() {\n    this.props.assignNote(\n      this.props.noteId,\n      this.state.assignee === 0 ? null : this.state.assignee\n    );\n    this.closeAssignModal();\n  }\n\n  closeAssignModal() {\n    this.setState({ showAssignModal: false });\n  }\n\n  closeConfirmDeleteModal() {\n    this.setState({ showDeleteModal: false });\n  }\n\n  openConfirmDeleteModal() {\n    this.setState({ showDeleteModal: true });\n  }\n\n  deleteNote() {\n    this.setState({ showDeleteModal: false });\n    this.props.deleteNote(this.props.noteId, this.props.dealId);\n    this.updateNoteReview();\n    this.close();\n  }\n\n  noteInputChange(e) {\n    this.setState({ note: e.target.value });\n  }\n\n  openDueDateModal() {\n    this.setState({ dueDateModalOpen: true });\n  }\n\n  closeDueDateModal() {\n    this.setState({ dueDateModalOpen: false, dueDate: this.props.dueDate });\n  }\n\n  datePickerChange(date) {\n    this.setState({\n      dueDate: moment(date).format(\"YYYY-MM-DD HH:mm:ss\").toString(),\n    });\n  }\n\n  deleteDueDate() {\n    this.setState({ dueDate: null });\n  }\n\n  submitDueDate() {\n    this.props.addOrUpdateDueDate(\n      this.props.noteId,\n      moment(this.state.dueDate).isValid() ? this.state.dueDate : null\n    );\n    this.updateNoteReview();\n    this.setState({ dueDateModalOpen: false });\n  }\n\n  updateNoteReview() {\n    if (this.props.qtsPlacer) {\n      this.props.updateNoteReviewed(this.props.dealId);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.loading ? (\n          <Modal\n            className=\"loading-modal\"\n            isOpen={this.props.loading}\n            ariaHideApp={false}\n            contentLabel=\"Modal\"\n            shouldCloseOnOverlayClick={false}\n          >\n            <div className={this.props.loading ? \"centered-spinner\" : \"hidden\"}>\n              <img\n                src=\"/images/icons/spin.svg\"\n                alt=\"loading-spinner\"\n                className=\"loading-spinner\"\n              />\n            </div>\n          </Modal>\n        ) : (\n          <div>\n            <Row className=\"sub-header\">\n              <div className=\"sub-header-close\">\n                <i className=\"material-icons\" onClick={this.close}>\n                  close\n                </i>\n              </div>\n              <p className=\"white page-title\">\n                {this.props.noteId >= 1 ? \"Edit\" : \"Add\"} Note\n              </p>\n              <div className=\"note-details-actions\">\n                {this.props.noteId >= 1 ? (\n                  <div>\n                    <i\n                      className=\"material-icons\"\n                      onClick={this.openAssignModal}\n                    >\n                      person\n                    </i>\n                    <i\n                      className=\"material-icons\"\n                      onClick={this.openConfirmDeleteModal}\n                    >\n                      delete\n                    </i>\n                    <i\n                      className=\"material-icons\"\n                      onClick={this.openConfirmMarkDoneModal}\n                    >\n                      check\n                    </i>\n                    <i\n                      className=\"material-icons\"\n                      onClick={this.openDueDateModal}\n                    >\n                      access_time\n                    </i>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <Button\n                  variant=\"flat\"\n                  className=\"note-save-btn\"\n                  onClick={this.submitDealNote}\n                >\n                  Save\n                </Button>\n              </div>\n            </Row>\n\n            <div className=\"note-details sub-header-padding\">\n              <textarea\n                className=\"deal-details-note-textarea\"\n                placeholder=\"Note...\"\n                onChange={this.noteInputChange}\n                value={this.state.note}\n              />\n              <Modal\n                className=\"date-time-modal\"\n                isOpen={this.state.dueDateModalOpen}\n                ariaHideApp={false}\n                contentLabel=\"Modal\"\n                shouldCloseOnOverlayClick={true}\n              >\n                <div className=\"modal-header\">\n                  <p className=\"bold-text\">Date and Time</p>\n                </div>\n                <div className=\"date-time\">\n                  <Datetime\n                    value={\n                      moment(this.state.dueDate) &&\n                      moment(this.state.dueDate).isValid()\n                        ? moment(new Date(this.state.dueDate)).format(\n                            \"MM/DD/YYYY h:mm A\"\n                          )\n                        : \"\"\n                    }\n                    onChange={this.datePickerChange}\n                    inputProps={{ placeholder: \"Select Date\" }}\n                  />\n                  <i\n                    className=\"material-icons date-time-clear\"\n                    onClick={this.deleteDueDate}\n                  >\n                    close\n                  </i>\n                </div>\n                <div className=\"modal-btns\">\n                  <Button variant=\"flat\" onClick={this.closeDueDateModal}>\n                    CANCEL\n                  </Button>\n                  <Button variant=\"flat\" onClick={this.submitDueDate}>\n                    SAVE\n                  </Button>\n                </div>\n              </Modal>\n\n              <ConfirmationModal\n                isOpen={this.state.showDeleteModal}\n                message=\"Are you sure you want to delete?\"\n                close={this.closeConfirmDeleteModal}\n                confirm={this.deleteNote}\n              />\n              <Modal\n                className=\"delete-modal\"\n                isOpen={this.state.showUnsavedChangesModal}\n                ariaHideApp={false}\n                contentLabel=\"Modal\"\n                shouldCloseOnOverlayClick={false}\n              >\n                <p className=\"bold-text\">This note has some unsaved changes!</p>\n                <div className=\"modal-btns\">\n                  <Button\n                    variant=\"flat\"\n                    onClick={this.closeUnsavedChangesModal}\n                  >\n                    CANCEL\n                  </Button>\n                  <Button variant=\"flat\" onClick={this.markNoteDone}>\n                    DISCARD\n                  </Button>\n                  <Button variant=\"flat\" onClick={this.saveNoteAndMarkDone}>\n                    SAVE\n                  </Button>\n                </div>\n              </Modal>\n              <ConfirmationModal\n                isOpen={this.state.showMarkDoneModal}\n                message=\"Are you sure you want to mark this note as done?\"\n                close={this.closeConfirmMarkDoneModal}\n                confirm={this.confirmMarkNoteDone}\n              />\n              <Modal\n                className=\"assign-modal\"\n                isOpen={this.state.showAssignModal}\n                ariaHideApp={false}\n                contentLabel=\"Modal\"\n                onAfterOpen={() => {}}\n                shouldCloseOnOverlayClick={true}\n              >\n                <p className=\"bold-text\">Assign to</p>\n                <div className=\"rkmd-checkbox checkbox-ripple\">\n                  <label className=\"input-checkbox checkbox-lightBlue\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"me\"\n                      checked={this.state.assignToMe}\n                      onChange={() => this.assignToMeChange()}\n                    />\n                    <span className=\"checkbox\"></span>\n                    <span className=\"ripple\"></span>\n                  </label>\n                  <p htmlFor=\"me\" className=\"label\">\n                    Assign to me\n                  </p>\n                </div>\n                <Select\n                  className={`${\n                    this.state.assignee === 0 ? \"placeholder\" : \"\"\n                  } assignee-select`}\n                  value={this.state.assignee}\n                  onChange={this.assigneeChange.bind(this)}\n                >\n                  <Option className=\"hidden\" label=\"Assignee\" value={0} />\n                  <Option label=\"Please Select...\" value=\"\" />\n                  {this.props.brokers &&\n                    this.props.brokers\n                      .filter(\n                        (b) => b.member_id !== this.props.user_data.member_id\n                      )\n                      .map((broker, index) => (\n                        <Option\n                          key={index}\n                          label={broker.full_name}\n                          value={broker.member_id}\n                        />\n                      ))}\n                </Select>\n                <div className=\"modal-btns\">\n                  <Button\n                    variant=\"flat\"\n                    onClick={this.closeAssignModal.bind(this)}\n                  >\n                    CANCEL\n                  </Button>\n                  <Button variant=\"flat\" onClick={this.assignNote.bind(this)}>\n                    YES\n                  </Button>\n                </div>\n              </Modal>\n              <Modal\n                className=\"loading-modal\"\n                isOpen={this.props.loading}\n                ariaHideApp={false}\n                contentLabel=\"Modal\"\n                shouldCloseOnOverlayClick={false}\n              >\n                <div\n                  className={this.props.loading ? \"centered-spinner\" : \"hidden\"}\n                >\n                  <img\n                    src=\"/images/icons/spin.svg\"\n                    className=\"loading-spinner\"\n                    alt=\"loading spinner\"\n                  />\n                </div>\n              </Modal>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AddEditDealNote;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Modal from \"react-modal\";\nimport Expire from \"../common/Expire\";\nimport Button from \"muicss/lib/react/button\";\nimport { bindActionCreators } from \"redux\";\nimport * as dealDetailsActions from \"../../actions/dealDetailsActions\";\nimport AddEditDealNote from \"./AddEditDealNote\";\n\nclass AddEditNoteContainer extends React.Component {\n  componentDidMount() {\n    if (this.props.match.params.noteId) {\n      this.props.actions.getNoteById(this.props.match.params.noteId);\n    }\n    this.props.actions.getDealById(this.props.match.params.dealId);\n    this.props.actions.getBrokersByDeal(this.props.match.params.dealId);\n  }\n\n  render() {\n    let note = this.props.dealDetails.note\n      ? this.props.dealDetails.note[0]\n      : null;\n    let deal = this.props.dealDetails.deal ? this.props.dealDetails.deal : null;\n    let toast = null;\n    if (this.props.dealDetails.showSuccessToast) {\n      toast = (\n        <Expire\n          closeToast={this.props.actions.closeDealNoteSuccessToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.dealDetails.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeDealNoteSuccessToast}\n            >\n              Done\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    if (this.props.dealDetails.showErrorToast) {\n      toast = (\n        <Expire\n          closeToast={this.props.actions.closeDealNoteErrorToast}\n          delay={6000}\n        >\n          <div className=\"success-message\">\n            <p>{this.props.dealDetails.message}</p>\n            <Button\n              variant=\"flat\"\n              onClick={this.props.actions.closeDealNoteErrorToast}\n            >\n              Dismiss\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    if (this.props.dealDetails.toast.show) {\n      toast = (\n        <Expire closeToast={this.props.actions.closeToast} delay={6000}>\n          <div className=\"success-message\">\n            <p>{this.props.dealDetails.toast.message}</p>\n            <Button variant=\"flat\" onClick={this.props.actions.closeToast}>\n              {this.props.dealDetails.toast.success ? \"Done\" : \"Dismiss\"}\n            </Button>\n          </div>\n        </Expire>\n      );\n    }\n    return (\n      <div>\n        {this.props.dealDetails.loading ? (\n          <Modal\n            className=\"comps-loading-modal\"\n            ariaHideApp={false}\n            contentLabel=\"modal\"\n            isOpen={this.props.dealDetails.loading}\n            shouldCloseOnOverlayClick={false}\n          >\n            <div\n              className={\n                this.props.dealDetails.loading ? \"centered-spinner\" : \"hidden\"\n              }\n            >\n              <img\n                src=\"/images/icons/spin.svg\"\n                className=\"loading-spinner\"\n                alt=\"loading spinner\"\n              />\n            </div>\n          </Modal>\n        ) : (\n          <div>\n            <AddEditDealNote\n              noteId={\n                this.props.match.params.noteId\n                  ? parseInt(this.props.match.params.noteId, 10)\n                  : null\n              }\n              dealId={\n                this.props.match.params.dealId\n                  ? parseInt(this.props.match.params.dealId, 10)\n                  : null\n              }\n              notes={note ? note.notes : \"\"}\n              dueDate={note ? note.due_date : null}\n              qtsPlacer={deal ? deal.qts_placer : false}\n              user_data={JSON.parse(localStorage.getItem(\"data\"))}\n              brokers={this.props.dealDetails.brokers}\n              loading={this.props.dealDetails.loading}\n              clearNote={this.props.actions.clearNote}\n              assignNote={this.props.actions.assignNote}\n              markNoteDone={this.props.actions.markNoteAsDone}\n              deleteNote={this.props.actions.deleteDealNote}\n              addOrUpdateNote={this.props.actions.addOrUpdateNote}\n              addOrUpdateDueDate={this.props.actions.addOrUpdateNoteDueDate}\n              updateNoteReviewed={this.props.actions.updateNoteReviewed}\n            />\n            {toast}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    dealDetails: state.dealDetails,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(dealDetailsActions, dispatch),\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddEditNoteContainer);\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport Button from \"muicss/lib/react/button\";\n\nclass ConfirmationModal extends React.Component {\n  render() {\n    return (\n      <Modal\n        className=\"delete-modal\"\n        isOpen={this.props.isOpen}\n        ariaHideApp={false}\n        contentLabel=\"Modal\"\n        shouldCloseOnOverlayClick={true}\n      >\n        <p className=\"bold-text\">{this.props.message}</p>\n        <div className=\"modal-btns\">\n          <Button variant=\"flat\" onClick={this.props.close}>\n            CANCEL\n          </Button>\n          <Button variant=\"flat\" onClick={this.props.confirm}>\n            {this.props.confirmBtnText ? this.props.confirmBtnText : \"YES\"}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default ConfirmationModal;\n"],"sourceRoot":""}